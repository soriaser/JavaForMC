

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Jan 07 20:15:24 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    61  0000                     
    62                           	psect	idataBANK0
    63  001C32                     __pidataBANK0:
    64                           	opt stack 0
    65                           
    66                           ;initializer for _SerialPort_CurrentValueRx
    67  001C32  FF                 	db	255
    68                           
    69                           	psect	mediumconst
    70  007BFA                     __pmediumconst:
    71                           	opt stack 0
    72  007BFA  00                 	db	0
    73  007BFB                     _JavaClass_Data:
    74                           	opt stack 0
    75  007BFB  00                 	db	0
    76  007BFC  00                 	db	0
    77  007BFD  00                 	db	0
    78  007BFE  00                 	db	0
    79  007BFF  00                 	db	0
    80  007C00  00                 	db	0
    81  007C01  00                 	db	0
    82  007C02  00                 	db	0
    83  007C03  00                 	db	0
    84  007C04  00                 	db	0
    85  007C05  00                 	db	0
    86  007C06  00                 	db	0
    87  007C07  00                 	db	0
    88  007C08  00                 	db	0
    89  007C09  00                 	db	0
    90  007C0A  00                 	db	0
    91  007C0B  00                 	db	0
    92  007C0C  00                 	db	0
    93  007C0D  00                 	db	0
    94  007C0E  00                 	db	0
    95  007C0F  00                 	db	0
    96  007C10  00                 	db	0
    97  007C11  00                 	db	0
    98  007C12  00                 	db	0
    99  007C13  00                 	db	0
   100  007C14  00                 	db	0
   101  007C15  00                 	db	0
   102  007C16  00                 	db	0
   103  007C17  00                 	db	0
   104  007C18  00                 	db	0
   105  007C19  00                 	db	0
   106  007C1A  00                 	db	0
   107  007C1B  00                 	db	0
   108  007C1C  00                 	db	0
   109  007C1D  00                 	db	0
   110  007C1E  00                 	db	0
   111  007C1F  00                 	db	0
   112  007C20  00                 	db	0
   113  007C21  00                 	db	0
   114  007C22  00                 	db	0
   115  007C23  00                 	db	0
   116  007C24  00                 	db	0
   117  007C25  00                 	db	0
   118  007C26  00                 	db	0
   119  007C27  00                 	db	0
   120  007C28  00                 	db	0
   121  007C29  00                 	db	0
   122  007C2A  00                 	db	0
   123  007C2B  00                 	db	0
   124  007C2C  00                 	db	0
   125  007C2D  00                 	db	0
   126  007C2E  00                 	db	0
   127  007C2F  00                 	db	0
   128  007C30  00                 	db	0
   129  007C31  00                 	db	0
   130  007C32  00                 	db	0
   131  007C33  00                 	db	0
   132  007C34  00                 	db	0
   133  007C35  00                 	db	0
   134  007C36  00                 	db	0
   135  007C37  00                 	db	0
   136  007C38  00                 	db	0
   137  007C39  00                 	db	0
   138  007C3A  00                 	db	0
   139  007C3B  00                 	db	0
   140  007C3C  00                 	db	0
   141  007C3D  00                 	db	0
   142  007C3E  00                 	db	0
   143  007C3F  00                 	db	0
   144  007C40  00                 	db	0
   145  007C41  00                 	db	0
   146  007C42  00                 	db	0
   147  007C43  00                 	db	0
   148  007C44  00                 	db	0
   149  007C45  00                 	db	0
   150  007C46  00                 	db	0
   151  007C47  00                 	db	0
   152  007C48  00                 	db	0
   153  007C49  00                 	db	0
   154  007C4A  00                 	db	0
   155  007C4B  00                 	db	0
   156  007C4C  00                 	db	0
   157  007C4D  00                 	db	0
   158  007C4E  00                 	db	0
   159  007C4F  00                 	db	0
   160  007C50  00                 	db	0
   161  007C51  00                 	db	0
   162  007C52  00                 	db	0
   163  007C53  00                 	db	0
   164  007C54  00                 	db	0
   165  007C55  00                 	db	0
   166  007C56  00                 	db	0
   167  007C57  00                 	db	0
   168  007C58  00                 	db	0
   169  007C59  00                 	db	0
   170  007C5A  00                 	db	0
   171  007C5B  00                 	db	0
   172  007C5C  00                 	db	0
   173  007C5D  00                 	db	0
   174  007C5E  00                 	db	0
   175  007C5F  00                 	db	0
   176  007C60  00                 	db	0
   177  007C61  00                 	db	0
   178  007C62  00                 	db	0
   179  007C63  00                 	db	0
   180  007C64  00                 	db	0
   181  007C65  00                 	db	0
   182  007C66  00                 	db	0
   183  007C67  00                 	db	0
   184  007C68  00                 	db	0
   185  007C69  00                 	db	0
   186  007C6A  00                 	db	0
   187  007C6B  00                 	db	0
   188  007C6C  00                 	db	0
   189  007C6D  00                 	db	0
   190  007C6E  00                 	db	0
   191  007C6F  00                 	db	0
   192  007C70  00                 	db	0
   193  007C71  00                 	db	0
   194  007C72  00                 	db	0
   195  007C73  00                 	db	0
   196  007C74  00                 	db	0
   197  007C75  00                 	db	0
   198  007C76  00                 	db	0
   199  007C77  00                 	db	0
   200  007C78  00                 	db	0
   201  007C79  00                 	db	0
   202  007C7A  00                 	db	0
   203  007C7B  00                 	db	0
   204  007C7C  00                 	db	0
   205  007C7D  00                 	db	0
   206  007C7E  00                 	db	0
   207  007C7F  00                 	db	0
   208  007C80  00                 	db	0
   209  007C81  00                 	db	0
   210  007C82  00                 	db	0
   211  007C83  00                 	db	0
   212  007C84  00                 	db	0
   213  007C85  00                 	db	0
   214  007C86  00                 	db	0
   215  007C87  00                 	db	0
   216  007C88  00                 	db	0
   217  007C89  00                 	db	0
   218  007C8A  00                 	db	0
   219  007C8B  00                 	db	0
   220  007C8C  00                 	db	0
   221  007C8D  00                 	db	0
   222  007C8E  00                 	db	0
   223  007C8F  00                 	db	0
   224  007C90  00                 	db	0
   225  007C91  00                 	db	0
   226  007C92  00                 	db	0
   227  007C93  00                 	db	0
   228  007C94  00                 	db	0
   229  007C95  00                 	db	0
   230  007C96  00                 	db	0
   231  007C97  00                 	db	0
   232  007C98  00                 	db	0
   233  007C99  00                 	db	0
   234  007C9A  00                 	db	0
   235  007C9B  00                 	db	0
   236  007C9C  00                 	db	0
   237  007C9D  00                 	db	0
   238  007C9E  00                 	db	0
   239  007C9F  00                 	db	0
   240  007CA0  00                 	db	0
   241  007CA1  00                 	db	0
   242  007CA2  00                 	db	0
   243  007CA3  00                 	db	0
   244  007CA4  00                 	db	0
   245  007CA5  00                 	db	0
   246  007CA6  00                 	db	0
   247  007CA7  00                 	db	0
   248  007CA8  00                 	db	0
   249  007CA9  00                 	db	0
   250  007CAA  00                 	db	0
   251  007CAB  00                 	db	0
   252  007CAC  00                 	db	0
   253  007CAD  00                 	db	0
   254  007CAE  00                 	db	0
   255  007CAF  00                 	db	0
   256  007CB0  00                 	db	0
   257  007CB1  00                 	db	0
   258  007CB2  00                 	db	0
   259  007CB3  00                 	db	0
   260  007CB4  00                 	db	0
   261  007CB5  00                 	db	0
   262  007CB6  00                 	db	0
   263  007CB7  00                 	db	0
   264  007CB8  00                 	db	0
   265  007CB9  00                 	db	0
   266  007CBA  00                 	db	0
   267  007CBB  00                 	db	0
   268  007CBC  00                 	db	0
   269  007CBD  00                 	db	0
   270  007CBE  00                 	db	0
   271  007CBF  00                 	db	0
   272  007CC0  00                 	db	0
   273  007CC1  00                 	db	0
   274  007CC2  00                 	db	0
   275  007CC3  00                 	db	0
   276  007CC4  00                 	db	0
   277  007CC5  00                 	db	0
   278  007CC6  00                 	db	0
   279  007CC7  00                 	db	0
   280  007CC8  00                 	db	0
   281  007CC9  00                 	db	0
   282  007CCA  00                 	db	0
   283  007CCB  00                 	db	0
   284  007CCC  00                 	db	0
   285  007CCD  00                 	db	0
   286  007CCE  00                 	db	0
   287  007CCF  00                 	db	0
   288  007CD0  00                 	db	0
   289  007CD1  00                 	db	0
   290  007CD2  00                 	db	0
   291  007CD3  00                 	db	0
   292  007CD4  00                 	db	0
   293  007CD5  00                 	db	0
   294  007CD6  00                 	db	0
   295  007CD7  00                 	db	0
   296  007CD8  00                 	db	0
   297  007CD9  00                 	db	0
   298  007CDA  00                 	db	0
   299  007CDB  00                 	db	0
   300  007CDC  00                 	db	0
   301  007CDD  00                 	db	0
   302  007CDE  00                 	db	0
   303  007CDF  00                 	db	0
   304  007CE0  00                 	db	0
   305  007CE1  00                 	db	0
   306  007CE2  00                 	db	0
   307  007CE3  00                 	db	0
   308  007CE4  00                 	db	0
   309  007CE5  00                 	db	0
   310  007CE6  00                 	db	0
   311  007CE7  00                 	db	0
   312  007CE8  00                 	db	0
   313  007CE9  00                 	db	0
   314  007CEA  00                 	db	0
   315  007CEB  00                 	db	0
   316  007CEC  00                 	db	0
   317  007CED  00                 	db	0
   318  007CEE  00                 	db	0
   319  007CEF  00                 	db	0
   320  007CF0  00                 	db	0
   321  007CF1  00                 	db	0
   322  007CF2  00                 	db	0
   323  007CF3  00                 	db	0
   324  007CF4  00                 	db	0
   325  007CF5  00                 	db	0
   326  007CF6  00                 	db	0
   327  007CF7  00                 	db	0
   328  007CF8  00                 	db	0
   329  007CF9  00                 	db	0
   330  007CFA  00                 	db	0
   331  007CFB  00                 	db	0
   332  007CFC  00                 	db	0
   333  007CFD  00                 	db	0
   334  007CFE  00                 	db	0
   335  007CFF  00                 	db	0
   336  007D00  00                 	db	0
   337  007D01  00                 	db	0
   338  007D02  00                 	db	0
   339  007D03  00                 	db	0
   340  007D04  00                 	db	0
   341  007D05  00                 	db	0
   342  007D06  00                 	db	0
   343  007D07  00                 	db	0
   344  007D08  00                 	db	0
   345  007D09  00                 	db	0
   346  007D0A  00                 	db	0
   347  007D0B  00                 	db	0
   348  007D0C  00                 	db	0
   349  007D0D  00                 	db	0
   350  007D0E  00                 	db	0
   351  007D0F  00                 	db	0
   352  007D10  00                 	db	0
   353  007D11  00                 	db	0
   354  007D12  00                 	db	0
   355  007D13  00                 	db	0
   356  007D14  00                 	db	0
   357  007D15  00                 	db	0
   358  007D16  00                 	db	0
   359  007D17  00                 	db	0
   360  007D18  00                 	db	0
   361  007D19  00                 	db	0
   362  007D1A  00                 	db	0
   363  007D1B  00                 	db	0
   364  007D1C  00                 	db	0
   365  007D1D  00                 	db	0
   366  007D1E  00                 	db	0
   367  007D1F  00                 	db	0
   368  007D20  00                 	db	0
   369  007D21  00                 	db	0
   370  007D22  00                 	db	0
   371  007D23  00                 	db	0
   372  007D24  00                 	db	0
   373  007D25  00                 	db	0
   374  007D26  00                 	db	0
   375  007D27  00                 	db	0
   376  007D28  00                 	db	0
   377  007D29  00                 	db	0
   378  007D2A  00                 	db	0
   379  007D2B  00                 	db	0
   380  007D2C  00                 	db	0
   381  007D2D  00                 	db	0
   382  007D2E  00                 	db	0
   383  007D2F  00                 	db	0
   384  007D30  00                 	db	0
   385  007D31  00                 	db	0
   386  007D32  00                 	db	0
   387  007D33  00                 	db	0
   388  007D34  00                 	db	0
   389  007D35  00                 	db	0
   390  007D36  00                 	db	0
   391  007D37  00                 	db	0
   392  007D38  00                 	db	0
   393  007D39  00                 	db	0
   394  007D3A  00                 	db	0
   395  007D3B  00                 	db	0
   396  007D3C  00                 	db	0
   397  007D3D  00                 	db	0
   398  007D3E  00                 	db	0
   399  007D3F  00                 	db	0
   400  007D40  00                 	db	0
   401  007D41  00                 	db	0
   402  007D42  00                 	db	0
   403  007D43  00                 	db	0
   404  007D44  00                 	db	0
   405  007D45  00                 	db	0
   406  007D46  00                 	db	0
   407  007D47  00                 	db	0
   408  007D48  00                 	db	0
   409  007D49  00                 	db	0
   410  007D4A  00                 	db	0
   411  007D4B  00                 	db	0
   412  007D4C  00                 	db	0
   413  007D4D  00                 	db	0
   414  007D4E  00                 	db	0
   415  007D4F  00                 	db	0
   416  007D50  00                 	db	0
   417  007D51  00                 	db	0
   418  007D52  00                 	db	0
   419  007D53  00                 	db	0
   420  007D54  00                 	db	0
   421  007D55  00                 	db	0
   422  007D56  00                 	db	0
   423  007D57  00                 	db	0
   424  007D58  00                 	db	0
   425  007D59  00                 	db	0
   426  007D5A  00                 	db	0
   427  007D5B  00                 	db	0
   428  007D5C  00                 	db	0
   429  007D5D  00                 	db	0
   430  007D5E  00                 	db	0
   431  007D5F  00                 	db	0
   432  007D60  00                 	db	0
   433  007D61  00                 	db	0
   434  007D62  00                 	db	0
   435  007D63  00                 	db	0
   436  007D64  00                 	db	0
   437  007D65  00                 	db	0
   438  007D66  00                 	db	0
   439  007D67  00                 	db	0
   440  007D68  00                 	db	0
   441  007D69  00                 	db	0
   442  007D6A  00                 	db	0
   443  007D6B  00                 	db	0
   444  007D6C  00                 	db	0
   445  007D6D  00                 	db	0
   446  007D6E  00                 	db	0
   447  007D6F  00                 	db	0
   448  007D70  00                 	db	0
   449  007D71  00                 	db	0
   450  007D72  00                 	db	0
   451  007D73  00                 	db	0
   452  007D74  00                 	db	0
   453  007D75  00                 	db	0
   454  007D76  00                 	db	0
   455  007D77  00                 	db	0
   456  007D78  00                 	db	0
   457  007D79  00                 	db	0
   458  007D7A  00                 	db	0
   459  007D7B  00                 	db	0
   460  007D7C  00                 	db	0
   461  007D7D  00                 	db	0
   462  007D7E  00                 	db	0
   463  007D7F  00                 	db	0
   464  007D80  00                 	db	0
   465  007D81  00                 	db	0
   466  007D82  00                 	db	0
   467  007D83  00                 	db	0
   468  007D84  00                 	db	0
   469  007D85  00                 	db	0
   470  007D86  00                 	db	0
   471  007D87  00                 	db	0
   472  007D88  00                 	db	0
   473  007D89  00                 	db	0
   474  007D8A  00                 	db	0
   475  007D8B  00                 	db	0
   476  007D8C  00                 	db	0
   477  007D8D  00                 	db	0
   478  007D8E  00                 	db	0
   479  007D8F  00                 	db	0
   480  007D90  00                 	db	0
   481  007D91  00                 	db	0
   482  007D92  00                 	db	0
   483  007D93  00                 	db	0
   484  007D94  00                 	db	0
   485  007D95  00                 	db	0
   486  007D96  00                 	db	0
   487  007D97  00                 	db	0
   488  007D98  00                 	db	0
   489  007D99  00                 	db	0
   490  007D9A  00                 	db	0
   491  007D9B  00                 	db	0
   492  007D9C  00                 	db	0
   493  007D9D  00                 	db	0
   494  007D9E  00                 	db	0
   495  007D9F  00                 	db	0
   496  007DA0  00                 	db	0
   497  007DA1  00                 	db	0
   498  007DA2  00                 	db	0
   499  007DA3  00                 	db	0
   500  007DA4  00                 	db	0
   501  007DA5  00                 	db	0
   502  007DA6  00                 	db	0
   503  007DA7  00                 	db	0
   504  007DA8  00                 	db	0
   505  007DA9  00                 	db	0
   506  007DAA  00                 	db	0
   507  007DAB  00                 	db	0
   508  007DAC  00                 	db	0
   509  007DAD  00                 	db	0
   510  007DAE  00                 	db	0
   511  007DAF  00                 	db	0
   512  007DB0  00                 	db	0
   513  007DB1  00                 	db	0
   514  007DB2  00                 	db	0
   515  007DB3  00                 	db	0
   516  007DB4  00                 	db	0
   517  007DB5  00                 	db	0
   518  007DB6  00                 	db	0
   519  007DB7  00                 	db	0
   520  007DB8  00                 	db	0
   521  007DB9  00                 	db	0
   522  007DBA  00                 	db	0
   523  007DBB  00                 	db	0
   524  007DBC  00                 	db	0
   525  007DBD  00                 	db	0
   526  007DBE  00                 	db	0
   527  007DBF  00                 	db	0
   528  007DC0  00                 	db	0
   529  007DC1  00                 	db	0
   530  007DC2  00                 	db	0
   531  007DC3  00                 	db	0
   532  007DC4  00                 	db	0
   533  007DC5  00                 	db	0
   534  007DC6  00                 	db	0
   535  007DC7  00                 	db	0
   536  007DC8  00                 	db	0
   537  007DC9  00                 	db	0
   538  007DCA  00                 	db	0
   539  007DCB  00                 	db	0
   540  007DCC  00                 	db	0
   541  007DCD  00                 	db	0
   542  007DCE  00                 	db	0
   543  007DCF  00                 	db	0
   544  007DD0  00                 	db	0
   545  007DD1  00                 	db	0
   546  007DD2  00                 	db	0
   547  007DD3  00                 	db	0
   548  007DD4  00                 	db	0
   549  007DD5  00                 	db	0
   550  007DD6  00                 	db	0
   551  007DD7  00                 	db	0
   552  007DD8  00                 	db	0
   553  007DD9  00                 	db	0
   554  007DDA  00                 	db	0
   555  007DDB  00                 	db	0
   556  007DDC  00                 	db	0
   557  007DDD  00                 	db	0
   558  007DDE  00                 	db	0
   559  007DDF  00                 	db	0
   560  007DE0  00                 	db	0
   561  007DE1  00                 	db	0
   562  007DE2  00                 	db	0
   563  007DE3  00                 	db	0
   564  007DE4  00                 	db	0
   565  007DE5  00                 	db	0
   566  007DE6  00                 	db	0
   567  007DE7  00                 	db	0
   568  007DE8  00                 	db	0
   569  007DE9  00                 	db	0
   570  007DEA  00                 	db	0
   571  007DEB  00                 	db	0
   572  007DEC  00                 	db	0
   573  007DED  00                 	db	0
   574  007DEE  00                 	db	0
   575  007DEF  00                 	db	0
   576  007DF0  00                 	db	0
   577  007DF1  00                 	db	0
   578  007DF2  00                 	db	0
   579  007DF3  00                 	db	0
   580  007DF4  00                 	db	0
   581  007DF5  00                 	db	0
   582  007DF6  00                 	db	0
   583  007DF7  00                 	db	0
   584  007DF8  00                 	db	0
   585  007DF9  00                 	db	0
   586  007DFA  00                 	db	0
   587  007DFB  00                 	db	0
   588  007DFC  00                 	db	0
   589  007DFD  00                 	db	0
   590  007DFE  00                 	db	0
   591  007DFF  00                 	db	0
   592  007E00  00                 	db	0
   593  007E01  00                 	db	0
   594  007E02  00                 	db	0
   595  007E03  00                 	db	0
   596  007E04  00                 	db	0
   597  007E05  00                 	db	0
   598  007E06  00                 	db	0
   599  007E07  00                 	db	0
   600  007E08  00                 	db	0
   601  007E09  00                 	db	0
   602  007E0A  00                 	db	0
   603  007E0B  00                 	db	0
   604  007E0C  00                 	db	0
   605  007E0D  00                 	db	0
   606  007E0E  00                 	db	0
   607  007E0F  00                 	db	0
   608  007E10  00                 	db	0
   609  007E11  00                 	db	0
   610  007E12  00                 	db	0
   611  007E13  00                 	db	0
   612  007E14  00                 	db	0
   613  007E15  00                 	db	0
   614  007E16  00                 	db	0
   615  007E17  00                 	db	0
   616  007E18  00                 	db	0
   617  007E19  00                 	db	0
   618  007E1A  00                 	db	0
   619  007E1B  00                 	db	0
   620  007E1C  00                 	db	0
   621  007E1D  00                 	db	0
   622  007E1E  00                 	db	0
   623  007E1F  00                 	db	0
   624  007E20  00                 	db	0
   625  007E21  00                 	db	0
   626  007E22  00                 	db	0
   627  007E23  00                 	db	0
   628  007E24  00                 	db	0
   629  007E25  00                 	db	0
   630  007E26  00                 	db	0
   631  007E27  00                 	db	0
   632  007E28  00                 	db	0
   633  007E29  00                 	db	0
   634  007E2A  00                 	db	0
   635  007E2B  00                 	db	0
   636  007E2C  00                 	db	0
   637  007E2D  00                 	db	0
   638  007E2E  00                 	db	0
   639  007E2F  00                 	db	0
   640  007E30  00                 	db	0
   641  007E31  00                 	db	0
   642  007E32  00                 	db	0
   643  007E33  00                 	db	0
   644  007E34  00                 	db	0
   645  007E35  00                 	db	0
   646  007E36  00                 	db	0
   647  007E37  00                 	db	0
   648  007E38  00                 	db	0
   649  007E39  00                 	db	0
   650  007E3A  00                 	db	0
   651  007E3B  00                 	db	0
   652  007E3C  00                 	db	0
   653  007E3D  00                 	db	0
   654  007E3E  00                 	db	0
   655  007E3F  00                 	db	0
   656  007E40  00                 	db	0
   657  007E41  00                 	db	0
   658  007E42  00                 	db	0
   659  007E43  00                 	db	0
   660  007E44  00                 	db	0
   661  007E45  00                 	db	0
   662  007E46  00                 	db	0
   663  007E47  00                 	db	0
   664  007E48  00                 	db	0
   665  007E49  00                 	db	0
   666  007E4A  00                 	db	0
   667  007E4B  00                 	db	0
   668  007E4C  00                 	db	0
   669  007E4D  00                 	db	0
   670  007E4E  00                 	db	0
   671  007E4F  00                 	db	0
   672  007E50  00                 	db	0
   673  007E51  00                 	db	0
   674  007E52  00                 	db	0
   675  007E53  00                 	db	0
   676  007E54  00                 	db	0
   677  007E55  00                 	db	0
   678  007E56  00                 	db	0
   679  007E57  00                 	db	0
   680  007E58  00                 	db	0
   681  007E59  00                 	db	0
   682  007E5A  00                 	db	0
   683  007E5B  00                 	db	0
   684  007E5C  00                 	db	0
   685  007E5D  00                 	db	0
   686  007E5E  00                 	db	0
   687  007E5F  00                 	db	0
   688  007E60  00                 	db	0
   689  007E61  00                 	db	0
   690  007E62  00                 	db	0
   691  007E63  00                 	db	0
   692  007E64  00                 	db	0
   693  007E65  00                 	db	0
   694  007E66  00                 	db	0
   695  007E67  00                 	db	0
   696  007E68  00                 	db	0
   697  007E69  00                 	db	0
   698  007E6A  00                 	db	0
   699  007E6B  00                 	db	0
   700  007E6C  00                 	db	0
   701  007E6D  00                 	db	0
   702  007E6E  00                 	db	0
   703  007E6F  00                 	db	0
   704  007E70  00                 	db	0
   705  007E71  00                 	db	0
   706  007E72  00                 	db	0
   707  007E73  00                 	db	0
   708  007E74  00                 	db	0
   709  007E75  00                 	db	0
   710  007E76  00                 	db	0
   711  007E77  00                 	db	0
   712  007E78  00                 	db	0
   713  007E79  00                 	db	0
   714  007E7A  00                 	db	0
   715  007E7B  00                 	db	0
   716  007E7C  00                 	db	0
   717  007E7D  00                 	db	0
   718  007E7E  00                 	db	0
   719  007E7F  00                 	db	0
   720  007E80  00                 	db	0
   721  007E81  00                 	db	0
   722  007E82  00                 	db	0
   723  007E83  00                 	db	0
   724  007E84  00                 	db	0
   725  007E85  00                 	db	0
   726  007E86  00                 	db	0
   727  007E87  00                 	db	0
   728  007E88  00                 	db	0
   729  007E89  00                 	db	0
   730  007E8A  00                 	db	0
   731  007E8B  00                 	db	0
   732  007E8C  00                 	db	0
   733  007E8D  00                 	db	0
   734  007E8E  00                 	db	0
   735  007E8F  00                 	db	0
   736  007E90  00                 	db	0
   737  007E91  00                 	db	0
   738  007E92  00                 	db	0
   739  007E93  00                 	db	0
   740  007E94  00                 	db	0
   741  007E95  00                 	db	0
   742  007E96  00                 	db	0
   743  007E97  00                 	db	0
   744  007E98  00                 	db	0
   745  007E99  00                 	db	0
   746  007E9A  00                 	db	0
   747  007E9B  00                 	db	0
   748  007E9C  00                 	db	0
   749  007E9D  00                 	db	0
   750  007E9E  00                 	db	0
   751  007E9F  00                 	db	0
   752  007EA0  00                 	db	0
   753  007EA1  00                 	db	0
   754  007EA2  00                 	db	0
   755  007EA3  00                 	db	0
   756  007EA4  00                 	db	0
   757  007EA5  00                 	db	0
   758  007EA6  00                 	db	0
   759  007EA7  00                 	db	0
   760  007EA8  00                 	db	0
   761  007EA9  00                 	db	0
   762  007EAA  00                 	db	0
   763  007EAB  00                 	db	0
   764  007EAC  00                 	db	0
   765  007EAD  00                 	db	0
   766  007EAE  00                 	db	0
   767  007EAF  00                 	db	0
   768  007EB0  00                 	db	0
   769  007EB1  00                 	db	0
   770  007EB2  00                 	db	0
   771  007EB3  00                 	db	0
   772  007EB4  00                 	db	0
   773  007EB5  00                 	db	0
   774  007EB6  00                 	db	0
   775  007EB7  00                 	db	0
   776  007EB8  00                 	db	0
   777  007EB9  00                 	db	0
   778  007EBA  00                 	db	0
   779  007EBB  00                 	db	0
   780  007EBC  00                 	db	0
   781  007EBD  00                 	db	0
   782  007EBE  00                 	db	0
   783  007EBF  00                 	db	0
   784  007EC0  00                 	db	0
   785  007EC1  00                 	db	0
   786  007EC2  00                 	db	0
   787  007EC3  00                 	db	0
   788  007EC4  00                 	db	0
   789  007EC5  00                 	db	0
   790  007EC6  00                 	db	0
   791  007EC7  00                 	db	0
   792  007EC8  00                 	db	0
   793  007EC9  00                 	db	0
   794  007ECA  00                 	db	0
   795  007ECB  00                 	db	0
   796  007ECC  00                 	db	0
   797  007ECD  00                 	db	0
   798  007ECE  00                 	db	0
   799  007ECF  00                 	db	0
   800  007ED0  00                 	db	0
   801  007ED1  00                 	db	0
   802  007ED2  00                 	db	0
   803  007ED3  00                 	db	0
   804  007ED4  00                 	db	0
   805  007ED5  00                 	db	0
   806  007ED6  00                 	db	0
   807  007ED7  00                 	db	0
   808  007ED8  00                 	db	0
   809  007ED9  00                 	db	0
   810  007EDA  00                 	db	0
   811  007EDB  00                 	db	0
   812  007EDC  00                 	db	0
   813  007EDD  00                 	db	0
   814  007EDE  00                 	db	0
   815  007EDF  00                 	db	0
   816  007EE0  00                 	db	0
   817  007EE1  00                 	db	0
   818  007EE2  00                 	db	0
   819  007EE3  00                 	db	0
   820  007EE4  00                 	db	0
   821  007EE5  00                 	db	0
   822  007EE6  00                 	db	0
   823  007EE7  00                 	db	0
   824  007EE8  00                 	db	0
   825  007EE9  00                 	db	0
   826  007EEA  00                 	db	0
   827  007EEB  00                 	db	0
   828  007EEC  00                 	db	0
   829  007EED  00                 	db	0
   830  007EEE  00                 	db	0
   831  007EEF  00                 	db	0
   832  007EF0  00                 	db	0
   833  007EF1  00                 	db	0
   834  007EF2  00                 	db	0
   835  007EF3  00                 	db	0
   836  007EF4  00                 	db	0
   837  007EF5  00                 	db	0
   838  007EF6  00                 	db	0
   839  007EF7  00                 	db	0
   840  007EF8  00                 	db	0
   841  007EF9  00                 	db	0
   842  007EFA  00                 	db	0
   843  007EFB  00                 	db	0
   844  007EFC  00                 	db	0
   845  007EFD  00                 	db	0
   846  007EFE  00                 	db	0
   847  007EFF  00                 	db	0
   848  007F00  00                 	db	0
   849  007F01  00                 	db	0
   850  007F02  00                 	db	0
   851  007F03  00                 	db	0
   852  007F04  00                 	db	0
   853  007F05  00                 	db	0
   854  007F06  00                 	db	0
   855  007F07  00                 	db	0
   856  007F08  00                 	db	0
   857  007F09  00                 	db	0
   858  007F0A  00                 	db	0
   859  007F0B  00                 	db	0
   860  007F0C  00                 	db	0
   861  007F0D  00                 	db	0
   862  007F0E  00                 	db	0
   863  007F0F  00                 	db	0
   864  007F10  00                 	db	0
   865  007F11  00                 	db	0
   866  007F12  00                 	db	0
   867  007F13  00                 	db	0
   868  007F14  00                 	db	0
   869  007F15  00                 	db	0
   870  007F16  00                 	db	0
   871  007F17  00                 	db	0
   872  007F18  00                 	db	0
   873  007F19  00                 	db	0
   874  007F1A  00                 	db	0
   875  007F1B  00                 	db	0
   876  007F1C  00                 	db	0
   877  007F1D  00                 	db	0
   878  007F1E  00                 	db	0
   879  007F1F  00                 	db	0
   880  007F20  00                 	db	0
   881  007F21  00                 	db	0
   882  007F22  00                 	db	0
   883  007F23  00                 	db	0
   884  007F24  00                 	db	0
   885  007F25  00                 	db	0
   886  007F26  00                 	db	0
   887  007F27  00                 	db	0
   888  007F28  00                 	db	0
   889  007F29  00                 	db	0
   890  007F2A  00                 	db	0
   891  007F2B  00                 	db	0
   892  007F2C  00                 	db	0
   893  007F2D  00                 	db	0
   894  007F2E  00                 	db	0
   895  007F2F  00                 	db	0
   896  007F30  00                 	db	0
   897  007F31  00                 	db	0
   898  007F32  00                 	db	0
   899  007F33  00                 	db	0
   900  007F34  00                 	db	0
   901  007F35  00                 	db	0
   902  007F36  00                 	db	0
   903  007F37  00                 	db	0
   904  007F38  00                 	db	0
   905  007F39  00                 	db	0
   906  007F3A  00                 	db	0
   907  007F3B  00                 	db	0
   908  007F3C  00                 	db	0
   909  007F3D  00                 	db	0
   910  007F3E  00                 	db	0
   911  007F3F  00                 	db	0
   912  007F40  00                 	db	0
   913  007F41  00                 	db	0
   914  007F42  00                 	db	0
   915  007F43  00                 	db	0
   916  007F44  00                 	db	0
   917  007F45  00                 	db	0
   918  007F46  00                 	db	0
   919  007F47  00                 	db	0
   920  007F48  00                 	db	0
   921  007F49  00                 	db	0
   922  007F4A  00                 	db	0
   923  007F4B  00                 	db	0
   924  007F4C  00                 	db	0
   925  007F4D  00                 	db	0
   926  007F4E  00                 	db	0
   927  007F4F  00                 	db	0
   928  007F50  00                 	db	0
   929  007F51  00                 	db	0
   930  007F52  00                 	db	0
   931  007F53  00                 	db	0
   932  007F54  00                 	db	0
   933  007F55  00                 	db	0
   934  007F56  00                 	db	0
   935  007F57  00                 	db	0
   936  007F58  00                 	db	0
   937  007F59  00                 	db	0
   938  007F5A  00                 	db	0
   939  007F5B  00                 	db	0
   940  007F5C  00                 	db	0
   941  007F5D  00                 	db	0
   942  007F5E  00                 	db	0
   943  007F5F  00                 	db	0
   944  007F60  00                 	db	0
   945  007F61  00                 	db	0
   946  007F62  00                 	db	0
   947  007F63  00                 	db	0
   948  007F64  00                 	db	0
   949  007F65  00                 	db	0
   950  007F66  00                 	db	0
   951  007F67  00                 	db	0
   952  007F68  00                 	db	0
   953  007F69  00                 	db	0
   954  007F6A  00                 	db	0
   955  007F6B  00                 	db	0
   956  007F6C  00                 	db	0
   957  007F6D  00                 	db	0
   958  007F6E  00                 	db	0
   959  007F6F  00                 	db	0
   960  007F70  00                 	db	0
   961  007F71  00                 	db	0
   962  007F72  00                 	db	0
   963  007F73  00                 	db	0
   964  007F74  00                 	db	0
   965  007F75  00                 	db	0
   966  007F76  00                 	db	0
   967  007F77  00                 	db	0
   968  007F78  00                 	db	0
   969  007F79  00                 	db	0
   970  007F7A  00                 	db	0
   971  007F7B  00                 	db	0
   972  007F7C  00                 	db	0
   973  007F7D  00                 	db	0
   974  007F7E  00                 	db	0
   975  007F7F  00                 	db	0
   976  007F80  00                 	db	0
   977  007F81  00                 	db	0
   978  007F82  00                 	db	0
   979  007F83  00                 	db	0
   980  007F84  00                 	db	0
   981  007F85  00                 	db	0
   982  007F86  00                 	db	0
   983  007F87  00                 	db	0
   984  007F88  00                 	db	0
   985  007F89  00                 	db	0
   986  007F8A  00                 	db	0
   987  007F8B  00                 	db	0
   988  007F8C  00                 	db	0
   989  007F8D  00                 	db	0
   990  007F8E  00                 	db	0
   991  007F8F  00                 	db	0
   992  007F90  00                 	db	0
   993  007F91  00                 	db	0
   994  007F92  00                 	db	0
   995  007F93  00                 	db	0
   996  007F94  00                 	db	0
   997  007F95  00                 	db	0
   998  007F96  00                 	db	0
   999  007F97  00                 	db	0
  1000  007F98  00                 	db	0
  1001  007F99  00                 	db	0
  1002  007F9A  00                 	db	0
  1003  007F9B  00                 	db	0
  1004  007F9C  00                 	db	0
  1005  007F9D  00                 	db	0
  1006  007F9E  00                 	db	0
  1007  007F9F  00                 	db	0
  1008  007FA0  00                 	db	0
  1009  007FA1  00                 	db	0
  1010  007FA2  00                 	db	0
  1011  007FA3  00                 	db	0
  1012  007FA4  00                 	db	0
  1013  007FA5  00                 	db	0
  1014  007FA6  00                 	db	0
  1015  007FA7  00                 	db	0
  1016  007FA8  00                 	db	0
  1017  007FA9  00                 	db	0
  1018  007FAA  00                 	db	0
  1019  007FAB  00                 	db	0
  1020  007FAC  00                 	db	0
  1021  007FAD  00                 	db	0
  1022  007FAE  00                 	db	0
  1023  007FAF  00                 	db	0
  1024  007FB0  00                 	db	0
  1025  007FB1  00                 	db	0
  1026  007FB2  00                 	db	0
  1027  007FB3  00                 	db	0
  1028  007FB4  00                 	db	0
  1029  007FB5  00                 	db	0
  1030  007FB6  00                 	db	0
  1031  007FB7  00                 	db	0
  1032  007FB8  00                 	db	0
  1033  007FB9  00                 	db	0
  1034  007FBA  00                 	db	0
  1035  007FBB  00                 	db	0
  1036  007FBC  00                 	db	0
  1037  007FBD  00                 	db	0
  1038  007FBE  00                 	db	0
  1039  007FBF  00                 	db	0
  1040  007FC0  00                 	db	0
  1041  007FC1  00                 	db	0
  1042  007FC2  00                 	db	0
  1043  007FC3  00                 	db	0
  1044  007FC4  00                 	db	0
  1045  007FC5  00                 	db	0
  1046  007FC6  00                 	db	0
  1047  007FC7  00                 	db	0
  1048  007FC8  00                 	db	0
  1049  007FC9  00                 	db	0
  1050  007FCA  00                 	db	0
  1051  007FCB  00                 	db	0
  1052  007FCC  00                 	db	0
  1053  007FCD  00                 	db	0
  1054  007FCE  00                 	db	0
  1055  007FCF  00                 	db	0
  1056  007FD0  00                 	db	0
  1057  007FD1  00                 	db	0
  1058  007FD2  00                 	db	0
  1059  007FD3  00                 	db	0
  1060  007FD4  00                 	db	0
  1061  007FD5  00                 	db	0
  1062  007FD6  00                 	db	0
  1063  007FD7  00                 	db	0
  1064  007FD8  00                 	db	0
  1065  007FD9  00                 	db	0
  1066  007FDA  00                 	db	0
  1067  007FDB  00                 	db	0
  1068  007FDC  00                 	db	0
  1069  007FDD  00                 	db	0
  1070  007FDE  00                 	db	0
  1071  007FDF  00                 	db	0
  1072  007FE0  00                 	db	0
  1073  007FE1  00                 	db	0
  1074  007FE2  00                 	db	0
  1075  007FE3  00                 	db	0
  1076  007FE4  00                 	db	0
  1077  007FE5  00                 	db	0
  1078  007FE6  00                 	db	0
  1079  007FE7  00                 	db	0
  1080  007FE8  00                 	db	0
  1081  007FE9  00                 	db	0
  1082  007FEA  00                 	db	0
  1083  007FEB  00                 	db	0
  1084  007FEC  00                 	db	0
  1085  007FED  00                 	db	0
  1086  007FEE  00                 	db	0
  1087  007FEF  00                 	db	0
  1088  007FF0  00                 	db	0
  1089  007FF1  00                 	db	0
  1090  007FF2  00                 	db	0
  1091  007FF3  00                 	db	0
  1092  007FF4  00                 	db	0
  1093  007FF5  00                 	db	0
  1094  007FF6  00                 	db	0
  1095  007FF7  00                 	db	0
  1096  007FF8  00                 	db	0
  1097  007FF9  00                 	db	0
  1098  007FFA  00                 	db	0
  1099  007FFB                     __end_of_JavaClass_Data:
  1100                           	opt stack 0
  1101  007FFB                     _JavaClass_DataSize:
  1102                           	opt stack 0
  1103  007FFB  0000               	dw	0
  1104  007FFD                     __end_of_JavaClass_DataSize:
  1105                           	opt stack 0
  1106  007FFD                     _Loader_IsLoaderEnabled:
  1107                           	opt stack 0
  1108  007FFD  01                 	db	1
  1109  007FFE                     __end_of_Loader_IsLoaderEnabled:
  1110                           	opt stack 0
  1111  0000                     _TBLPTR	set	4086
  1112  0000                     _TMR0	set	4054
  1113  0000                     _EEADR	set	4009
  1114  0000                     _EECON1bits	set	4006
  1115  0000                     _EECON2	set	4007
  1116  0000                     _EEDATA	set	4008
  1117  0000                     _INTCON	set	4082
  1118  0000                     _INTCONbits	set	4082
  1119  0000                     _RCREG	set	4014
  1120  0000                     _SPBRG	set	4015
  1121  0000                     _T0CON	set	4053
  1122  0000                     _TABLAT	set	4085
  1123  0000                     _TXREG	set	4013
  1124  0000                     _BRG16	set	32195
  1125  0000                     _BRGH	set	32098
  1126  0000                     _CREN	set	32092
  1127  0000                     _OERR	set	32089
  1128  0000                     _RCIE	set	31981
  1129  0000                     _RCIF	set	31989
  1130  0000                     _RX9	set	32094
  1131  0000                     _SPEN	set	32095
  1132  0000                     _SREN	set	32093
  1133  0000                     _SYNC	set	32100
  1134  0000                     _TMR0IE	set	32661
  1135  0000                     _TMR0IF	set	32658
  1136  0000                     _TMR0ON	set	32431
  1137  0000                     _TX9	set	32102
  1138  0000                     _TXEN	set	32101
  1139  0000                     _TXIE	set	31980
  1140  0000                     _TXIF	set	31988
  1141  0000                     _PORTA	set	3968
  1142  0000                     _PORTB	set	3969
  1143  0000                     _PORTC	set	3970
  1144  0000                     _TRISA	set	3986
  1145  0000                     _TRISB	set	3987
  1146  0000                     _TRISC	set	3988
  1147                           
  1148                           ; #config settings
  1149  007FFE  00                 	db	0	; dummy byte at the end
  1150  0000                     
  1151                           	psect	cinit
  1152  00187C                     __pcinit:
  1153                           	opt stack 0
  1154  00187C                     start_initialization:
  1155                           	opt stack 0
  1156  00187C                     __initialization:
  1157                           	opt stack 0
  1158                           
  1159                           ; Clear objects allocated to BIGRAM (1024 bytes)
  1160  00187C  EE00  F0D7         	lfsr	0,__pbssBIGRAM
  1161  001880  EE14 F000          	lfsr	1,1024
  1162  001884                     clear_0:
  1163  001884  6AEE               	clrf	postinc0,c
  1164  001886  50E5               	movf	postdec1,w,c
  1165  001888  50E1               	movf	fsr1l,w,c
  1166  00188A  E1FC               	bnz	clear_0
  1167  00188C  50E2               	movf	fsr1h,w,c
  1168  00188E  E1FA               	bnz	clear_0
  1169                           
  1170                           ; Clear objects allocated to BANK0 (7 bytes)
  1171  001890  EE00  F0CF         	lfsr	0,__pbssBANK0
  1172  001894  0E07               	movlw	7
  1173  001896                     clear_1:
  1174  001896  6AEE               	clrf	postinc0,c
  1175  001898  06E8               	decf	wreg,f,c
  1176  00189A  E1FD               	bnz	clear_1
  1177                           
  1178                           ; Clear objects allocated to COMRAM (14 bytes)
  1179  00189C  EE00  F05E         	lfsr	0,__pbssCOMRAM
  1180  0018A0  0E0E               	movlw	14
  1181  0018A2                     clear_2:
  1182  0018A2  6AEE               	clrf	postinc0,c
  1183  0018A4  06E8               	decf	wreg,f,c
  1184  0018A6  E1FD               	bnz	clear_2
  1185                           
  1186                           ; Initialize objects allocated to BANK0 (1 bytes)
  1187                           ; load TBLPTR registers with __pidataBANK0
  1188  0018A8  0E32               	movlw	low __pidataBANK0
  1189  0018AA  6EF6               	movwf	tblptrl,c
  1190  0018AC  0E1C               	movlw	high __pidataBANK0
  1191  0018AE  6EF7               	movwf	tblptrh,c
  1192  0018B0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1193  0018B2  6EF8               	movwf	tblptru,c
  1194  0018B4  0009               	tblrd		*+	;fetch initializer
  1195  0018B6  CFF5 F0D6          	movff	tablat,__pdataBANK0
  1196  0018BA                     end_of_initialization:
  1197                           	opt stack 0
  1198  0018BA                     __end_of__initialization:
  1199                           	opt stack 0
  1200  0018BA  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1201  0018BC  6EF8               	movwf	tblptru,c
  1202  0018BE  0100               	movlb	0
  1203  0018C0  EF1D  F00B         	goto	_main	;jump to C main() function
  1204                           tblptru	equ	0xFF8
  1205                           tblptrh	equ	0xFF7
  1206                           tblptrl	equ	0xFF6
  1207                           tablat	equ	0xFF5
  1208                           postinc0	equ	0xFEE
  1209                           wreg	equ	0xFE8
  1210                           postdec1	equ	0xFE5
  1211                           fsr1h	equ	0xFE2
  1212                           fsr1l	equ	0xFE1
  1213                           
  1214                           	psect	bssCOMRAM
  1215  00005E                     __pbssCOMRAM:
  1216                           	opt stack 0
  1217  00005E                     _Api_PortRegistry_Port:
  1218                           	opt stack 0
  1219  00005E                     	ds	2
  1220  000060                     _Api_PortRegistry_Tris:
  1221                           	opt stack 0
  1222  000060                     	ds	2
  1223  000062                     _Heap_BaseOffset:
  1224                           	opt stack 0
  1225  000062                     	ds	2
  1226  000064                     _Loader_CmdLength:
  1227                           	opt stack 0
  1228  000064                     	ds	2
  1229  000066                     _Stack_CurrentPointer:
  1230                           	opt stack 0
  1231  000066                     	ds	2
  1232  000068                     _Stack_Pointer:
  1233                           	opt stack 0
  1234  000068                     	ds	2
  1235  00006A                     _localVariables:
  1236                           	opt stack 0
  1237  00006A                     	ds	2
  1238                           tblptru	equ	0xFF8
  1239                           tblptrh	equ	0xFF7
  1240                           tblptrl	equ	0xFF6
  1241                           tablat	equ	0xFF5
  1242                           postinc0	equ	0xFEE
  1243                           wreg	equ	0xFE8
  1244                           postdec1	equ	0xFE5
  1245                           fsr1h	equ	0xFE2
  1246                           fsr1l	equ	0xFE1
  1247                           
  1248                           	psect	bssBANK0
  1249  0000CF                     __pbssBANK0:
  1250                           	opt stack 0
  1251  0000CF                     _Loader_CmdDataOffset:
  1252                           	opt stack 0
  1253  0000CF                     	ds	2
  1254  0000D1                     _Stack_BasePointer:
  1255                           	opt stack 0
  1256  0000D1                     	ds	2
  1257  0000D3                     _Loader_Cmd:
  1258                           	opt stack 0
  1259  0000D3                     	ds	1
  1260  0000D4                     _Loader_CmdProcessingState:
  1261                           	opt stack 0
  1262  0000D4                     	ds	1
  1263  0000D5                     _Loader_State:
  1264                           	opt stack 0
  1265  0000D5                     	ds	1
  1266                           tblptru	equ	0xFF8
  1267                           tblptrh	equ	0xFF7
  1268                           tblptrl	equ	0xFF6
  1269                           tablat	equ	0xFF5
  1270                           postinc0	equ	0xFEE
  1271                           wreg	equ	0xFE8
  1272                           postdec1	equ	0xFE5
  1273                           fsr1h	equ	0xFE2
  1274                           fsr1l	equ	0xFE1
  1275                           
  1276                           	psect	dataBANK0
  1277  0000D6                     __pdataBANK0:
  1278                           	opt stack 0
  1279  0000D6                     _SerialPort_CurrentValueRx:
  1280                           	opt stack 0
  1281  0000D6                     	ds	1
  1282                           tblptru	equ	0xFF8
  1283                           tblptrh	equ	0xFF7
  1284                           tblptrl	equ	0xFF6
  1285                           tablat	equ	0xFF5
  1286                           postinc0	equ	0xFEE
  1287                           wreg	equ	0xFE8
  1288                           postdec1	equ	0xFE5
  1289                           fsr1h	equ	0xFE2
  1290                           fsr1l	equ	0xFE1
  1291                           
  1292                           	psect	bssBIGRAM
  1293  0000D7                     __pbssBIGRAM:
  1294                           	opt stack 0
  1295  0000D7                     _Heap:
  1296                           	opt stack 0
  1297  0000D7                     	ds	1024
  1298                           tblptru	equ	0xFF8
  1299                           tblptrh	equ	0xFF7
  1300                           tblptrl	equ	0xFF6
  1301                           tablat	equ	0xFF5
  1302                           postinc0	equ	0xFEE
  1303                           wreg	equ	0xFE8
  1304                           postdec1	equ	0xFE5
  1305                           fsr1h	equ	0xFE2
  1306                           fsr1l	equ	0xFE1
  1307                           
  1308                           	psect	cstackBANK0
  1309  000080                     __pcstackBANK0:
  1310                           	opt stack 0
  1311  000080                     Mm_WriteFlash@block:
  1312                           	opt stack 0
  1313                           
  1314                           ; 64 bytes @ 0x0
  1315  000080                     	ds	64
  1316  0000C0                     Mm_WriteFlash@saddress:
  1317                           	opt stack 0
  1318                           
  1319                           ; 4 bytes @ 0x40
  1320  0000C0                     	ds	4
  1321  0000C4                     Mm_WriteFlash@offset:
  1322                           	opt stack 0
  1323                           
  1324                           ; 1 bytes @ 0x44
  1325  0000C4                     	ds	1
  1326  0000C5                     Mm_WriteNVM@address:
  1327                           	opt stack 0
  1328                           
  1329                           ; 4 bytes @ 0x45
  1330  0000C5                     	ds	4
  1331  0000C9                     Mm_WriteNVM@bytes:
  1332                           	opt stack 0
  1333                           
  1334                           ; 4 bytes @ 0x49
  1335  0000C9                     	ds	4
  1336  0000CD                     Mm_WriteNVM@data:
  1337                           	opt stack 0
  1338                           
  1339                           ; 2 bytes @ 0x4D
  1340  0000CD                     	ds	2
  1341                           tblptru	equ	0xFF8
  1342                           tblptrh	equ	0xFF7
  1343                           tblptrl	equ	0xFF6
  1344                           tablat	equ	0xFF5
  1345                           postinc0	equ	0xFEE
  1346                           wreg	equ	0xFE8
  1347                           postdec1	equ	0xFE5
  1348                           fsr1h	equ	0xFE2
  1349                           fsr1l	equ	0xFE1
  1350                           
  1351                           	psect	cstackCOMRAM
  1352  000001                     __pcstackCOMRAM:
  1353                           	opt stack 0
  1354  000001                     ??_SerialPort_ISR:
  1355  000001                     
  1356                           ; 1 bytes @ 0x0
  1357  000001                     	ds	1
  1358  000002                     ??_ISR:
  1359                           
  1360                           ; 0 bytes @ 0x1
  1361  000002                     	ds	14
  1362  000010                     ?_Heap_GetHeader:
  1363                           	opt stack 0
  1364  000010                     ?___wmul:
  1365                           	opt stack 0
  1366  000010                     ?___lwdiv:
  1367                           	opt stack 0
  1368  000010                     ?___lwmod:
  1369                           	opt stack 0
  1370  000010                     Api_PortRegistry_GetPortRegistry@port:
  1371                           	opt stack 0
  1372  000010                     Api_PortRegistry_SetPin@type:
  1373                           	opt stack 0
  1374  000010                     Mm_Write@GIEBit:
  1375                           	opt stack 0
  1376  000010                     SerialPort_Send@byte:
  1377                           	opt stack 0
  1378  000010                     Timer_T0_Init@interruption:
  1379                           	opt stack 0
  1380  000010                     Heap_Init@heap:
  1381                           	opt stack 0
  1382  000010                     Heap_IsIdInUse@id:
  1383                           	opt stack 0
  1384  000010                     Heap_SetBytes@bytes:
  1385                           	opt stack 0
  1386  000010                     Stack_IsIdInUse@id:
  1387                           	opt stack 0
  1388  000010                     Mm_CopyRam@destination:
  1389                           	opt stack 0
  1390  000010                     ___wmul@multiplier:
  1391                           	opt stack 0
  1392  000010                     ___lwdiv@dividend:
  1393                           	opt stack 0
  1394  000010                     ___lwmod@dividend:
  1395                           	opt stack 0
  1396  000010                     Mm_IsAddressEEPROM@address:
  1397                           	opt stack 0
  1398  000010                     Mm_IsAddressFlash@address:
  1399                           	opt stack 0
  1400  000010                     Mm_ReadEEPROM@address:
  1401                           	opt stack 0
  1402  000010                     Mm_ReadFlash@address:
  1403                           	opt stack 0
  1404                           
  1405                           ; 4 bytes @ 0xF
  1406  000010                     	ds	1
  1407  000011                     Api_PortRegistry_SetPin@pins:
  1408                           	opt stack 0
  1409  000011                     Mm_WriteEEPROM@address:
  1410                           	opt stack 0
  1411  000011                     Mm_WriteFlashBlock@address:
  1412                           	opt stack 0
  1413                           
  1414                           ; 4 bytes @ 0x10
  1415  000011                     	ds	1
  1416  000012                     ??_Heap_SetBytes:
  1417  000012                     ??_Stack_IsIdInUse:
  1418  000012                     ??_Heap_IsIdInUse:
  1419  000012                     ??_Heap_GetHeader:
  1420  000012                     Mm_CopyRam@source:
  1421                           	opt stack 0
  1422  000012                     ___wmul@multiplicand:
  1423                           	opt stack 0
  1424  000012                     ___lwdiv@divisor:
  1425                           	opt stack 0
  1426  000012                     ___lwmod@divisor:
  1427                           	opt stack 0
  1428                           
  1429                           ; 2 bytes @ 0x11
  1430  000012                     	ds	2
  1431  000014                     ??_Mm_IsAddressEEPROM:
  1432  000014                     ??_Mm_IsAddressFlash:
  1433  000014                     Heap_GetHeader@id:
  1434                           	opt stack 0
  1435  000014                     ___lwmod@counter:
  1436                           	opt stack 0
  1437  000014                     Heap_SetBytes@size:
  1438                           	opt stack 0
  1439  000014                     Mm_CopyRam@size:
  1440                           	opt stack 0
  1441  000014                     ___wmul@product:
  1442                           	opt stack 0
  1443  000014                     ___lwdiv@quotient:
  1444                           	opt stack 0
  1445  000014                     Mm_ReadEEPROM@bytes:
  1446                           	opt stack 0
  1447  000014                     Mm_ReadFlash@bytes:
  1448                           	opt stack 0
  1449                           
  1450                           ; 4 bytes @ 0x13
  1451  000014                     	ds	1
  1452  000015                     Heap_GetHeader@offset:
  1453                           	opt stack 0
  1454  000015                     Mm_WriteFlashBlock@block:
  1455                           	opt stack 0
  1456  000015                     Mm_WriteEEPROM@bytes:
  1457                           	opt stack 0
  1458                           
  1459                           ; 4 bytes @ 0x14
  1460  000015                     	ds	1
  1461  000016                     ?___aldiv:
  1462                           	opt stack 0
  1463  000016                     ___lwdiv@counter:
  1464                           	opt stack 0
  1465  000016                     Heap_SetBytes@heap:
  1466                           	opt stack 0
  1467  000016                     ___aldiv@dividend:
  1468                           	opt stack 0
  1469                           
  1470                           ; 4 bytes @ 0x15
  1471  000016                     	ds	1
  1472  000017                     Mm_WriteFlashBlock@offset:
  1473                           	opt stack 0
  1474  000017                     Heap_GetHeader@heap:
  1475                           	opt stack 0
  1476  000017                     Stack_IsIdInUse@ii:
  1477                           	opt stack 0
  1478                           
  1479                           ; 2 bytes @ 0x16
  1480  000017                     	ds	1
  1481  000018                     Heap_IsIdInUse@offset:
  1482                           	opt stack 0
  1483  000018                     Mm_ReadEEPROM@data:
  1484                           	opt stack 0
  1485  000018                     Mm_ReadFlash@data:
  1486                           	opt stack 0
  1487                           
  1488                           ; 2 bytes @ 0x17
  1489  000018                     	ds	1
  1490  000019                     ?_Heap_GetHeaderAddress:
  1491                           	opt stack 0
  1492  000019                     Mm_WriteEEPROM@data:
  1493                           	opt stack 0
  1494                           
  1495                           ; 2 bytes @ 0x18
  1496  000019                     	ds	1
  1497  00001A                     Heap_IsIdInUse@ii:
  1498                           	opt stack 0
  1499  00001A                     Mm_ReadNVM@address:
  1500                           	opt stack 0
  1501  00001A                     Mm_WriteFlash@address:
  1502                           	opt stack 0
  1503  00001A                     ___aldiv@divisor:
  1504                           	opt stack 0
  1505                           
  1506                           ; 4 bytes @ 0x19
  1507  00001A                     	ds	1
  1508  00001B                     Heap_GetHeaderAddress@id:
  1509                           	opt stack 0
  1510  00001B                     Heap_IsIdInUse@heap:
  1511                           	opt stack 0
  1512  00001B                     Mm_WriteEEPROM@byte:
  1513                           	opt stack 0
  1514                           
  1515                           ; 4 bytes @ 0x1A
  1516  00001B                     	ds	1
  1517  00001C                     Heap_GetHeaderAddress@heap:
  1518                           	opt stack 0
  1519                           
  1520                           ; 2 bytes @ 0x1B
  1521  00001C                     	ds	1
  1522  00001D                     ??_Heap_GarbageCollect:
  1523                           
  1524                           ; 0 bytes @ 0x1C
  1525  00001D                     	ds	1
  1526  00001E                     ___aldiv@counter:
  1527                           	opt stack 0
  1528  00001E                     Mm_ReadNVM@bytes:
  1529                           	opt stack 0
  1530  00001E                     Mm_WriteFlash@bytes:
  1531                           	opt stack 0
  1532                           
  1533                           ; 4 bytes @ 0x1D
  1534  00001E                     	ds	1
  1535  00001F                     ___aldiv@sign:
  1536                           	opt stack 0
  1537                           
  1538                           ; 1 bytes @ 0x1E
  1539  00001F                     	ds	1
  1540  000020                     ___aldiv@quotient:
  1541                           	opt stack 0
  1542                           
  1543                           ; 4 bytes @ 0x1F
  1544  000020                     	ds	1
  1545  000021                     Heap_GarbageCollect@size:
  1546                           	opt stack 0
  1547                           
  1548                           ; 2 bytes @ 0x20
  1549  000021                     	ds	1
  1550  000022                     Mm_ReadNVM@data:
  1551                           	opt stack 0
  1552  000022                     Mm_WriteFlash@data:
  1553                           	opt stack 0
  1554                           
  1555                           ; 2 bytes @ 0x21
  1556  000022                     	ds	1
  1557  000023                     Heap_GarbageCollect@offset:
  1558                           	opt stack 0
  1559                           
  1560                           ; 2 bytes @ 0x22
  1561  000023                     	ds	1
  1562  000024                     ??_Mm_WriteFlash:
  1563  000024                     ?_Mm_GetU16:
  1564                           	opt stack 0
  1565  000024                     API_MicroApplication_Sleep@value:
  1566                           	opt stack 0
  1567  000024                     Mm_GetU08@address:
  1568                           	opt stack 0
  1569  000024                     Mm_GetU16@address:
  1570                           	opt stack 0
  1571                           
  1572                           ; 4 bytes @ 0x23
  1573  000024                     	ds	1
  1574  000025                     Heap_GarbageCollect@heap:
  1575                           	opt stack 0
  1576  000025                     Mm_SetU08@address:
  1577                           	opt stack 0
  1578  000025                     Mm_SetU16@address:
  1579                           	opt stack 0
  1580                           
  1581                           ; 4 bytes @ 0x24
  1582  000025                     	ds	1
  1583  000026                     API_MicroApplication_Sleep@counter:
  1584                           	opt stack 0
  1585                           
  1586                           ; 4 bytes @ 0x25
  1587  000026                     	ds	2
  1588  000028                     Mm_GetU08@value:
  1589                           	opt stack 0
  1590  000028                     Mm_GetU16@value:
  1591                           	opt stack 0
  1592                           
  1593                           ; 2 bytes @ 0x27
  1594  000028                     	ds	1
  1595  000029                     ??_JavaClass_Init:
  1596  000029                     Mm_SetU08@value:
  1597                           	opt stack 0
  1598  000029                     Heap_GetBytes@bytes:
  1599                           	opt stack 0
  1600  000029                     Mm_SetU16@value:
  1601                           	opt stack 0
  1602                           
  1603                           ; 2 bytes @ 0x28
  1604  000029                     	ds	1
  1605  00002A                     ??_Api_ExecuteNativeMethod:
  1606                           
  1607                           ; 0 bytes @ 0x29
  1608  00002A                     	ds	1
  1609  00002B                     ??_Heap_GetBytes:
  1610  00002B                     ??_Loader_ProcessCommandLoad:
  1611                           
  1612                           ; 0 bytes @ 0x2A
  1613  00002B                     	ds	1
  1614  00002C                     Api_ExecuteNativeMethod@id:
  1615                           	opt stack 0
  1616                           
  1617                           ; 1 bytes @ 0x2B
  1618  00002C                     	ds	1
  1619  00002D                     Loader_ProcessCommandLoad@value:
  1620                           	opt stack 0
  1621  00002D                     Api_ExecuteNativeMethod@value:
  1622                           	opt stack 0
  1623  00002D                     Heap_GetBytes@size:
  1624                           	opt stack 0
  1625                           
  1626                           ; 2 bytes @ 0x2C
  1627  00002D                     	ds	1
  1628  00002E                     Loader_ProcessCommand@response:
  1629                           	opt stack 0
  1630                           
  1631                           ; 1 bytes @ 0x2D
  1632  00002E                     	ds	1
  1633  00002F                     Loader_ProcessCommand@value:
  1634                           	opt stack 0
  1635  00002F                     Heap_GetBytes@heap:
  1636                           	opt stack 0
  1637                           
  1638                           ; 2 bytes @ 0x2E
  1639  00002F                     	ds	2
  1640  000031                     ??_Stack_Init:
  1641  000031                     Jvm_RunMethod@index:
  1642                           	opt stack 0
  1643                           
  1644                           ; 2 bytes @ 0x30
  1645  000031                     	ds	2
  1646  000033                     ??_Jvm_RunMethod:
  1647                           
  1648                           ; 0 bytes @ 0x32
  1649  000033                     	ds	2
  1650  000035                     
  1651                           ; 0 bytes @ 0x34
  1652  000035                     	ds	4
  1653  000039                     Jvm_RunMethod@oldLocalsOffset:
  1654                           	opt stack 0
  1655                           
  1656                           ; 2 bytes @ 0x38
  1657  000039                     	ds	2
  1658  00003B                     Jvm_RunMethod@oldLocals:
  1659                           	opt stack 0
  1660                           
  1661                           ; 1 bytes @ 0x3A
  1662  00003B                     	ds	1
  1663  00003C                     Jvm_RunMethod@oldUnsteal:
  1664                           	opt stack 0
  1665                           
  1666                           ; 1 bytes @ 0x3B
  1667  00003C                     	ds	1
  1668  00003D                     Jvm_RunMethod@method_ptr:
  1669                           	opt stack 0
  1670                           
  1671                           ; 2 bytes @ 0x3C
  1672  00003D                     	ds	2
  1673  00003F                     Jvm_RunMethod@pcIncrement:
  1674                           	opt stack 0
  1675                           
  1676                           ; 1 bytes @ 0x3E
  1677  00003F                     	ds	1
  1678  000040                     Jvm_RunMethod@pc:
  1679                           	opt stack 0
  1680                           
  1681                           ; 4 bytes @ 0x3F
  1682  000040                     	ds	4
  1683  000044                     Jvm_RunMethod@bytecode:
  1684                           	opt stack 0
  1685                           
  1686                           ; 1 bytes @ 0x43
  1687  000044                     	ds	1
  1688  000045                     Jvm_RunMethod@nextcodes:
  1689                           	opt stack 0
  1690                           
  1691                           ; 2 bytes @ 0x44
  1692  000045                     	ds	2
  1693  000047                     Jvm_RunMethod@aux2:
  1694                           	opt stack 0
  1695                           
  1696                           ; 2 bytes @ 0x46
  1697  000047                     	ds	2
  1698  000049                     Jvm_RunMethod@method:
  1699                           	opt stack 0
  1700                           
  1701                           ; 8 bytes @ 0x48
  1702  000049                     	ds	8
  1703  000051                     Jvm_RunMethod@aux1:
  1704                           	opt stack 0
  1705                           
  1706                           ; 2 bytes @ 0x50
  1707  000051                     	ds	2
  1708  000053                     ??_Jvm_Main:
  1709                           
  1710                           ; 0 bytes @ 0x52
  1711  000053                     	ds	4
  1712  000057                     Jvm_Main@method:
  1713                           	opt stack 0
  1714                           
  1715                           ; 2 bytes @ 0x56
  1716  000057                     	ds	2
  1717  000059                     Jvm_Main@flags:
  1718                           	opt stack 0
  1719                           
  1720                           ; 1 bytes @ 0x58
  1721  000059                     	ds	1
  1722  00005A                     _Jvm_Main$1131:
  1723                           	opt stack 0
  1724                           
  1725                           ; 2 bytes @ 0x59
  1726  00005A                     	ds	2
  1727  00005C                     Jvm_Main@index:
  1728                           	opt stack 0
  1729                           
  1730                           ; 1 bytes @ 0x5B
  1731  00005C                     	ds	1
  1732  00005D                     ??_main:
  1733                           
  1734                           ; 0 bytes @ 0x5C
  1735  00005D                     	ds	1
  1736                           tblptru	equ	0xFF8
  1737                           tblptrh	equ	0xFF7
  1738                           tblptrl	equ	0xFF6
  1739                           tablat	equ	0xFF5
  1740                           postinc0	equ	0xFEE
  1741                           wreg	equ	0xFE8
  1742                           postdec1	equ	0xFE5
  1743                           fsr1h	equ	0xFE2
  1744                           fsr1l	equ	0xFE1
  1745                           
  1746 ;;
  1747 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1748 ;;
  1749 ;; *************** function _main *****************
  1750 ;; Defined at:
  1751 ;;		line 23 in file "src/Main.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;		None
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;		None
  1756 ;; Return value:  Size  Location     Type
  1757 ;;		None               void
  1758 ;; Registers used:
  1759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1765 ;;      Params:         0       0       0       0       0       0       0
  1766 ;;      Locals:         0       0       0       0       0       0       0
  1767 ;;      Temps:          1       0       0       0       0       0       0
  1768 ;;      Totals:         1       0       0       0       0       0       0
  1769 ;;Total ram usage:        1 bytes
  1770 ;; Hardware stack levels required when called:    9
  1771 ;; This function calls:
  1772 ;;		_JavaClass_Init
  1773 ;;		_Jvm_Init
  1774 ;;		_Jvm_Main
  1775 ;;		_Loader_ProcessCommand
  1776 ;;		_SerialPort_Init
  1777 ;; This function is called by:
  1778 ;;		Startup code after reset
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           	psect	text0
  1783  00163A                     __ptext0:
  1784                           	opt stack 0
  1785  00163A                     _main:
  1786                           	opt stack 22
  1787                           
  1788                           ;Main.c: 25: if (0x01 == Loader_IsLoaderEnabled) {
  1789                           
  1790                           ;incstack = 0
  1791  00163A  0EFD               	movlw	low _Loader_IsLoaderEnabled
  1792  00163C  6EF6               	movwf	tblptrl,c
  1793  00163E                     	if	1	;There is more than 1 active tblptr byte
  1794  00163E  0E7F               	movlw	high _Loader_IsLoaderEnabled
  1795  001640  6EF7               	movwf	tblptrh,c
  1796  001642                     	endif
  1797  001642                     	if	0	;There are less than 3 active tblptr bytes
  1798  001642                     	endif
  1799  001642  0008               	tblrd		*
  1800  001644  CFF5 F05D          	movff	tablat,??_main
  1801  001648  045D               	decf	??_main,w,c
  1802  00164A  A4D8               	btfss	status,2,c
  1803  00164C  D00B               	goto	l3338
  1804                           
  1805                           ;Main.c: 26: SerialPort_Init();
  1806  00164E  ECD5  F00D         	call	_SerialPort_Init	;wreg free
  1807  001652  D008               	goto	l3338
  1808  001654                     l3334:
  1809                           
  1810                           ;Main.c: 30: if (0x01 == Loader_State) {
  1811  001654  0100               	movlb	0	; () banked
  1812  001656  05D5               	decf	_Loader_State& (0+255),w,b
  1813  001658  A4D8               	btfss	status,2,c
  1814  00165A  D004               	goto	l3338
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;Main.c: 31: Loader_ProcessCommand(SerialPort_CurrentValueRx);
  1818  00165C  0100               	movlb	0	; () banked
  1819  00165E  51D6               	movf	_SerialPort_CurrentValueRx& (0+255),w,b
  1820  001660  EC30  F008         	call	_Loader_ProcessCommand
  1821  001664                     l3338:
  1822  001664  0EFD               	movlw	low _Loader_IsLoaderEnabled
  1823  001666  6EF6               	movwf	tblptrl,c
  1824  001668                     	if	1	;There is more than 1 active tblptr byte
  1825  001668  0E7F               	movlw	high _Loader_IsLoaderEnabled
  1826  00166A  6EF7               	movwf	tblptrh,c
  1827  00166C                     	endif
  1828  00166C                     	if	0	;There are less than 3 active tblptr bytes
  1829  00166C                     	endif
  1830  00166C  0008               	tblrd		*
  1831  00166E  CFF5 F05D          	movff	tablat,??_main
  1832  001672  045D               	decf	??_main,w,c
  1833  001674  B4D8               	btfsc	status,2,c
  1834  001676  D7EE               	goto	l3334
  1835                           
  1836                           ;Main.c: 32: }
  1837                           ;Main.c: 33: }
  1838                           ;Main.c: 35: if (0x00 == Loader_IsLoaderEnabled) {
  1839  001678  0EFD               	movlw	low _Loader_IsLoaderEnabled
  1840  00167A  6EF6               	movwf	tblptrl,c
  1841  00167C                     	if	1	;There is more than 1 active tblptr byte
  1842  00167C  0E7F               	movlw	high _Loader_IsLoaderEnabled
  1843  00167E  6EF7               	movwf	tblptrh,c
  1844  001680                     	endif
  1845  001680                     	if	0	;There are less than 3 active tblptr bytes
  1846  001680                     	endif
  1847  001680  0008               	tblrd		*
  1848  001682  50F5               	movf	tablat,w,c
  1849  001684  0900               	iorlw	0
  1850  001686  A4D8               	btfss	status,2,c
  1851  001688  EF0C  F000         	goto	start
  1852                           
  1853                           ;Main.c: 36: JavaClass_Init();
  1854  00168C  ECF8  F00D         	call	_JavaClass_Init	;wreg free
  1855                           
  1856                           ;Main.c: 37: Jvm_Init();
  1857  001690  ECE7  F00D         	call	_Jvm_Init	;wreg free
  1858                           
  1859                           ;Main.c: 38: Jvm_Main();
  1860  001694  EC50  F007         	call	_Jvm_Main	;wreg free
  1861  001698  EF0C  F000         	goto	start
  1862  00169C                     __end_of_main:
  1863                           	opt stack 0
  1864                           tblptru	equ	0xFF8
  1865                           tblptrh	equ	0xFF7
  1866                           tblptrl	equ	0xFF6
  1867                           tablat	equ	0xFF5
  1868                           postinc0	equ	0xFEE
  1869                           wreg	equ	0xFE8
  1870                           postdec1	equ	0xFE5
  1871                           fsr1h	equ	0xFE2
  1872                           fsr1l	equ	0xFE1
  1873                           status	equ	0xFD8
  1874                           
  1875 ;; *************** function _SerialPort_Init *****************
  1876 ;; Defined at:
  1877 ;;		line 10 in file "src/SerialPort/SerialPort.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;		None
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;		None
  1882 ;; Return value:  Size  Location     Type
  1883 ;;		None               void
  1884 ;; Registers used:
  1885 ;;		wreg, status,2
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1891 ;;      Params:         0       0       0       0       0       0       0
  1892 ;;      Locals:         0       0       0       0       0       0       0
  1893 ;;      Temps:          0       0       0       0       0       0       0
  1894 ;;      Totals:         0       0       0       0       0       0       0
  1895 ;;Total ram usage:        0 bytes
  1896 ;; Hardware stack levels used:    1
  1897 ;; Hardware stack levels required when called:    2
  1898 ;; This function calls:
  1899 ;;		Nothing
  1900 ;; This function is called by:
  1901 ;;		_main
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           	psect	text1
  1906  001BAA                     __ptext1:
  1907                           	opt stack 0
  1908  001BAA                     _SerialPort_Init:
  1909                           	opt stack 28
  1910                           
  1911                           ;SerialPort.c: 12: INTCON = 0xC0;
  1912                           
  1913                           ;incstack = 0
  1914  001BAA  0EC0               	movlw	192
  1915  001BAC  6EF2               	movwf	intcon,c	;volatile
  1916                           
  1917                           ;SerialPort.c: 13: TRISC = 0xC0;
  1918  001BAE  0EC0               	movlw	192
  1919  001BB0  6E94               	movwf	3988,c	;volatile
  1920                           
  1921                           ;SerialPort.c: 14: BRG16 = 0;
  1922  001BB2  96B8               	bcf	4024,3,c	;volatile
  1923                           
  1924                           ;SerialPort.c: 15: BRGH = 0;
  1925  001BB4  94AC               	bcf	4012,2,c	;volatile
  1926                           
  1927                           ;SerialPort.c: 18: SPBRG = 129;
  1928  001BB6  0E81               	movlw	129
  1929  001BB8  6EAF               	movwf	4015,c	;volatile
  1930                           
  1931                           ;SerialPort.c: 19: TX9 = 0;
  1932  001BBA  9CAC               	bcf	4012,6,c	;volatile
  1933                           
  1934                           ;SerialPort.c: 20: SYNC = 0;
  1935  001BBC  98AC               	bcf	4012,4,c	;volatile
  1936                           
  1937                           ;SerialPort.c: 21: RX9 = 0;
  1938  001BBE  9CAB               	bcf	4011,6,c	;volatile
  1939                           
  1940                           ;SerialPort.c: 22: SPEN = 1;
  1941  001BC0  8EAB               	bsf	4011,7,c	;volatile
  1942                           
  1943                           ;SerialPort.c: 23: SREN = 0;
  1944  001BC2  9AAB               	bcf	4011,5,c	;volatile
  1945                           
  1946                           ;SerialPort.c: 24: CREN = 1;
  1947  001BC4  88AB               	bsf	4011,4,c	;volatile
  1948                           
  1949                           ;SerialPort.c: 25: RCIE = 1;
  1950  001BC6  8A9D               	bsf	3997,5,c	;volatile
  1951                           
  1952                           ;SerialPort.c: 26: TXIE = 0;
  1953  001BC8  989D               	bcf	3997,4,c	;volatile
  1954                           
  1955                           ;SerialPort.c: 27: TXEN = 1;
  1956  001BCA  8AAC               	bsf	4012,5,c	;volatile
  1957  001BCC  0012               	return	
  1958  001BCE                     __end_of_SerialPort_Init:
  1959                           	opt stack 0
  1960                           tblptru	equ	0xFF8
  1961                           tblptrh	equ	0xFF7
  1962                           tblptrl	equ	0xFF6
  1963                           tablat	equ	0xFF5
  1964                           intcon	equ	0xFF2
  1965                           postinc0	equ	0xFEE
  1966                           wreg	equ	0xFE8
  1967                           postdec1	equ	0xFE5
  1968                           fsr1h	equ	0xFE2
  1969                           fsr1l	equ	0xFE1
  1970                           status	equ	0xFD8
  1971                           
  1972 ;; *************** function _Loader_ProcessCommand *****************
  1973 ;; Defined at:
  1974 ;;		line 61 in file "src/Loader/Loader.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  value           1    wreg     unsigned char 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  value           1   46[COMRAM] unsigned char 
  1979 ;;  response        1   45[COMRAM] unsigned char 
  1980 ;; Return value:  Size  Location     Type
  1981 ;;		None               void
  1982 ;; Registers used:
  1983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1989 ;;      Params:         0       0       0       0       0       0       0
  1990 ;;      Locals:         2       0       0       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0       0       0
  1992 ;;      Totals:         2       0       0       0       0       0       0
  1993 ;;Total ram usage:        2 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:    8
  1996 ;; This function calls:
  1997 ;;		_Loader_ProcessCommandLoad
  1998 ;;		_SerialPort_Send
  1999 ;; This function is called by:
  2000 ;;		_main
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text2
  2005  001060                     __ptext2:
  2006                           	opt stack 0
  2007  001060                     _Loader_ProcessCommand:
  2008                           	opt stack 22
  2009                           
  2010                           ;incstack = 0
  2011                           ;Loader_ProcessCommand@value stored from wreg
  2012  001060  6E2F               	movwf	Loader_ProcessCommand@value,c
  2013                           
  2014                           ;Loader.c: 63: uint8_t response = 0x61;
  2015  001062  0E61               	movlw	97
  2016  001064  6E2E               	movwf	Loader_ProcessCommand@response,c
  2017                           
  2018                           ;Loader.c: 65: switch (Loader_CmdProcessingState) {
  2019  001066  D02C               	goto	l3300
  2020  001068                     l3272:
  2021                           
  2022                           ;Loader.c: 67: if (0x00 != value) {
  2023  001068  502F               	movf	Loader_ProcessCommand@value,w,c
  2024  00106A  B4D8               	btfsc	status,2,c
  2025  00106C  D03A               	goto	l3302
  2026                           
  2027                           ;Loader.c: 68: response = 0x91;
  2028  00106E  0E91               	movlw	145
  2029  001070  D01F               	goto	L3
  2030  001072                     l3276:
  2031                           
  2032                           ;Loader.c: 74: Loader_Cmd = 0x10;
  2033  001072  0E10               	movlw	16
  2034  001074  D001               	goto	L2
  2035  001076                     l3278:
  2036                           
  2037                           ;Loader.c: 77: Loader_Cmd = 0x11;
  2038  001076  0E11               	movlw	17
  2039  001078                     L2:
  2040  001078  0100               	movlb	0	; () banked
  2041  00107A  6FD3               	movwf	_Loader_Cmd& (0+255),b
  2042                           
  2043                           ;Loader.c: 79: break;
  2044  00107C  D032               	goto	l3302
  2045  00107E                     l3280:
  2046                           
  2047                           ;Loader.c: 81: response = 0x92;
  2048  00107E  0E92               	movlw	146
  2049  001080  D017               	goto	L3
  2050  001082                     l3284:
  2051  001082  502F               	movf	Loader_ProcessCommand@value,w,c
  2052                           
  2053                           ; Switch size 1, requested type "space"
  2054                           ; Number of cases is 2, Range of values is 16 to 17
  2055                           ; switch strategies available:
  2056                           ; Name         Instructions Cycles
  2057                           ; simple_byte            7     4 (average)
  2058                           ;	Chosen strategy is simple_byte
  2059  001084  0A10               	xorlw	16	; case 16
  2060  001086  B4D8               	btfsc	status,2,c
  2061  001088  D7F4               	goto	l3276
  2062  00108A  0A01               	xorlw	1	; case 17
  2063  00108C  B4D8               	btfsc	status,2,c
  2064  00108E  D7F3               	goto	l3278
  2065  001090  D7F6               	goto	l3280
  2066  001092                     l3286:
  2067                           
  2068                           ;Loader.c: 86: Loader_CmdLength = value;
  2069  001092  C02F  F064         	movff	Loader_ProcessCommand@value,_Loader_CmdLength
  2070  001096  6A65               	clrf	_Loader_CmdLength+1,c
  2071                           
  2072                           ;Loader.c: 87: Loader_CmdLength = Loader_CmdLength << 8;
  2073  001098  5064               	movf	_Loader_CmdLength,w,c
  2074  00109A  6E65               	movwf	_Loader_CmdLength+1,c
  2075  00109C  6A64               	clrf	_Loader_CmdLength,c
  2076                           
  2077                           ;Loader.c: 88: break;
  2078  00109E  D021               	goto	l3302
  2079  0010A0                     l3290:
  2080                           
  2081                           ;Loader.c: 90: Loader_CmdLength += value;
  2082  0010A0  502F               	movf	Loader_ProcessCommand@value,w,c
  2083  0010A2  2664               	addwf	_Loader_CmdLength,f,c
  2084  0010A4  0E00               	movlw	0
  2085  0010A6  2265               	addwfc	_Loader_CmdLength+1,f,c
  2086                           
  2087                           ;Loader.c: 91: break;
  2088  0010A8  D01C               	goto	l3302
  2089  0010AA                     l3292:
  2090                           
  2091                           ;Loader.c: 95: response = Loader_ProcessCommandLoad(value);
  2092  0010AA  502F               	movf	Loader_ProcessCommand@value,w,c
  2093  0010AC  EC2D  F009         	call	_Loader_ProcessCommandLoad
  2094  0010B0                     L3:
  2095  0010B0  6E2E               	movwf	Loader_ProcessCommand@response,c
  2096                           
  2097                           ;Loader.c: 96: break;
  2098  0010B2  D017               	goto	l3302
  2099  0010B4                     l3296:
  2100  0010B4  0100               	movlb	0	; () banked
  2101  0010B6  51D3               	movf	_Loader_Cmd& (0+255),w,b
  2102                           
  2103                           ; Switch size 1, requested type "space"
  2104                           ; Number of cases is 1, Range of values is 16 to 16
  2105                           ; switch strategies available:
  2106                           ; Name         Instructions Cycles
  2107                           ; simple_byte            4     3 (average)
  2108                           ;	Chosen strategy is simple_byte
  2109  0010B8  0A10               	xorlw	16	; case 16
  2110  0010BA  B4D8               	btfsc	status,2,c
  2111  0010BC  D7F6               	goto	l3292
  2112  0010BE  D011               	goto	l3302
  2113  0010C0                     l3300:
  2114  0010C0  0100               	movlb	0	; () banked
  2115  0010C2  51D4               	movf	_Loader_CmdProcessingState& (0+255),w,b
  2116                           
  2117                           ; Switch size 1, requested type "space"
  2118                           ; Number of cases is 5, Range of values is 0 to 4
  2119                           ; switch strategies available:
  2120                           ; Name         Instructions Cycles
  2121                           ; simple_byte           16     9 (average)
  2122                           ;	Chosen strategy is simple_byte
  2123  0010C4  0A00               	xorlw	0	; case 0
  2124  0010C6  B4D8               	btfsc	status,2,c
  2125  0010C8  D7CF               	goto	l3272
  2126  0010CA  0A01               	xorlw	1	; case 1
  2127  0010CC  B4D8               	btfsc	status,2,c
  2128  0010CE  D7D9               	goto	l3284
  2129  0010D0  0A03               	xorlw	3	; case 2
  2130  0010D2  B4D8               	btfsc	status,2,c
  2131  0010D4  D7DE               	goto	l3286
  2132  0010D6  0A01               	xorlw	1	; case 3
  2133  0010D8  B4D8               	btfsc	status,2,c
  2134  0010DA  D7E2               	goto	l3290
  2135  0010DC  0A07               	xorlw	7	; case 4
  2136  0010DE  B4D8               	btfsc	status,2,c
  2137  0010E0  D7E9               	goto	l3296
  2138  0010E2                     l3302:
  2139                           
  2140                           ;Loader.c: 102: if (((((0x00 + 1) + 1) + 1) + 1) > Loader_CmdProcessingState) {
  2141  0010E2  0E04               	movlw	4
  2142  0010E4  0100               	movlb	0	; () banked
  2143  0010E6  5DD4               	subwf	_Loader_CmdProcessingState& (0+255),w,b
  2144  0010E8  B0D8               	btfsc	status,0,c
  2145  0010EA  D002               	goto	l3306
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;Loader.c: 103: Loader_CmdProcessingState++;
  2149  0010EC  0100               	movlb	0	; () banked
  2150  0010EE  2BD4               	incf	_Loader_CmdProcessingState& (0+255),f,b
  2151  0010F0                     l3306:
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;Loader.c: 104: }
  2155                           ;Loader.c: 107: Loader_State = 0x00;
  2156  0010F0  0E00               	movlw	0
  2157  0010F2  0100               	movlb	0	; () banked
  2158  0010F4  6FD5               	movwf	_Loader_State& (0+255),b
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;Loader.c: 110: (RCIE = 1);
  2162  0010F6  8A9D               	bsf	3997,5,c	;volatile
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;Loader.c: 113: if (((((((0x00 + 1) + 1) + 1) + 1) + 1) == Loader_CmdProcessingState)
  2166                           ;Loader.c: 114: || (0x61 != response)) {
  2167  0010F8  0100               	movlb	0	; () banked
  2168  0010FA  51D4               	movf	_Loader_CmdProcessingState& (0+255),w,b
  2169  0010FC  0A05               	xorlw	5
  2170  0010FE  B4D8               	btfsc	status,2,c
  2171  001100  D004               	goto	l3314
  2172                           
  2173                           ; BSR set to: 0
  2174  001102  502E               	movf	Loader_ProcessCommand@response,w,c
  2175  001104  0A61               	xorlw	97
  2176  001106  B4D8               	btfsc	status,2,c
  2177  001108  D003               	goto	l3316
  2178  00110A                     l3314:
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;Loader.c: 116: Loader_CmdProcessingState = 0x00;
  2182  00110A  0E00               	movlw	0
  2183  00110C  0100               	movlb	0	; () banked
  2184  00110E  6FD4               	movwf	_Loader_CmdProcessingState& (0+255),b
  2185  001110                     l3316:
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;Loader.c: 117: }
  2189                           ;Loader.c: 120: SerialPort_Send(response);
  2190  001110  502E               	movf	Loader_ProcessCommand@response,w,c
  2191  001112  EC13  F00E         	call	_SerialPort_Send
  2192  001116  0012               	return	
  2193  001118                     __end_of_Loader_ProcessCommand:
  2194                           	opt stack 0
  2195                           tblptru	equ	0xFF8
  2196                           tblptrh	equ	0xFF7
  2197                           tblptrl	equ	0xFF6
  2198                           tablat	equ	0xFF5
  2199                           intcon	equ	0xFF2
  2200                           postinc0	equ	0xFEE
  2201                           wreg	equ	0xFE8
  2202                           postdec1	equ	0xFE5
  2203                           fsr1h	equ	0xFE2
  2204                           fsr1l	equ	0xFE1
  2205                           status	equ	0xFD8
  2206                           
  2207 ;; *************** function _SerialPort_Send *****************
  2208 ;; Defined at:
  2209 ;;		line 50 in file "src/SerialPort/SerialPort.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  byte            1    wreg     unsigned char 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  byte            1   15[COMRAM] unsigned char 
  2214 ;; Return value:  Size  Location     Type
  2215 ;;		None               void
  2216 ;; Registers used:
  2217 ;;		wreg
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2223 ;;      Params:         0       0       0       0       0       0       0
  2224 ;;      Locals:         1       0       0       0       0       0       0
  2225 ;;      Temps:          0       0       0       0       0       0       0
  2226 ;;      Totals:         1       0       0       0       0       0       0
  2227 ;;Total ram usage:        1 bytes
  2228 ;; Hardware stack levels used:    1
  2229 ;; Hardware stack levels required when called:    2
  2230 ;; This function calls:
  2231 ;;		Nothing
  2232 ;; This function is called by:
  2233 ;;		_Loader_ProcessCommand
  2234 ;;		_Timer_T0_ISR
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           	psect	text3
  2239  001C26                     __ptext3:
  2240                           	opt stack 0
  2241  001C26                     _SerialPort_Send:
  2242                           	opt stack 27
  2243                           
  2244                           ;incstack = 0
  2245                           ;SerialPort_Send@byte stored from wreg
  2246  001C26  6E10               	movwf	SerialPort_Send@byte,c
  2247  001C28                     l512:
  2248  001C28  A89E               	btfss	3998,4,c	;volatile
  2249  001C2A  D7FE               	goto	l512
  2250                           
  2251                           ;SerialPort.c: 53: TXREG = byte;
  2252  001C2C  C010  FFAD         	movff	SerialPort_Send@byte,4013	;volatile
  2253  001C30  0012               	return	
  2254  001C32                     __end_of_SerialPort_Send:
  2255                           	opt stack 0
  2256                           tblptru	equ	0xFF8
  2257                           tblptrh	equ	0xFF7
  2258                           tblptrl	equ	0xFF6
  2259                           tablat	equ	0xFF5
  2260                           intcon	equ	0xFF2
  2261                           postinc0	equ	0xFEE
  2262                           wreg	equ	0xFE8
  2263                           postdec1	equ	0xFE5
  2264                           fsr1h	equ	0xFE2
  2265                           fsr1l	equ	0xFE1
  2266                           status	equ	0xFD8
  2267                           
  2268 ;; *************** function _Loader_ProcessCommandLoad *****************
  2269 ;; Defined at:
  2270 ;;		line 39 in file "src/Loader/Loader.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;  value           1    wreg     unsigned char 
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;  value           1   44[COMRAM] unsigned char 
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      unsigned char 
  2277 ;; Registers used:
  2278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2284 ;;      Params:         0       0       0       0       0       0       0
  2285 ;;      Locals:         1       0       0       0       0       0       0
  2286 ;;      Temps:          2       0       0       0       0       0       0
  2287 ;;      Totals:         3       0       0       0       0       0       0
  2288 ;;Total ram usage:        3 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; Hardware stack levels required when called:    7
  2291 ;; This function calls:
  2292 ;;		_Mm_SetU08
  2293 ;;		_Mm_SetU16
  2294 ;; This function is called by:
  2295 ;;		_Loader_ProcessCommand
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           	psect	text4
  2300  00125A                     __ptext4:
  2301                           	opt stack 0
  2302  00125A                     _Loader_ProcessCommandLoad:
  2303                           	opt stack 22
  2304                           
  2305                           ;incstack = 0
  2306                           ;Loader_ProcessCommandLoad@value stored from wreg
  2307  00125A  6E2D               	movwf	Loader_ProcessCommandLoad@value,c
  2308                           
  2309                           ;Loader.c: 41: Mm_SetU08((uint32_t) &JavaClass_Data[Loader_CmdDataOffset], value);
  2310  00125C  0EFB               	movlw	low _JavaClass_Data
  2311  00125E  6E2B               	movwf	??_Loader_ProcessCommandLoad& (0+255),c
  2312  001260  0E7B               	movlw	high _JavaClass_Data
  2313  001262  6E2C               	movwf	(??_Loader_ProcessCommandLoad+1)& (0+255),c
  2314  001264  0100               	movlb	0	; () banked
  2315  001266  51CF               	movf	_Loader_CmdDataOffset& (0+255),w,b
  2316  001268  262B               	addwf	??_Loader_ProcessCommandLoad,f,c
  2317  00126A  0100               	movlb	0	; () banked
  2318  00126C  51D0               	movf	(_Loader_CmdDataOffset+1)& (0+255),w,b
  2319  00126E  222C               	addwfc	??_Loader_ProcessCommandLoad+1,f,c
  2320  001270  C02B  F025         	movff	??_Loader_ProcessCommandLoad,Mm_SetU08@address
  2321  001274  C02C  F026         	movff	??_Loader_ProcessCommandLoad+1,Mm_SetU08@address+1
  2322  001278  6A27               	clrf	Mm_SetU08@address+2,c
  2323  00127A  6A28               	clrf	Mm_SetU08@address+3,c
  2324  00127C  C02D  F029         	movff	Loader_ProcessCommandLoad@value,Mm_SetU08@value
  2325  001280  EC22  F00D         	call	_Mm_SetU08	;wreg free
  2326                           
  2327                           ;Loader.c: 42: Loader_CmdDataOffset++;
  2328  001284  0100               	movlb	0	; () banked
  2329  001286  4BCF               	infsnz	_Loader_CmdDataOffset& (0+255),f,b
  2330  001288  2BD0               	incf	(_Loader_CmdDataOffset+1)& (0+255),f,b
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;Loader.c: 44: if (Loader_CmdLength == Loader_CmdDataOffset) {
  2334  00128A  0100               	movlb	0	; () banked
  2335  00128C  51D0               	movf	(_Loader_CmdDataOffset+1)& (0+255),w,b
  2336  00128E  1865               	xorwf	_Loader_CmdLength+1,w,c
  2337  001290  E103               	bnz	u2145
  2338  001292  0100               	movlb	0	; () banked
  2339  001294  51CF               	movf	_Loader_CmdDataOffset& (0+255),w,b
  2340  001296  1864               	xorwf	_Loader_CmdLength,w,c
  2341  001298                     u2145:
  2342  001298  A4D8               	btfss	status,2,c
  2343  00129A  D028               	goto	l3234
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;Loader.c: 47: Loader_CmdProcessingState++;
  2347  00129C  0100               	movlb	0	; () banked
  2348  00129E  2BD4               	incf	_Loader_CmdProcessingState& (0+255),f,b
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;Loader.c: 49: Loader_CmdDataOffset = 0;
  2352  0012A0  0E00               	movlw	0
  2353  0012A2  0100               	movlb	0	; () banked
  2354  0012A4  6FD0               	movwf	(_Loader_CmdDataOffset+1)& (0+255),b
  2355  0012A6  0E00               	movlw	0
  2356  0012A8  0100               	movlb	0	; () banked
  2357  0012AA  6FCF               	movwf	_Loader_CmdDataOffset& (0+255),b
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;Loader.c: 51: Mm_SetU16((uint32_t) &JavaClass_DataSize, Loader_CmdLength);
  2361  0012AC  0EFB               	movlw	low _JavaClass_DataSize
  2362  0012AE  6E2B               	movwf	??_Loader_ProcessCommandLoad& (0+255),c
  2363  0012B0  0E7F               	movlw	high _JavaClass_DataSize
  2364  0012B2  6E2C               	movwf	(??_Loader_ProcessCommandLoad+1)& (0+255),c
  2365  0012B4  C02B  F025         	movff	??_Loader_ProcessCommandLoad,Mm_SetU16@address
  2366  0012B8  C02C  F026         	movff	??_Loader_ProcessCommandLoad+1,Mm_SetU16@address+1
  2367  0012BC  6A27               	clrf	Mm_SetU16@address+2,c
  2368  0012BE  6A28               	clrf	Mm_SetU16@address+3,c
  2369  0012C0  C064  F029         	movff	_Loader_CmdLength,Mm_SetU16@value
  2370  0012C4  C065  F02A         	movff	_Loader_CmdLength+1,Mm_SetU16@value+1
  2371  0012C8  EC05  F00D         	call	_Mm_SetU16	;wreg free
  2372                           
  2373                           ;Loader.c: 53: Mm_SetU08((uint32_t) &Loader_IsLoaderEnabled, 0x00);
  2374  0012CC  0EFD               	movlw	low _Loader_IsLoaderEnabled
  2375  0012CE  6E2B               	movwf	??_Loader_ProcessCommandLoad& (0+255),c
  2376  0012D0  0E7F               	movlw	high _Loader_IsLoaderEnabled
  2377  0012D2  6E2C               	movwf	(??_Loader_ProcessCommandLoad+1)& (0+255),c
  2378  0012D4  C02B  F025         	movff	??_Loader_ProcessCommandLoad,Mm_SetU08@address
  2379  0012D8  C02C  F026         	movff	??_Loader_ProcessCommandLoad+1,Mm_SetU08@address+1
  2380  0012DC  6A27               	clrf	Mm_SetU08@address+2,c
  2381  0012DE  6A28               	clrf	Mm_SetU08@address+3,c
  2382  0012E0  0E00               	movlw	0
  2383  0012E2  6E29               	movwf	Mm_SetU08@value,c
  2384  0012E4  EC22  F00D         	call	_Mm_SetU08	;wreg free
  2385                           
  2386                           ;Loader.c: 55: return 0x80;
  2387  0012E8  0E80               	movlw	128
  2388  0012EA  D001               	goto	l332
  2389  0012EC                     l3234:
  2390                           
  2391                           ;Loader.c: 56: }
  2392                           ;Loader.c: 58: return 0x61;
  2393  0012EC  0E61               	movlw	97
  2394  0012EE                     l332:
  2395  0012EE  0012               	return	
  2396  0012F0                     __end_of_Loader_ProcessCommandLoad:
  2397                           	opt stack 0
  2398                           tblptru	equ	0xFF8
  2399                           tblptrh	equ	0xFF7
  2400                           tblptrl	equ	0xFF6
  2401                           tablat	equ	0xFF5
  2402                           intcon	equ	0xFF2
  2403                           postinc0	equ	0xFEE
  2404                           wreg	equ	0xFE8
  2405                           postdec1	equ	0xFE5
  2406                           fsr1h	equ	0xFE2
  2407                           fsr1l	equ	0xFE1
  2408                           status	equ	0xFD8
  2409                           
  2410 ;; *************** function _Mm_SetU16 *****************
  2411 ;; Defined at:
  2412 ;;		line 34 in file "src/MemoryManagement/MemoryManagement.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  address         4   36[COMRAM] unsigned long 
  2415 ;;  value           2   40[COMRAM] unsigned short 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;		None
  2418 ;; Return value:  Size  Location     Type
  2419 ;;		None               void
  2420 ;; Registers used:
  2421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/0
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2427 ;;      Params:         6       0       0       0       0       0       0
  2428 ;;      Locals:         0       0       0       0       0       0       0
  2429 ;;      Temps:          0       0       0       0       0       0       0
  2430 ;;      Totals:         6       0       0       0       0       0       0
  2431 ;;Total ram usage:        6 bytes
  2432 ;; Hardware stack levels used:    1
  2433 ;; Hardware stack levels required when called:    6
  2434 ;; This function calls:
  2435 ;;		_Mm_WriteNVM
  2436 ;; This function is called by:
  2437 ;;		_Loader_ProcessCommandLoad
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441                           	psect	text5
  2442  001A0A                     __ptext5:
  2443                           	opt stack 0
  2444  001A0A                     _Mm_SetU16:
  2445                           	opt stack 22
  2446                           
  2447                           ;MemoryManagement.c: 36: Mm_WriteNVM((uint32_t) address, 2, (uint8_t *) &value);
  2448                           
  2449                           ;incstack = 0
  2450  001A0A  C025  F0C5         	movff	Mm_SetU16@address,Mm_WriteNVM@address
  2451  001A0E  C026  F0C6         	movff	Mm_SetU16@address+1,Mm_WriteNVM@address+1
  2452  001A12  C027  F0C7         	movff	Mm_SetU16@address+2,Mm_WriteNVM@address+2
  2453  001A16  C028  F0C8         	movff	Mm_SetU16@address+3,Mm_WriteNVM@address+3
  2454  001A1A  0E02               	movlw	2
  2455  001A1C  0100               	movlb	0	; () banked
  2456  001A1E  6FC9               	movwf	Mm_WriteNVM@bytes& (0+255),b
  2457  001A20  0E00               	movlw	0
  2458  001A22  0100               	movlb	0	; () banked
  2459  001A24  6FCA               	movwf	(Mm_WriteNVM@bytes+1)& (0+255),b
  2460  001A26  0E00               	movlw	0
  2461  001A28  0100               	movlb	0	; () banked
  2462  001A2A  6FCB               	movwf	(Mm_WriteNVM@bytes+2)& (0+255),b
  2463  001A2C  0E00               	movlw	0
  2464  001A2E  0100               	movlb	0	; () banked
  2465  001A30  6FCC               	movwf	(Mm_WriteNVM@bytes+3)& (0+255),b
  2466  001A32  0E00               	movlw	high Mm_SetU16@value
  2467  001A34  0100               	movlb	0	; () banked
  2468  001A36  6FCE               	movwf	(Mm_WriteNVM@data+1)& (0+255),b
  2469  001A38  0E29               	movlw	low Mm_SetU16@value
  2470  001A3A  0100               	movlb	0	; () banked
  2471  001A3C  6FCD               	movwf	Mm_WriteNVM@data& (0+255),b
  2472  001A3E  ECE1  F008         	call	_Mm_WriteNVM	;wreg free
  2473  001A42  0012               	return	
  2474  001A44                     __end_of_Mm_SetU16:
  2475                           	opt stack 0
  2476                           tblptru	equ	0xFF8
  2477                           tblptrh	equ	0xFF7
  2478                           tblptrl	equ	0xFF6
  2479                           tablat	equ	0xFF5
  2480                           intcon	equ	0xFF2
  2481                           postinc0	equ	0xFEE
  2482                           wreg	equ	0xFE8
  2483                           postdec1	equ	0xFE5
  2484                           fsr1h	equ	0xFE2
  2485                           fsr1l	equ	0xFE1
  2486                           status	equ	0xFD8
  2487                           
  2488 ;; *************** function _Mm_SetU08 *****************
  2489 ;; Defined at:
  2490 ;;		line 29 in file "src/MemoryManagement/MemoryManagement.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;  address         4   36[COMRAM] unsigned long 
  2493 ;;  value           1   40[COMRAM] unsigned char 
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;		None
  2496 ;; Return value:  Size  Location     Type
  2497 ;;		None               void
  2498 ;; Registers used:
  2499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2505 ;;      Params:         5       0       0       0       0       0       0
  2506 ;;      Locals:         0       0       0       0       0       0       0
  2507 ;;      Temps:          0       0       0       0       0       0       0
  2508 ;;      Totals:         5       0       0       0       0       0       0
  2509 ;;Total ram usage:        5 bytes
  2510 ;; Hardware stack levels used:    1
  2511 ;; Hardware stack levels required when called:    6
  2512 ;; This function calls:
  2513 ;;		_Mm_WriteNVM
  2514 ;; This function is called by:
  2515 ;;		_Loader_ProcessCommandLoad
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           	psect	text6
  2520  001A44                     __ptext6:
  2521                           	opt stack 0
  2522  001A44                     _Mm_SetU08:
  2523                           	opt stack 22
  2524                           
  2525                           ;MemoryManagement.c: 31: Mm_WriteNVM((uint32_t) address, 1, (uint8_t *) &value);
  2526                           
  2527                           ;incstack = 0
  2528  001A44  C025  F0C5         	movff	Mm_SetU08@address,Mm_WriteNVM@address
  2529  001A48  C026  F0C6         	movff	Mm_SetU08@address+1,Mm_WriteNVM@address+1
  2530  001A4C  C027  F0C7         	movff	Mm_SetU08@address+2,Mm_WriteNVM@address+2
  2531  001A50  C028  F0C8         	movff	Mm_SetU08@address+3,Mm_WriteNVM@address+3
  2532  001A54  0E01               	movlw	1
  2533  001A56  0100               	movlb	0	; () banked
  2534  001A58  6FC9               	movwf	Mm_WriteNVM@bytes& (0+255),b
  2535  001A5A  0E00               	movlw	0
  2536  001A5C  0100               	movlb	0	; () banked
  2537  001A5E  6FCA               	movwf	(Mm_WriteNVM@bytes+1)& (0+255),b
  2538  001A60  0E00               	movlw	0
  2539  001A62  0100               	movlb	0	; () banked
  2540  001A64  6FCB               	movwf	(Mm_WriteNVM@bytes+2)& (0+255),b
  2541  001A66  0E00               	movlw	0
  2542  001A68  0100               	movlb	0	; () banked
  2543  001A6A  6FCC               	movwf	(Mm_WriteNVM@bytes+3)& (0+255),b
  2544  001A6C  0E00               	movlw	high Mm_SetU08@value
  2545  001A6E  0100               	movlb	0	; () banked
  2546  001A70  6FCE               	movwf	(Mm_WriteNVM@data+1)& (0+255),b
  2547  001A72  0E29               	movlw	low Mm_SetU08@value
  2548  001A74  0100               	movlb	0	; () banked
  2549  001A76  6FCD               	movwf	Mm_WriteNVM@data& (0+255),b
  2550  001A78  ECE1  F008         	call	_Mm_WriteNVM	;wreg free
  2551  001A7C  0012               	return	
  2552  001A7E                     __end_of_Mm_SetU08:
  2553                           	opt stack 0
  2554                           tblptru	equ	0xFF8
  2555                           tblptrh	equ	0xFF7
  2556                           tblptrl	equ	0xFF6
  2557                           tablat	equ	0xFF5
  2558                           intcon	equ	0xFF2
  2559                           postinc0	equ	0xFEE
  2560                           wreg	equ	0xFE8
  2561                           postdec1	equ	0xFE5
  2562                           fsr1h	equ	0xFE2
  2563                           fsr1l	equ	0xFE1
  2564                           status	equ	0xFD8
  2565                           
  2566 ;; *************** function _Mm_WriteNVM *****************
  2567 ;; Defined at:
  2568 ;;		line 157 in file "src/MemoryManagement/PIC18F4520/MemoryManagement_PIC18F4520.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  address         4   69[BANK0 ] unsigned long 
  2571 ;;  bytes           4   73[BANK0 ] unsigned long 
  2572 ;;  data            2   77[BANK0 ] PTR unsigned char 
  2573 ;;		 -> Mm_SetU16@value(2), Mm_SetU08@value(1), 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;		None
  2576 ;; Return value:  Size  Location     Type
  2577 ;;		None               void
  2578 ;; Registers used:
  2579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2585 ;;      Params:         0      10       0       0       0       0       0
  2586 ;;      Locals:         0       0       0       0       0       0       0
  2587 ;;      Temps:          0       0       0       0       0       0       0
  2588 ;;      Totals:         0      10       0       0       0       0       0
  2589 ;;Total ram usage:       10 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:    5
  2592 ;; This function calls:
  2593 ;;		_Mm_IsAddressEEPROM
  2594 ;;		_Mm_IsAddressFlash
  2595 ;;		_Mm_WriteEEPROM
  2596 ;;		_Mm_WriteFlash
  2597 ;; This function is called by:
  2598 ;;		_Mm_SetU08
  2599 ;;		_Mm_SetU16
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text7
  2604  0011C2                     __ptext7:
  2605                           	opt stack 0
  2606  0011C2                     _Mm_WriteNVM:
  2607                           	opt stack 22
  2608                           
  2609                           ;MemoryManagement_PIC18F4520.c: 159: if (Mm_IsAddressEEPROM(address)) {
  2610                           
  2611                           ;incstack = 0
  2612  0011C2  C0C5  F010         	movff	Mm_WriteNVM@address,Mm_IsAddressEEPROM@address
  2613  0011C6  C0C6  F011         	movff	Mm_WriteNVM@address+1,Mm_IsAddressEEPROM@address+1
  2614  0011CA  C0C7  F012         	movff	Mm_WriteNVM@address+2,Mm_IsAddressEEPROM@address+2
  2615  0011CE  C0C8  F013         	movff	Mm_WriteNVM@address+3,Mm_IsAddressEEPROM@address+3
  2616  0011D2  EC59  F00D         	call	_Mm_IsAddressEEPROM	;wreg free
  2617  0011D6  0900               	iorlw	0
  2618  0011D8  B4D8               	btfsc	status,2,c
  2619  0011DA  D019               	goto	l2976
  2620                           
  2621                           ;MemoryManagement_PIC18F4520.c: 160: Mm_WriteEEPROM(address, bytes, data);
  2622  0011DC  C0C5  F011         	movff	Mm_WriteNVM@address,Mm_WriteEEPROM@address
  2623  0011E0  C0C6  F012         	movff	Mm_WriteNVM@address+1,Mm_WriteEEPROM@address+1
  2624  0011E4  C0C7  F013         	movff	Mm_WriteNVM@address+2,Mm_WriteEEPROM@address+2
  2625  0011E8  C0C8  F014         	movff	Mm_WriteNVM@address+3,Mm_WriteEEPROM@address+3
  2626  0011EC  C0C9  F015         	movff	Mm_WriteNVM@bytes,Mm_WriteEEPROM@bytes
  2627  0011F0  C0CA  F016         	movff	Mm_WriteNVM@bytes+1,Mm_WriteEEPROM@bytes+1
  2628  0011F4  C0CB  F017         	movff	Mm_WriteNVM@bytes+2,Mm_WriteEEPROM@bytes+2
  2629  0011F8  C0CC  F018         	movff	Mm_WriteNVM@bytes+3,Mm_WriteEEPROM@bytes+3
  2630  0011FC  0100               	movlb	0	; () banked
  2631  0011FE  C0CE  F01A         	movff	Mm_WriteNVM@data+1,Mm_WriteEEPROM@data+1
  2632  001202  0100               	movlb	0	; () banked
  2633  001204  C0CD  F019         	movff	Mm_WriteNVM@data,Mm_WriteEEPROM@data
  2634  001208  EC4E  F00B         	call	_Mm_WriteEEPROM	;wreg free
  2635                           
  2636                           ;MemoryManagement_PIC18F4520.c: 161: } else if (Mm_IsAddressFlash(address)) {
  2637  00120C  D025               	goto	l457
  2638  00120E                     l2976:
  2639  00120E  C0C5  F010         	movff	Mm_WriteNVM@address,Mm_IsAddressFlash@address
  2640  001212  C0C6  F011         	movff	Mm_WriteNVM@address+1,Mm_IsAddressFlash@address+1
  2641  001216  C0C7  F012         	movff	Mm_WriteNVM@address+2,Mm_IsAddressFlash@address+2
  2642  00121A  C0C8  F013         	movff	Mm_WriteNVM@address+3,Mm_IsAddressFlash@address+3
  2643  00121E  ECC6  F00C         	call	_Mm_IsAddressFlash	;wreg free
  2644  001222  0900               	iorlw	0
  2645  001224  B4D8               	btfsc	status,2,c
  2646  001226  D018               	goto	l457
  2647                           
  2648                           ;MemoryManagement_PIC18F4520.c: 162: Mm_WriteFlash(address, bytes, data);
  2649  001228  C0C5  F01A         	movff	Mm_WriteNVM@address,Mm_WriteFlash@address
  2650  00122C  C0C6  F01B         	movff	Mm_WriteNVM@address+1,Mm_WriteFlash@address+1
  2651  001230  C0C7  F01C         	movff	Mm_WriteNVM@address+2,Mm_WriteFlash@address+2
  2652  001234  C0C8  F01D         	movff	Mm_WriteNVM@address+3,Mm_WriteFlash@address+3
  2653  001238  C0C9  F01E         	movff	Mm_WriteNVM@bytes,Mm_WriteFlash@bytes
  2654  00123C  C0CA  F01F         	movff	Mm_WriteNVM@bytes+1,Mm_WriteFlash@bytes+1
  2655  001240  C0CB  F020         	movff	Mm_WriteNVM@bytes+2,Mm_WriteFlash@bytes+2
  2656  001244  C0CC  F021         	movff	Mm_WriteNVM@bytes+3,Mm_WriteFlash@bytes+3
  2657  001248  0100               	movlb	0	; () banked
  2658  00124A  C0CE  F023         	movff	Mm_WriteNVM@data+1,Mm_WriteFlash@data+1
  2659  00124E  0100               	movlb	0	; () banked
  2660  001250  C0CD  F022         	movff	Mm_WriteNVM@data,Mm_WriteFlash@data
  2661  001254  EC3C  F005         	call	_Mm_WriteFlash	;wreg free
  2662  001258                     l457:
  2663  001258  0012               	return	
  2664  00125A                     __end_of_Mm_WriteNVM:
  2665                           	opt stack 0
  2666                           tblptru	equ	0xFF8
  2667                           tblptrh	equ	0xFF7
  2668                           tblptrl	equ	0xFF6
  2669                           tablat	equ	0xFF5
  2670                           intcon	equ	0xFF2
  2671                           postinc0	equ	0xFEE
  2672                           wreg	equ	0xFE8
  2673                           postdec1	equ	0xFE5
  2674                           fsr1h	equ	0xFE2
  2675                           fsr1l	equ	0xFE1
  2676                           status	equ	0xFD8
  2677                           
  2678 ;; *************** function _Mm_WriteFlash *****************
  2679 ;; Defined at:
  2680 ;;		line 124 in file "src/MemoryManagement/PIC18F4520/MemoryManagement_PIC18F4520.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  address         4   25[COMRAM] unsigned long 
  2683 ;;  bytes           4   29[COMRAM] unsigned long 
  2684 ;;  data            2   33[COMRAM] PTR unsigned char 
  2685 ;;		 -> Mm_SetU16@value(2), Mm_SetU08@value(1), 
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;  offset          1   68[BANK0 ] unsigned char 
  2688 ;;  block          64    0[BANK0 ] unsigned char [64]
  2689 ;;  saddress        4   64[BANK0 ] unsigned long 
  2690 ;; Return value:  Size  Location     Type
  2691 ;;		None               void
  2692 ;; Registers used:
  2693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2699 ;;      Params:        10       0       0       0       0       0       0
  2700 ;;      Locals:         0      69       0       0       0       0       0
  2701 ;;      Temps:          1       0       0       0       0       0       0
  2702 ;;      Totals:        11      69       0       0       0       0       0
  2703 ;;Total ram usage:       80 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    4
  2706 ;; This function calls:
  2707 ;;		_Mm_ReadFlash
  2708 ;;		_Mm_Write
  2709 ;;		_Mm_WriteFlashBlock
  2710 ;; This function is called by:
  2711 ;;		_Mm_WriteNVM
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           	psect	text8
  2716  000A78                     __ptext8:
  2717                           	opt stack 0
  2718  000A78                     _Mm_WriteFlash:
  2719                           	opt stack 22
  2720                           
  2721                           ;MemoryManagement_PIC18F4520.c: 126: uint8_t block[64];
  2722                           ;MemoryManagement_PIC18F4520.c: 127: uint32_t saddress = address;
  2723                           
  2724                           ;incstack = 0
  2725  000A78  C01A  F0C0         	movff	Mm_WriteFlash@address,Mm_WriteFlash@saddress
  2726  000A7C  C01B  F0C1         	movff	Mm_WriteFlash@address+1,Mm_WriteFlash@saddress+1
  2727  000A80  C01C  F0C2         	movff	Mm_WriteFlash@address+2,Mm_WriteFlash@saddress+2
  2728  000A84  C01D  F0C3         	movff	Mm_WriteFlash@address+3,Mm_WriteFlash@saddress+3
  2729                           
  2730                           ;MemoryManagement_PIC18F4520.c: 129: address /= 64;
  2731  000A88  0E06               	movlw	6
  2732  000A8A  6E24               	movwf	??_Mm_WriteFlash& (0+255),c
  2733  000A8C                     u1905:
  2734  000A8C  90D8               	bcf	status,0,c
  2735  000A8E  321D               	rrcf	Mm_WriteFlash@address+3,f,c
  2736  000A90  321C               	rrcf	Mm_WriteFlash@address+2,f,c
  2737  000A92  321B               	rrcf	Mm_WriteFlash@address+1,f,c
  2738  000A94  321A               	rrcf	Mm_WriteFlash@address,f,c
  2739  000A96  2E24               	decfsz	??_Mm_WriteFlash& (0+255),f,c
  2740  000A98  D7F9               	goto	u1905
  2741                           
  2742                           ;MemoryManagement_PIC18F4520.c: 130: address *= 64;
  2743  000A9A  0E06               	movlw	6
  2744  000A9C                     u1915:
  2745  000A9C  90D8               	bcf	status,0,c
  2746  000A9E  361A               	rlcf	Mm_WriteFlash@address,f,c
  2747  000AA0  361B               	rlcf	Mm_WriteFlash@address+1,f,c
  2748  000AA2  361C               	rlcf	Mm_WriteFlash@address+2,f,c
  2749  000AA4  361D               	rlcf	Mm_WriteFlash@address+3,f,c
  2750  000AA6  2EE8               	decfsz	wreg,f,c
  2751  000AA8  D7F9               	goto	u1915
  2752                           
  2753                           ;MemoryManagement_PIC18F4520.c: 132: while (bytes) {
  2754  000AAA  D06C               	goto	l2962
  2755  000AAC                     l2938:
  2756                           
  2757                           ;MemoryManagement_PIC18F4520.c: 134: Mm_ReadFlash(address, 64, block);
  2758  000AAC  C01A  F010         	movff	Mm_WriteFlash@address,Mm_ReadFlash@address
  2759  000AB0  C01B  F011         	movff	Mm_WriteFlash@address+1,Mm_ReadFlash@address+1
  2760  000AB4  C01C  F012         	movff	Mm_WriteFlash@address+2,Mm_ReadFlash@address+2
  2761  000AB8  C01D  F013         	movff	Mm_WriteFlash@address+3,Mm_ReadFlash@address+3
  2762  000ABC  0E40               	movlw	64
  2763  000ABE  6E14               	movwf	Mm_ReadFlash@bytes,c
  2764  000AC0  0E00               	movlw	0
  2765  000AC2  6E15               	movwf	Mm_ReadFlash@bytes+1,c
  2766  000AC4  0E00               	movlw	0
  2767  000AC6  6E16               	movwf	Mm_ReadFlash@bytes+2,c
  2768  000AC8  0E00               	movlw	0
  2769  000ACA  6E17               	movwf	Mm_ReadFlash@bytes+3,c
  2770  000ACC  0100               	movlb	0	; () banked
  2771  000ACE  0E00               	movlw	high Mm_WriteFlash@block
  2772  000AD0  6E19               	movwf	Mm_ReadFlash@data+1,c
  2773  000AD2  0100               	movlb	0	; () banked
  2774  000AD4  0E80               	movlw	low Mm_WriteFlash@block
  2775  000AD6  6E18               	movwf	Mm_ReadFlash@data,c
  2776  000AD8  ECF4  F00B         	call	_Mm_ReadFlash	;wreg free
  2777                           
  2778                           ;MemoryManagement_PIC18F4520.c: 136: for (uint8_t offset = saddress - address;
  2779  000ADC  501A               	movf	Mm_WriteFlash@address,w,c
  2780  000ADE  0800               	sublw	0
  2781  000AE0  0100               	movlb	0	; () banked
  2782  000AE2  25C0               	addwf	Mm_WriteFlash@saddress& (0+255),w,b
  2783  000AE4  0100               	movlb	0	; () banked
  2784  000AE6  6FC4               	movwf	Mm_WriteFlash@offset& (0+255),b
  2785                           
  2786                           ;MemoryManagement_PIC18F4520.c: 137: (offset < 64) && (bytes > 0);
  2787                           ;MemoryManagement_PIC18F4520.c: 138: offset++) {
  2788  000AE8  D01A               	goto	l2950
  2789  000AEA                     l2942:
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;MemoryManagement_PIC18F4520.c: 139: block[offset] = *data++;
  2793  000AEA  C022  FFD9         	movff	Mm_WriteFlash@data,fsr2l
  2794  000AEE  C023  FFDA         	movff	Mm_WriteFlash@data+1,fsr2h
  2795  000AF2  0100               	movlb	0	; () banked
  2796  000AF4  51C4               	movf	Mm_WriteFlash@offset& (0+255),w,b
  2797  000AF6  0D01               	mullw	1
  2798  000AF8  0100               	movlb	0	; () banked
  2799  000AFA  0E80               	movlw	low Mm_WriteFlash@block
  2800  000AFC  24F3               	addwf	prodl,w,c
  2801  000AFE  6EE1               	movwf	fsr1l,c
  2802  000B00  0100               	movlb	0	; () banked
  2803  000B02  0E00               	movlw	high Mm_WriteFlash@block
  2804  000B04  20F4               	addwfc	prodh,w,c
  2805  000B06  6EE2               	movwf	fsr1h,c
  2806  000B08  CFDF FFE7          	movff	indf2,indf1
  2807                           
  2808                           ; BSR set to: 0
  2809  000B0C  4A22               	infsnz	Mm_WriteFlash@data,f,c
  2810  000B0E  2A23               	incf	Mm_WriteFlash@data+1,f,c
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;MemoryManagement_PIC18F4520.c: 140: bytes--;
  2814  000B10  061E               	decf	Mm_WriteFlash@bytes,f,c
  2815  000B12  0E00               	movlw	0
  2816  000B14  5A1F               	subwfb	Mm_WriteFlash@bytes+1,f,c
  2817  000B16  5A20               	subwfb	Mm_WriteFlash@bytes+2,f,c
  2818  000B18  5A21               	subwfb	Mm_WriteFlash@bytes+3,f,c
  2819                           
  2820                           ; BSR set to: 0
  2821  000B1A  0100               	movlb	0	; () banked
  2822  000B1C  2BC4               	incf	Mm_WriteFlash@offset& (0+255),f,b
  2823  000B1E                     l2950:
  2824                           
  2825                           ; BSR set to: 0
  2826  000B1E  0E40               	movlw	64
  2827  000B20  0100               	movlb	0	; () banked
  2828  000B22  5DC4               	subwf	Mm_WriteFlash@offset& (0+255),w,b
  2829  000B24  B0D8               	btfsc	status,0,c
  2830  000B26  D006               	goto	l448
  2831                           
  2832                           ; BSR set to: 0
  2833  000B28  5021               	movf	Mm_WriteFlash@bytes+3,w,c
  2834  000B2A  101E               	iorwf	Mm_WriteFlash@bytes,w,c
  2835  000B2C  101F               	iorwf	Mm_WriteFlash@bytes+1,w,c
  2836  000B2E  1020               	iorwf	Mm_WriteFlash@bytes+2,w,c
  2837  000B30  A4D8               	btfss	status,2,c
  2838  000B32  D7DB               	goto	l2942
  2839  000B34                     l448:
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;MemoryManagement_PIC18F4520.c: 141: }
  2843                           ;MemoryManagement_PIC18F4520.c: 144: EECON1bits.FREE = 1;
  2844  000B34  88A6               	bsf	4006,4,c	;volatile
  2845                           
  2846                           ;MemoryManagement_PIC18F4520.c: 145: TBLPTR = address;
  2847  000B36  C01A  FFF6         	movff	Mm_WriteFlash@address,tblptrl	;volatile
  2848  000B3A  C01B  FFF7         	movff	Mm_WriteFlash@address+1,tblptrh	;volatile
  2849  000B3E  C01C  FFF8         	movff	Mm_WriteFlash@address+2,tblptru	;volatile
  2850                           
  2851                           ;MemoryManagement_PIC18F4520.c: 146: EECON1bits.EEPGD = 1;
  2852  000B42  8EA6               	bsf	4006,7,c	;volatile
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;MemoryManagement_PIC18F4520.c: 147: Mm_Write();
  2856  000B44  EC85  F00D         	call	_Mm_Write	;wreg free
  2857                           
  2858                           ;MemoryManagement_PIC18F4520.c: 150: Mm_WriteFlashBlock(address, block);
  2859  000B48  C01A  F011         	movff	Mm_WriteFlash@address,Mm_WriteFlashBlock@address
  2860  000B4C  C01B  F012         	movff	Mm_WriteFlash@address+1,Mm_WriteFlashBlock@address+1
  2861  000B50  C01C  F013         	movff	Mm_WriteFlash@address+2,Mm_WriteFlashBlock@address+2
  2862  000B54  C01D  F014         	movff	Mm_WriteFlash@address+3,Mm_WriteFlashBlock@address+3
  2863  000B58  0100               	movlb	0	; () banked
  2864  000B5A  0E00               	movlw	high Mm_WriteFlash@block
  2865  000B5C  6E16               	movwf	Mm_WriteFlashBlock@block+1,c
  2866  000B5E  0100               	movlb	0	; () banked
  2867  000B60  0E80               	movlw	low Mm_WriteFlash@block
  2868  000B62  6E15               	movwf	Mm_WriteFlashBlock@block,c
  2869  000B64  EC84  F00C         	call	_Mm_WriteFlashBlock	;wreg free
  2870                           
  2871                           ;MemoryManagement_PIC18F4520.c: 152: address += 64;
  2872  000B68  0E40               	movlw	64
  2873  000B6A  261A               	addwf	Mm_WriteFlash@address,f,c
  2874  000B6C  0E00               	movlw	0
  2875  000B6E  221B               	addwfc	Mm_WriteFlash@address+1,f,c
  2876  000B70  221C               	addwfc	Mm_WriteFlash@address+2,f,c
  2877  000B72  221D               	addwfc	Mm_WriteFlash@address+3,f,c
  2878                           
  2879                           ;MemoryManagement_PIC18F4520.c: 153: saddress = address;
  2880  000B74  C01A  F0C0         	movff	Mm_WriteFlash@address,Mm_WriteFlash@saddress
  2881  000B78  C01B  F0C1         	movff	Mm_WriteFlash@address+1,Mm_WriteFlash@saddress+1
  2882  000B7C  C01C  F0C2         	movff	Mm_WriteFlash@address+2,Mm_WriteFlash@saddress+2
  2883  000B80  C01D  F0C3         	movff	Mm_WriteFlash@address+3,Mm_WriteFlash@saddress+3
  2884  000B84                     l2962:
  2885  000B84  5021               	movf	Mm_WriteFlash@bytes+3,w,c
  2886  000B86  101E               	iorwf	Mm_WriteFlash@bytes,w,c
  2887  000B88  101F               	iorwf	Mm_WriteFlash@bytes+1,w,c
  2888  000B8A  1020               	iorwf	Mm_WriteFlash@bytes+2,w,c
  2889  000B8C  B4D8               	btfsc	status,2,c
  2890  000B8E  0012               	return	
  2891  000B90  D78D               	goto	l2938
  2892  000B92                     __end_of_Mm_WriteFlash:
  2893                           	opt stack 0
  2894                           tblptru	equ	0xFF8
  2895                           tblptrh	equ	0xFF7
  2896                           tblptrl	equ	0xFF6
  2897                           tablat	equ	0xFF5
  2898                           prodh	equ	0xFF4
  2899                           prodl	equ	0xFF3
  2900                           intcon	equ	0xFF2
  2901                           postinc0	equ	0xFEE
  2902                           wreg	equ	0xFE8
  2903                           indf1	equ	0xFE7
  2904                           postdec1	equ	0xFE5
  2905                           fsr1h	equ	0xFE2
  2906                           fsr1l	equ	0xFE1
  2907                           indf2	equ	0xFDF
  2908                           fsr2h	equ	0xFDA
  2909                           fsr2l	equ	0xFD9
  2910                           status	equ	0xFD8
  2911                           
  2912 ;; *************** function _Mm_WriteFlashBlock *****************
  2913 ;; Defined at:
  2914 ;;		line 107 in file "src/MemoryManagement/PIC18F4520/MemoryManagement_PIC18F4520.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  address         4   16[COMRAM] unsigned long 
  2917 ;;  block           2   20[COMRAM] PTR unsigned char 
  2918 ;;		 -> Mm_WriteFlash@block(64), 
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;  offset          1   22[COMRAM] unsigned char 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;		None               void
  2923 ;; Registers used:
  2924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2930 ;;      Params:         6       0       0       0       0       0       0
  2931 ;;      Locals:         1       0       0       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0       0       0
  2933 ;;      Totals:         7       0       0       0       0       0       0
  2934 ;;Total ram usage:        7 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:    3
  2937 ;; This function calls:
  2938 ;;		_Mm_Write
  2939 ;; This function is called by:
  2940 ;;		_Mm_WriteFlash
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text9
  2945  001908                     __ptext9:
  2946                           	opt stack 0
  2947  001908                     _Mm_WriteFlashBlock:
  2948                           	opt stack 22
  2949                           
  2950                           ;MemoryManagement_PIC18F4520.c: 109: TBLPTR = address;
  2951                           
  2952                           ;incstack = 0
  2953  001908  C011  FFF6         	movff	Mm_WriteFlashBlock@address,tblptrl	;volatile
  2954  00190C  C012  FFF7         	movff	Mm_WriteFlashBlock@address+1,tblptrh	;volatile
  2955  001910  C013  FFF8         	movff	Mm_WriteFlashBlock@address+2,tblptru	;volatile
  2956                           
  2957                           ;MemoryManagement_PIC18F4520.c: 111: for (uint8_t offset = 0x00; offset < 64;
  2958  001914  0E00               	movlw	0
  2959  001916  6E17               	movwf	Mm_WriteFlashBlock@offset,c
  2960  001918  D00A               	goto	L4
  2961  00191A                     l2886:
  2962                           
  2963                           ;MemoryManagement_PIC18F4520.c: 113: TABLAT = *block++;
  2964  00191A  C015  FFD9         	movff	Mm_WriteFlashBlock@block,fsr2l
  2965  00191E  C016  FFDA         	movff	Mm_WriteFlashBlock@block+1,fsr2h
  2966  001922  50DF               	movf	indf2,w,c
  2967  001924  6EF5               	movwf	tablat,c	;volatile
  2968  001926  4A15               	infsnz	Mm_WriteFlashBlock@block,f,c
  2969  001928  2A16               	incf	Mm_WriteFlashBlock@block+1,f,c
  2970  00192A  000D               	tblwt		*+	;# 
  2971  00192C  2A17               	incf	Mm_WriteFlashBlock@offset,f,c
  2972  00192E                     L4:
  2973  00192E  0E3F               	movlw	63
  2974  001930  6417               	cpfsgt	Mm_WriteFlashBlock@offset,c
  2975  001932  D7F3               	goto	l2886
  2976                           
  2977                           ;MemoryManagement_PIC18F4520.c: 115: }
  2978                           ;MemoryManagement_PIC18F4520.c: 118: EECON1bits.FREE = 0;
  2979  001934  98A6               	bcf	4006,4,c	;volatile
  2980                           
  2981                           ;MemoryManagement_PIC18F4520.c: 119: TBLPTR = address;
  2982  001936  C011  FFF6         	movff	Mm_WriteFlashBlock@address,tblptrl	;volatile
  2983  00193A  C012  FFF7         	movff	Mm_WriteFlashBlock@address+1,tblptrh	;volatile
  2984  00193E  C013  FFF8         	movff	Mm_WriteFlashBlock@address+2,tblptru	;volatile
  2985                           
  2986                           ;MemoryManagement_PIC18F4520.c: 120: EECON1bits.EEPGD = 1;
  2987  001942  8EA6               	bsf	4006,7,c	;volatile
  2988                           
  2989                           ;MemoryManagement_PIC18F4520.c: 121: Mm_Write();
  2990  001944  EC85  F00D         	call	_Mm_Write	;wreg free
  2991  001948  0012               	return	
  2992  00194A                     __end_of_Mm_WriteFlashBlock:
  2993                           	opt stack 0
  2994                           tblptru	equ	0xFF8
  2995                           tblptrh	equ	0xFF7
  2996                           tblptrl	equ	0xFF6
  2997                           tablat	equ	0xFF5
  2998                           prodh	equ	0xFF4
  2999                           prodl	equ	0xFF3
  3000                           intcon	equ	0xFF2
  3001                           postinc0	equ	0xFEE
  3002                           wreg	equ	0xFE8
  3003                           indf1	equ	0xFE7
  3004                           postdec1	equ	0xFE5
  3005                           fsr1h	equ	0xFE2
  3006                           fsr1l	equ	0xFE1
  3007                           indf2	equ	0xFDF
  3008                           fsr2h	equ	0xFDA
  3009                           fsr2l	equ	0xFD9
  3010                           status	equ	0xFD8
  3011                           
  3012 ;; *************** function _Mm_WriteEEPROM *****************
  3013 ;; Defined at:
  3014 ;;		line 96 in file "src/MemoryManagement/PIC18F4520/MemoryManagement_PIC18F4520.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  address         4   16[COMRAM] unsigned long 
  3017 ;;  bytes           4   20[COMRAM] unsigned long 
  3018 ;;  data            2   24[COMRAM] PTR unsigned char 
  3019 ;;		 -> Mm_SetU16@value(2), Mm_SetU08@value(1), 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  byte            4   26[COMRAM] unsigned long 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;		None               void
  3024 ;; Registers used:
  3025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3031 ;;      Params:        10       0       0       0       0       0       0
  3032 ;;      Locals:         4       0       0       0       0       0       0
  3033 ;;      Temps:          0       0       0       0       0       0       0
  3034 ;;      Totals:        14       0       0       0       0       0       0
  3035 ;;Total ram usage:       14 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; Hardware stack levels required when called:    3
  3038 ;; This function calls:
  3039 ;;		_Mm_Write
  3040 ;; This function is called by:
  3041 ;;		_Mm_WriteNVM
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	text10
  3046  00169C                     __ptext10:
  3047                           	opt stack 0
  3048  00169C                     _Mm_WriteEEPROM:
  3049                           	opt stack 23
  3050                           
  3051                           ;MemoryManagement_PIC18F4520.c: 98: for (uint32_t byte = 0; byte < bytes; byte++) {
  3052                           
  3053                           ;incstack = 0
  3054  00169C  0E00               	movlw	0
  3055  00169E  6E1B               	movwf	Mm_WriteEEPROM@byte,c
  3056  0016A0  0E00               	movlw	0
  3057  0016A2  6E1C               	movwf	Mm_WriteEEPROM@byte+1,c
  3058  0016A4  0E00               	movlw	0
  3059  0016A6  6E1D               	movwf	Mm_WriteEEPROM@byte+2,c
  3060  0016A8  0E00               	movlw	0
  3061  0016AA  6E1E               	movwf	Mm_WriteEEPROM@byte+3,c
  3062  0016AC  D019               	goto	l2932
  3063  0016AE                     l432:
  3064                           
  3065                           ;MemoryManagement_PIC18F4520.c: 99: EEADR = (address & (uint32_t) 0x000000FF);
  3066  0016AE  C011  FFA9         	movff	Mm_WriteEEPROM@address,4009	;volatile
  3067                           
  3068                           ;MemoryManagement_PIC18F4520.c: 100: EEDATA = *data++;
  3069  0016B2  C019  FFD9         	movff	Mm_WriteEEPROM@data,fsr2l
  3070  0016B6  C01A  FFDA         	movff	Mm_WriteEEPROM@data+1,fsr2h
  3071  0016BA  50DF               	movf	indf2,w,c
  3072  0016BC  6EA8               	movwf	4008,c	;volatile
  3073  0016BE  4A19               	infsnz	Mm_WriteEEPROM@data,f,c
  3074  0016C0  2A1A               	incf	Mm_WriteEEPROM@data+1,f,c
  3075                           
  3076                           ;MemoryManagement_PIC18F4520.c: 101: EECON1bits.EEPGD = 0;
  3077  0016C2  9EA6               	bcf	4006,7,c	;volatile
  3078                           
  3079                           ;MemoryManagement_PIC18F4520.c: 102: Mm_Write();
  3080  0016C4  EC85  F00D         	call	_Mm_Write	;wreg free
  3081                           
  3082                           ;MemoryManagement_PIC18F4520.c: 103: address++;
  3083  0016C8  0E01               	movlw	1
  3084  0016CA  2611               	addwf	Mm_WriteEEPROM@address,f,c
  3085  0016CC  0E00               	movlw	0
  3086  0016CE  2212               	addwfc	Mm_WriteEEPROM@address+1,f,c
  3087  0016D0  2213               	addwfc	Mm_WriteEEPROM@address+2,f,c
  3088  0016D2  2214               	addwfc	Mm_WriteEEPROM@address+3,f,c
  3089  0016D4  0E01               	movlw	1
  3090  0016D6  261B               	addwf	Mm_WriteEEPROM@byte,f,c
  3091  0016D8  0E00               	movlw	0
  3092  0016DA  221C               	addwfc	Mm_WriteEEPROM@byte+1,f,c
  3093  0016DC  221D               	addwfc	Mm_WriteEEPROM@byte+2,f,c
  3094  0016DE  221E               	addwfc	Mm_WriteEEPROM@byte+3,f,c
  3095  0016E0                     l2932:
  3096  0016E0  5015               	movf	Mm_WriteEEPROM@bytes,w,c
  3097  0016E2  5C1B               	subwf	Mm_WriteEEPROM@byte,w,c
  3098  0016E4  5016               	movf	Mm_WriteEEPROM@bytes+1,w,c
  3099  0016E6  581C               	subwfb	Mm_WriteEEPROM@byte+1,w,c
  3100  0016E8  5017               	movf	Mm_WriteEEPROM@bytes+2,w,c
  3101  0016EA  581D               	subwfb	Mm_WriteEEPROM@byte+2,w,c
  3102  0016EC  5018               	movf	Mm_WriteEEPROM@bytes+3,w,c
  3103  0016EE  581E               	subwfb	Mm_WriteEEPROM@byte+3,w,c
  3104  0016F0  B0D8               	btfsc	status,0,c
  3105  0016F2  0012               	return	
  3106  0016F4  D7DC               	goto	l432
  3107  0016F6                     __end_of_Mm_WriteEEPROM:
  3108                           	opt stack 0
  3109                           tblptru	equ	0xFF8
  3110                           tblptrh	equ	0xFF7
  3111                           tblptrl	equ	0xFF6
  3112                           tablat	equ	0xFF5
  3113                           prodh	equ	0xFF4
  3114                           prodl	equ	0xFF3
  3115                           intcon	equ	0xFF2
  3116                           postinc0	equ	0xFEE
  3117                           wreg	equ	0xFE8
  3118                           indf1	equ	0xFE7
  3119                           postdec1	equ	0xFE5
  3120                           fsr1h	equ	0xFE2
  3121                           fsr1l	equ	0xFE1
  3122                           indf2	equ	0xFDF
  3123                           fsr2h	equ	0xFDA
  3124                           fsr2l	equ	0xFD9
  3125                           status	equ	0xFD8
  3126                           
  3127 ;; *************** function _Mm_Write *****************
  3128 ;; Defined at:
  3129 ;;		line 77 in file "src/MemoryManagement/PIC18F4520/MemoryManagement_PIC18F4520.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;		None
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  GIEBit          1   15[COMRAM] unsigned char 
  3134 ;; Return value:  Size  Location     Type
  3135 ;;		None               void
  3136 ;; Registers used:
  3137 ;;		wreg, status,2
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3143 ;;      Params:         0       0       0       0       0       0       0
  3144 ;;      Locals:         1       0       0       0       0       0       0
  3145 ;;      Temps:          0       0       0       0       0       0       0
  3146 ;;      Totals:         1       0       0       0       0       0       0
  3147 ;;Total ram usage:        1 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; Hardware stack levels required when called:    2
  3150 ;; This function calls:
  3151 ;;		Nothing
  3152 ;; This function is called by:
  3153 ;;		_Mm_WriteEEPROM
  3154 ;;		_Mm_WriteFlashBlock
  3155 ;;		_Mm_WriteFlash
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           	psect	text11
  3160  001B0A                     __ptext11:
  3161                           	opt stack 0
  3162  001B0A                     _Mm_Write:
  3163                           	opt stack 22
  3164                           
  3165                           ;MemoryManagement_PIC18F4520.c: 79: uint8_t GIEBit = INTCONbits.GIE;
  3166                           
  3167                           ;incstack = 0
  3168  001B0A  0E00               	movlw	0
  3169  001B0C  BEF2               	btfsc	intcon,7,c	;volatile
  3170  001B0E  0E01               	movlw	1
  3171  001B10  6E10               	movwf	Mm_Write@GIEBit,c
  3172                           
  3173                           ;MemoryManagement_PIC18F4520.c: 81: EECON1bits.CFGS = 0;
  3174  001B12  9CA6               	bcf	4006,6,c	;volatile
  3175                           
  3176                           ;MemoryManagement_PIC18F4520.c: 82: EECON1bits.WREN = 1;
  3177  001B14  84A6               	bsf	4006,2,c	;volatile
  3178                           
  3179                           ;MemoryManagement_PIC18F4520.c: 84: INTCONbits.GIE = 0;
  3180  001B16  9EF2               	bcf	intcon,7,c	;volatile
  3181                           
  3182                           ;MemoryManagement_PIC18F4520.c: 86: EECON2 = 0x55;
  3183  001B18  0E55               	movlw	85
  3184  001B1A  6EA7               	movwf	4007,c	;volatile
  3185                           
  3186                           ;MemoryManagement_PIC18F4520.c: 87: EECON2 = 0xAA;
  3187  001B1C  0EAA               	movlw	170
  3188  001B1E  6EA7               	movwf	4007,c	;volatile
  3189                           
  3190                           ;MemoryManagement_PIC18F4520.c: 89: EECON1bits.WR = 1;
  3191  001B20  82A6               	bsf	4006,1,c	;volatile
  3192  001B22                     l425:
  3193  001B22  B2A6               	btfsc	4006,1,c	;volatile
  3194  001B24  D7FE               	goto	l425
  3195                           
  3196                           ;MemoryManagement_PIC18F4520.c: 92: INTCONbits.GIE = GIEBit;
  3197  001B26  B010               	btfsc	Mm_Write@GIEBit,0,c
  3198  001B28  D002               	bra	u1825
  3199  001B2A  9EF2               	bcf	intcon,7,c	;volatile
  3200  001B2C  D001               	bra	u1826
  3201  001B2E                     u1825:
  3202  001B2E  8EF2               	bsf	intcon,7,c	;volatile
  3203  001B30                     u1826:
  3204                           
  3205                           ;MemoryManagement_PIC18F4520.c: 93: EECON1bits.WREN = 0;
  3206  001B30  94A6               	bcf	4006,2,c	;volatile
  3207  001B32  0012               	return	
  3208  001B34                     __end_of_Mm_Write:
  3209                           	opt stack 0
  3210                           tblptru	equ	0xFF8
  3211                           tblptrh	equ	0xFF7
  3212                           tblptrl	equ	0xFF6
  3213                           tablat	equ	0xFF5
  3214                           prodh	equ	0xFF4
  3215                           prodl	equ	0xFF3
  3216                           intcon	equ	0xFF2
  3217                           postinc0	equ	0xFEE
  3218                           wreg	equ	0xFE8
  3219                           indf1	equ	0xFE7
  3220                           postdec1	equ	0xFE5
  3221                           fsr1h	equ	0xFE2
  3222                           fsr1l	equ	0xFE1
  3223                           indf2	equ	0xFDF
  3224                           fsr2h	equ	0xFDA
  3225                           fsr2l	equ	0xFD9
  3226                           status	equ	0xFD8
  3227                           
  3228 ;; *************** function _Jvm_Main *****************
  3229 ;; Defined at:
  3230 ;;		line 30 in file "src/JVM/JVM.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;		None
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;  method          2   86[COMRAM] PTR struct javaclass_met
  3235 ;;		 -> JavaClass_Data(1024), 
  3236 ;;  index           1   91[COMRAM] unsigned char 
  3237 ;;  flags           1   88[COMRAM] unsigned char 
  3238 ;; Return value:  Size  Location     Type
  3239 ;;		None               void
  3240 ;; Registers used:
  3241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3247 ;;      Params:         0       0       0       0       0       0       0
  3248 ;;      Locals:         6       0       0       0       0       0       0
  3249 ;;      Temps:          4       0       0       0       0       0       0
  3250 ;;      Totals:        10       0       0       0       0       0       0
  3251 ;;Total ram usage:       10 bytes
  3252 ;; Hardware stack levels used:    1
  3253 ;; Hardware stack levels required when called:    6
  3254 ;; This function calls:
  3255 ;;		_Jvm_RunMethod
  3256 ;;		_Mm_GetU08
  3257 ;;		_Mm_GetU16
  3258 ;; This function is called by:
  3259 ;;		_main
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           	psect	text12
  3264  000EA0                     __ptext12:
  3265                           	opt stack 0
  3266  000EA0                     _Jvm_Main:
  3267                           	opt stack 24
  3268                           
  3269                           ;JVM.c: 32: uint8_t flags = 0;
  3270                           
  3271                           ;incstack = 0
  3272  000EA0  0E00               	movlw	0
  3273  000EA2  6E59               	movwf	Jvm_Main@flags,c
  3274                           
  3275                           ;JVM.c: 33: uint8_t index = 0;
  3276  000EA4  0E00               	movlw	0
  3277  000EA6  6E5C               	movwf	Jvm_Main@index,c
  3278                           
  3279                           ;JVM.c: 34: javaclass_method_header_t *method;
  3280                           ;JVM.c: 38: for (;index < (Mm_GetU08((uint32_t) &((javaclass_header_t *) JavaClass_Data)
      +                          ->methods)); index++) {
  3281  000EA8  D036               	goto	l3262
  3282  000EAA                     l3252:
  3283                           
  3284                           ;JVM.c: 39: method = ((javaclass_method_header_t *) (JavaClass_Data + (Mm_GetU16((uint32
      +                          _t) &((javaclass_header_t *) JavaClass_Data)->offsetMethods)) + (sizeof(javaclass_method
      +                          _header_t) * index)));
  3285  000EAA  505C               	movf	Jvm_Main@index,w,c
  3286  000EAC  0D08               	mullw	8
  3287  000EAE  0E09               	movlw	low (_JavaClass_Data+14)
  3288  000EB0  6E53               	movwf	??_Jvm_Main& (0+255),c
  3289  000EB2  0E7C               	movlw	high (_JavaClass_Data+14)
  3290  000EB4  6E54               	movwf	(??_Jvm_Main+1)& (0+255),c
  3291  000EB6  C053  F024         	movff	??_Jvm_Main,Mm_GetU16@address
  3292  000EBA  C054  F025         	movff	??_Jvm_Main+1,Mm_GetU16@address+1
  3293  000EBE  6A26               	clrf	Mm_GetU16@address+2,c
  3294  000EC0  6A27               	clrf	Mm_GetU16@address+3,c
  3295  000EC2  ECE6  F00C         	call	_Mm_GetU16	;wreg free
  3296  000EC6  0EFB               	movlw	low _JavaClass_Data
  3297  000EC8  6E55               	movwf	(??_Jvm_Main+2)& (0+255),c
  3298  000ECA  0E7B               	movlw	high _JavaClass_Data
  3299  000ECC  6E56               	movwf	(??_Jvm_Main+3)& (0+255),c
  3300  000ECE  5024               	movf	?_Mm_GetU16,w,c
  3301  000ED0  2655               	addwf	??_Jvm_Main+2,f,c
  3302  000ED2  5025               	movf	?_Mm_GetU16+1,w,c
  3303  000ED4  2256               	addwfc	??_Jvm_Main+3,f,c
  3304  000ED6  50F3               	movf	prodl,w,c
  3305  000ED8  2655               	addwf	??_Jvm_Main+2,f,c
  3306  000EDA  50F4               	movf	prodh,w,c
  3307  000EDC  2256               	addwfc	??_Jvm_Main+3,f,c
  3308  000EDE  C055  F057         	movff	??_Jvm_Main+2,Jvm_Main@method
  3309  000EE2  C056  F058         	movff	??_Jvm_Main+3,Jvm_Main@method+1
  3310                           
  3311                           ;JVM.c: 40: flags = (Mm_GetU08((uint32_t) &((javaclass_method_header_t *)
  3312                           ;JVM.c: 41: method)->flags));
  3313  000EE6  0E04               	movlw	4
  3314  000EE8  2457               	addwf	Jvm_Main@method,w,c
  3315  000EEA  6E53               	movwf	??_Jvm_Main& (0+255),c
  3316  000EEC  0E00               	movlw	0
  3317  000EEE  2058               	addwfc	Jvm_Main@method+1,w,c
  3318  000EF0  6E54               	movwf	(??_Jvm_Main+1)& (0+255),c
  3319  000EF2  C053  F024         	movff	??_Jvm_Main,Mm_GetU08@address
  3320  000EF6  C054  F025         	movff	??_Jvm_Main+1,Mm_GetU08@address+1
  3321  000EFA  6A26               	clrf	Mm_GetU08@address+2,c
  3322  000EFC  6A27               	clrf	Mm_GetU08@address+3,c
  3323  000EFE  EC3F  F00D         	call	_Mm_GetU08	;wreg free
  3324  000F02  6E59               	movwf	Jvm_Main@flags,c
  3325                           
  3326                           ;JVM.c: 43: if (flags & 0x01) {
  3327  000F04  A059               	btfss	Jvm_Main@flags,0,c
  3328  000F06  D006               	goto	l3260
  3329                           
  3330                           ;JVM.c: 44: Jvm_RunMethod(index);
  3331  000F08  C05C  F031         	movff	Jvm_Main@index,Jvm_RunMethod@index
  3332  000F0C  6A32               	clrf	Jvm_RunMethod@index+1,c
  3333  000F0E  EC0E  F000         	call	_Jvm_RunMethod	;wreg free
  3334                           
  3335                           ;JVM.c: 45: break;
  3336  000F12  D010               	goto	l3264
  3337  000F14                     l3260:
  3338  000F14  2A5C               	incf	Jvm_Main@index,f,c
  3339  000F16                     l3262:
  3340  000F16  0EFC               	movlw	low (_JavaClass_Data+1)
  3341  000F18  6E53               	movwf	??_Jvm_Main& (0+255),c
  3342  000F1A  0E7B               	movlw	high (_JavaClass_Data+1)
  3343  000F1C  6E54               	movwf	(??_Jvm_Main+1)& (0+255),c
  3344  000F1E  C053  F024         	movff	??_Jvm_Main,Mm_GetU08@address
  3345  000F22  C054  F025         	movff	??_Jvm_Main+1,Mm_GetU08@address+1
  3346  000F26  6A26               	clrf	Mm_GetU08@address+2,c
  3347  000F28  6A27               	clrf	Mm_GetU08@address+3,c
  3348  000F2A  EC3F  F00D         	call	_Mm_GetU08	;wreg free
  3349  000F2E  5C5C               	subwf	Jvm_Main@index,w,c
  3350  000F30  A0D8               	btfss	status,0,c
  3351  000F32  D7BB               	goto	l3252
  3352  000F34                     l3264:
  3353                           
  3354                           ;JVM.c: 46: }
  3355                           ;JVM.c: 47: }
  3356                           ;JVM.c: 50: Jvm_RunMethod((Mm_GetU08((uint32_t) &((javaclass_header_t *) JavaClass_Data)
      +                          ->onLoad)));
  3357  000F34  0E02               	movlw	low (_JavaClass_Data+7)
  3358  000F36  6E53               	movwf	??_Jvm_Main& (0+255),c
  3359  000F38  0E7C               	movlw	high (_JavaClass_Data+7)
  3360  000F3A  6E54               	movwf	(??_Jvm_Main+1)& (0+255),c
  3361  000F3C  C053  F024         	movff	??_Jvm_Main,Mm_GetU08@address
  3362  000F40  C054  F025         	movff	??_Jvm_Main+1,Mm_GetU08@address+1
  3363  000F44  6A26               	clrf	Mm_GetU08@address+2,c
  3364  000F46  6A27               	clrf	Mm_GetU08@address+3,c
  3365  000F48  EC3F  F00D         	call	_Mm_GetU08	;wreg free
  3366  000F4C  6E55               	movwf	(??_Jvm_Main+2)& (0+255),c
  3367  000F4E  5055               	movf	??_Jvm_Main+2,w,c
  3368  000F50  6E5A               	movwf	_Jvm_Main$1131,c
  3369  000F52  6A5B               	clrf	_Jvm_Main$1131+1,c
  3370                           
  3371                           ;JVM.c: 46: }
  3372                           ;JVM.c: 47: }
  3373                           ;JVM.c: 50: Jvm_RunMethod((Mm_GetU08((uint32_t) &((javaclass_header_t *) JavaClass_Data)
      +                          ->onLoad)));
  3374  000F54  C05A  F031         	movff	_Jvm_Main$1131,Jvm_RunMethod@index
  3375  000F58  C05B  F032         	movff	_Jvm_Main$1131+1,Jvm_RunMethod@index+1
  3376  000F5C  EC0E  F000         	call	_Jvm_RunMethod	;wreg free
  3377                           
  3378                           ;JVM.c: 51: Jvm_RunMethod((Mm_GetU08((uint32_t) &((javaclass_header_t *) JavaClass_Data)
      +                          ->main)));
  3379  000F60  0E01               	movlw	low (_JavaClass_Data+6)
  3380  000F62  6E53               	movwf	??_Jvm_Main& (0+255),c
  3381  000F64  0E7C               	movlw	high (_JavaClass_Data+6)
  3382  000F66  6E54               	movwf	(??_Jvm_Main+1)& (0+255),c
  3383  000F68  C053  F024         	movff	??_Jvm_Main,Mm_GetU08@address
  3384  000F6C  C054  F025         	movff	??_Jvm_Main+1,Mm_GetU08@address+1
  3385  000F70  6A26               	clrf	Mm_GetU08@address+2,c
  3386  000F72  6A27               	clrf	Mm_GetU08@address+3,c
  3387  000F74  EC3F  F00D         	call	_Mm_GetU08	;wreg free
  3388  000F78  6E55               	movwf	(??_Jvm_Main+2)& (0+255),c
  3389  000F7A  5055               	movf	??_Jvm_Main+2,w,c
  3390  000F7C  6E5A               	movwf	_Jvm_Main$1131,c
  3391  000F7E  6A5B               	clrf	_Jvm_Main$1131+1,c
  3392                           
  3393                           ;JVM.c: 51: Jvm_RunMethod((Mm_GetU08((uint32_t) &((javaclass_header_t *) JavaClass_Data)
      +                          ->main)));
  3394  000F80  C05A  F031         	movff	_Jvm_Main$1131,Jvm_RunMethod@index
  3395  000F84  C05B  F032         	movff	_Jvm_Main$1131+1,Jvm_RunMethod@index+1
  3396  000F88  EC0E  F000         	call	_Jvm_RunMethod	;wreg free
  3397  000F8C  0012               	return	
  3398  000F8E                     __end_of_Jvm_Main:
  3399                           	opt stack 0
  3400                           tblptru	equ	0xFF8
  3401                           tblptrh	equ	0xFF7
  3402                           tblptrl	equ	0xFF6
  3403                           tablat	equ	0xFF5
  3404                           prodh	equ	0xFF4
  3405                           prodl	equ	0xFF3
  3406                           intcon	equ	0xFF2
  3407                           postinc0	equ	0xFEE
  3408                           wreg	equ	0xFE8
  3409                           indf1	equ	0xFE7
  3410                           postdec1	equ	0xFE5
  3411                           fsr1h	equ	0xFE2
  3412                           fsr1l	equ	0xFE1
  3413                           indf2	equ	0xFDF
  3414                           fsr2h	equ	0xFDA
  3415                           fsr2l	equ	0xFD9
  3416                           status	equ	0xFD8
  3417                           
  3418 ;; *************** function _Jvm_RunMethod *****************
  3419 ;; Defined at:
  3420 ;;		line 54 in file "src/JVM/JVM.c"
  3421 ;; Parameters:    Size  Location     Type
  3422 ;;  index           2   48[COMRAM] unsigned short 
  3423 ;; Auto vars:     Size  Location     Type
  3424 ;;  oldLocalsOff    2   56[COMRAM] unsigned short 
  3425 ;;  oldUnsteal      1   59[COMRAM] unsigned char 
  3426 ;;  oldLocals       1   58[COMRAM] unsigned char 
  3427 ;;  method          8   72[COMRAM] struct javaclass_method_
  3428 ;;  pc              4   63[COMRAM] unsigned long 
  3429 ;;  aux1            2   80[COMRAM] unsigned short 
  3430 ;;  aux2            2   70[COMRAM] unsigned short 
  3431 ;;  nextcodes       2   68[COMRAM] struct .
  3432 ;;  method_ptr      2   60[COMRAM] PTR struct javaclass_met
  3433 ;;		 -> JavaClass_Data(1024), 
  3434 ;;  bytecode        1   67[COMRAM] unsigned char 
  3435 ;;  pcIncrement     1   62[COMRAM] unsigned char 
  3436 ;; Return value:  Size  Location     Type
  3437 ;;		None               void
  3438 ;; Registers used:
  3439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/0
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3445 ;;      Params:         2       0       0       0       0       0       0
  3446 ;;      Locals:        26       0       0       0       0       0       0
  3447 ;;      Temps:          6       0       0       0       0       0       0
  3448 ;;      Totals:        34       0       0       0       0       0       0
  3449 ;;Total ram usage:       34 bytes
  3450 ;; Hardware stack levels used:    1
  3451 ;; Hardware stack levels required when called:    5
  3452 ;; This function calls:
  3453 ;;		_Api_ExecuteNativeMethod
  3454 ;;		_Heap_GetBytes
  3455 ;;		_Heap_GetHeaderAddress
  3456 ;;		_Heap_SetBytes
  3457 ;;		_Mm_GetU08
  3458 ;;		_Mm_GetU16
  3459 ;;		_Mm_ReadNVM
  3460 ;;		___lwdiv
  3461 ;;		___lwmod
  3462 ;;		___wmul
  3463 ;; This function is called by:
  3464 ;;		_Jvm_Main
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text13
  3469  00001C                     __ptext13:
  3470                           	opt stack 0
  3471  00001C                     _Jvm_RunMethod:
  3472                           	opt stack 24
  3473                           
  3474                           ;JVM.c: 56: uint8_t pcIncrement;
  3475                           ;JVM.c: 57: uint8_t bytecode;
  3476                           ;JVM.c: 58: ushort_t nextcodes;
  3477                           ;JVM.c: 59: uint16_t aux1;
  3478                           ;JVM.c: 60: uint16_t aux2;
  3479                           ;JVM.c: 61: uint32_t pc;
  3480                           ;JVM.c: 63: javaclass_method_header_t *method_ptr;
  3481                           ;JVM.c: 64: javaclass_method_header_t method;
  3482                           ;JVM.c: 66: method_ptr = ((javaclass_method_header_t *) (JavaClass_Data + (Mm_GetU16((ui
      +                          nt32_t) &((javaclass_header_t *) JavaClass_Data)->offsetMethods)) + (sizeof(javaclass_me
      +                          thod_header_t) * index)));
  3483                           
  3484                           ;incstack = 0
  3485  00001C  C031  F033         	movff	Jvm_RunMethod@index,??_Jvm_RunMethod
  3486  000020  C032  F034         	movff	Jvm_RunMethod@index+1,??_Jvm_RunMethod+1
  3487  000024  90D8               	bcf	status,0,c
  3488  000026  3633               	rlcf	??_Jvm_RunMethod,f,c
  3489  000028  3634               	rlcf	??_Jvm_RunMethod+1,f,c
  3490  00002A  90D8               	bcf	status,0,c
  3491  00002C  3633               	rlcf	??_Jvm_RunMethod,f,c
  3492  00002E  3634               	rlcf	??_Jvm_RunMethod+1,f,c
  3493  000030  90D8               	bcf	status,0,c
  3494  000032  3633               	rlcf	??_Jvm_RunMethod,f,c
  3495  000034  3634               	rlcf	??_Jvm_RunMethod+1,f,c
  3496  000036  0E09               	movlw	low (_JavaClass_Data+14)
  3497  000038  6E35               	movwf	(??_Jvm_RunMethod+2)& (0+255),c
  3498  00003A  0E7C               	movlw	high (_JavaClass_Data+14)
  3499  00003C  6E36               	movwf	(??_Jvm_RunMethod+3)& (0+255),c
  3500  00003E  C035  F024         	movff	??_Jvm_RunMethod+2,Mm_GetU16@address
  3501  000042  C036  F025         	movff	??_Jvm_RunMethod+3,Mm_GetU16@address+1
  3502  000046  6A26               	clrf	Mm_GetU16@address+2,c
  3503  000048  6A27               	clrf	Mm_GetU16@address+3,c
  3504  00004A  ECE6  F00C         	call	_Mm_GetU16	;wreg free
  3505  00004E  0EFB               	movlw	low _JavaClass_Data
  3506  000050  6E37               	movwf	(??_Jvm_RunMethod+4)& (0+255),c
  3507  000052  0E7B               	movlw	high _JavaClass_Data
  3508  000054  6E38               	movwf	(??_Jvm_RunMethod+5)& (0+255),c
  3509  000056  5024               	movf	?_Mm_GetU16,w,c
  3510  000058  2637               	addwf	??_Jvm_RunMethod+4,f,c
  3511  00005A  5025               	movf	?_Mm_GetU16+1,w,c
  3512  00005C  2238               	addwfc	??_Jvm_RunMethod+5,f,c
  3513  00005E  5033               	movf	??_Jvm_RunMethod,w,c
  3514  000060  2637               	addwf	??_Jvm_RunMethod+4,f,c
  3515  000062  5034               	movf	??_Jvm_RunMethod+1,w,c
  3516  000064  2238               	addwfc	??_Jvm_RunMethod+5,f,c
  3517  000066  C037  F03D         	movff	??_Jvm_RunMethod+4,Jvm_RunMethod@method_ptr
  3518  00006A  C038  F03E         	movff	??_Jvm_RunMethod+5,Jvm_RunMethod@method_ptr+1
  3519                           
  3520                           ;JVM.c: 68: Mm_ReadNVM((uint32_t) method_ptr, sizeof(javaclass_method_header_t),
  3521                           ;JVM.c: 69: (uint8_t *) &method);
  3522  00006E  C03D  F01A         	movff	Jvm_RunMethod@method_ptr,Mm_ReadNVM@address
  3523  000072  C03E  F01B         	movff	Jvm_RunMethod@method_ptr+1,Mm_ReadNVM@address+1
  3524  000076  6A1C               	clrf	Mm_ReadNVM@address+2,c
  3525  000078  6A1D               	clrf	Mm_ReadNVM@address+3,c
  3526  00007A  0E08               	movlw	8
  3527  00007C  6E1E               	movwf	Mm_ReadNVM@bytes,c
  3528  00007E  0E00               	movlw	0
  3529  000080  6E1F               	movwf	Mm_ReadNVM@bytes+1,c
  3530  000082  0E00               	movlw	0
  3531  000084  6E20               	movwf	Mm_ReadNVM@bytes+2,c
  3532  000086  0E00               	movlw	0
  3533  000088  6E21               	movwf	Mm_ReadNVM@bytes+3,c
  3534  00008A  0E00               	movlw	high Jvm_RunMethod@method
  3535  00008C  6E23               	movwf	Mm_ReadNVM@data+1,c
  3536  00008E  0E49               	movlw	low Jvm_RunMethod@method
  3537  000090  6E22               	movwf	Mm_ReadNVM@data,c
  3538  000092  EC78  F009         	call	_Mm_ReadNVM	;wreg free
  3539                           
  3540                           ;JVM.c: 72: pc = (uint32_t) (JavaClass_Data + method.code);
  3541  000096  0EFB               	movlw	low _JavaClass_Data
  3542  000098  6E33               	movwf	??_Jvm_RunMethod& (0+255),c
  3543  00009A  0E7B               	movlw	high _JavaClass_Data
  3544  00009C  6E34               	movwf	(??_Jvm_RunMethod+1)& (0+255),c
  3545  00009E  5049               	movf	Jvm_RunMethod@method,w,c
  3546  0000A0  2633               	addwf	??_Jvm_RunMethod,f,c
  3547  0000A2  504A               	movf	Jvm_RunMethod@method+1,w,c
  3548  0000A4  2234               	addwfc	??_Jvm_RunMethod+1,f,c
  3549  0000A6  C033  F040         	movff	??_Jvm_RunMethod,Jvm_RunMethod@pc
  3550  0000AA  C034  F041         	movff	??_Jvm_RunMethod+1,Jvm_RunMethod@pc+1
  3551  0000AE  6A42               	clrf	Jvm_RunMethod@pc+2,c
  3552  0000B0  6A43               	clrf	Jvm_RunMethod@pc+3,c
  3553                           
  3554                           ;JVM.c: 75: Heap_GetBytes(sizeof(uint16_t) * (method.locals + method.stack +
  3555                           ;JVM.c: 76: method.arguments));
  3556  0000B2  5050               	movf	Jvm_RunMethod@method+7,w,c
  3557  0000B4  C04F  F033         	movff	Jvm_RunMethod@method+6,??_Jvm_RunMethod
  3558  0000B8  6A34               	clrf	(??_Jvm_RunMethod+1)& (0+255),c
  3559  0000BA  2633               	addwf	??_Jvm_RunMethod,f,c
  3560  0000BC  0E00               	movlw	0
  3561  0000BE  2234               	addwfc	??_Jvm_RunMethod+1,f,c
  3562  0000C0  504E               	movf	Jvm_RunMethod@method+5,w,c
  3563  0000C2  2633               	addwf	??_Jvm_RunMethod,f,c
  3564  0000C4  0E00               	movlw	0
  3565  0000C6  2234               	addwfc	??_Jvm_RunMethod+1,f,c
  3566  0000C8  90D8               	bcf	status,0,c
  3567  0000CA  3433               	rlcf	??_Jvm_RunMethod,w,c
  3568  0000CC  6E29               	movwf	Heap_GetBytes@bytes,c
  3569  0000CE  3434               	rlcf	??_Jvm_RunMethod+1,w,c
  3570  0000D0  6E2A               	movwf	Heap_GetBytes@bytes+1,c
  3571  0000D2  EC8C  F008         	call	_Heap_GetBytes	;wreg free
  3572                           
  3573                           ;JVM.c: 77: localVariables = Stack_CurrentPointer + 1;
  3574  0000D6  0E02               	movlw	2
  3575  0000D8  2466               	addwf	_Stack_CurrentPointer,w,c
  3576  0000DA  6E6A               	movwf	_localVariables,c
  3577  0000DC  0E00               	movlw	0
  3578  0000DE  2067               	addwfc	_Stack_CurrentPointer+1,w,c
  3579  0000E0  6E6B               	movwf	_localVariables+1,c
  3580                           
  3581                           ;JVM.c: 78: Stack_CurrentPointer += method.locals;
  3582  0000E2  504F               	movf	Jvm_RunMethod@method+6,w,c
  3583  0000E4  0D02               	mullw	2
  3584  0000E6  50F3               	movf	prodl,w,c
  3585  0000E8  2666               	addwf	_Stack_CurrentPointer,f,c
  3586  0000EA  50F4               	movf	prodh,w,c
  3587  0000EC  2267               	addwfc	_Stack_CurrentPointer+1,f,c
  3588                           
  3589                           ;JVM.c: 79: Stack_BasePointer = Stack_CurrentPointer;
  3590  0000EE  0100               	movlb	0	; () banked
  3591  0000F0  C067  F0D2         	movff	_Stack_CurrentPointer+1,_Stack_BasePointer+1
  3592  0000F4  0100               	movlb	0	; () banked
  3593  0000F6  C066  F0D1         	movff	_Stack_CurrentPointer,_Stack_BasePointer
  3594  0000FA                     l3018:
  3595                           
  3596                           ;JVM.c: 83: bytecode = Mm_GetU08(pc);
  3597  0000FA  C040  F024         	movff	Jvm_RunMethod@pc,Mm_GetU08@address
  3598  0000FE  C041  F025         	movff	Jvm_RunMethod@pc+1,Mm_GetU08@address+1
  3599  000102  C042  F026         	movff	Jvm_RunMethod@pc+2,Mm_GetU08@address+2
  3600  000106  C043  F027         	movff	Jvm_RunMethod@pc+3,Mm_GetU08@address+3
  3601  00010A  EC3F  F00D         	call	_Mm_GetU08	;wreg free
  3602  00010E  6E44               	movwf	Jvm_RunMethod@bytecode,c
  3603                           
  3604                           ;JVM.c: 85: nextcodes.byte_l = Mm_GetU08(pc + 1);
  3605  000110  0E01               	movlw	1
  3606  000112  2440               	addwf	Jvm_RunMethod@pc,w,c
  3607  000114  6E24               	movwf	Mm_GetU08@address,c
  3608  000116  0E00               	movlw	0
  3609  000118  2041               	addwfc	Jvm_RunMethod@pc+1,w,c
  3610  00011A  6E25               	movwf	Mm_GetU08@address+1,c
  3611  00011C  0E00               	movlw	0
  3612  00011E  2042               	addwfc	Jvm_RunMethod@pc+2,w,c
  3613  000120  6E26               	movwf	Mm_GetU08@address+2,c
  3614  000122  0E00               	movlw	0
  3615  000124  2043               	addwfc	Jvm_RunMethod@pc+3,w,c
  3616  000126  6E27               	movwf	Mm_GetU08@address+3,c
  3617  000128  EC3F  F00D         	call	_Mm_GetU08	;wreg free
  3618  00012C  6E45               	movwf	Jvm_RunMethod@nextcodes,c
  3619                           
  3620                           ;JVM.c: 86: nextcodes.byte_h = Mm_GetU08(pc + 2);
  3621  00012E  0E02               	movlw	2
  3622  000130  2440               	addwf	Jvm_RunMethod@pc,w,c
  3623  000132  6E24               	movwf	Mm_GetU08@address,c
  3624  000134  0E00               	movlw	0
  3625  000136  2041               	addwfc	Jvm_RunMethod@pc+1,w,c
  3626  000138  6E25               	movwf	Mm_GetU08@address+1,c
  3627  00013A  0E00               	movlw	0
  3628  00013C  2042               	addwfc	Jvm_RunMethod@pc+2,w,c
  3629  00013E  6E26               	movwf	Mm_GetU08@address+2,c
  3630  000140  0E00               	movlw	0
  3631  000142  2043               	addwfc	Jvm_RunMethod@pc+3,w,c
  3632  000144  6E27               	movwf	Mm_GetU08@address+3,c
  3633  000146  EC3F  F00D         	call	_Mm_GetU08	;wreg free
  3634  00014A  6E46               	movwf	Jvm_RunMethod@nextcodes+1,c
  3635                           
  3636                           ;JVM.c: 88: pcIncrement = 1;
  3637  00014C  0E01               	movlw	1
  3638  00014E  6E3F               	movwf	Jvm_RunMethod@pcIncrement,c
  3639                           
  3640                           ;JVM.c: 90: switch (bytecode) {
  3641  000150  D3E8               	goto	l3210
  3642  000152                     l3026:
  3643                           
  3644                           ;JVM.c: 94: case 0x03:
  3645                           ;JVM.c: 95: case 0x04:
  3646                           ;JVM.c: 96: case 0x05:
  3647                           ;JVM.c: 97: case 0x06:
  3648                           ;JVM.c: 98: case 0x07:
  3649                           ;JVM.c: 99: case 0x08:
  3650                           ;JVM.c: 100: (*(++Stack_CurrentPointer) = bytecode - 0x03);
  3651  000152  0EFD               	movlw	253
  3652  000154  6E33               	movwf	??_Jvm_RunMethod& (0+255),c
  3653  000156  0EFF               	movlw	255
  3654  000158  6E34               	movwf	(??_Jvm_RunMethod+1)& (0+255),c
  3655  00015A  5044               	movf	Jvm_RunMethod@bytecode,w,c
  3656  00015C  6E35               	movwf	(??_Jvm_RunMethod+2)& (0+255),c
  3657  00015E  6A36               	clrf	(??_Jvm_RunMethod+3)& (0+255),c
  3658  000160  5033               	movf	??_Jvm_RunMethod,w,c
  3659  000162  2635               	addwf	??_Jvm_RunMethod+2,f,c
  3660  000164  5034               	movf	??_Jvm_RunMethod+1,w,c
  3661  000166  2236               	addwfc	??_Jvm_RunMethod+3,f,c
  3662  000168  0E02               	movlw	2
  3663  00016A  2666               	addwf	_Stack_CurrentPointer,f,c
  3664  00016C  0E00               	movlw	0
  3665  00016E  2267               	addwfc	_Stack_CurrentPointer+1,f,c
  3666  000170  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  3667  000174  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  3668  000178  C035  FFDE         	movff	??_Jvm_RunMethod+2,postinc2
  3669  00017C  C036  FFDD         	movff	??_Jvm_RunMethod+3,postdec2
  3670                           
  3671                           ;JVM.c: 101: break;
  3672  000180  EF2C  F005         	goto	l3212
  3673  000184                     l3028:
  3674                           
  3675                           ;JVM.c: 103: (*(++Stack_CurrentPointer) = nextcodes.word);
  3676  000184  0E02               	movlw	2
  3677  000186  2666               	addwf	_Stack_CurrentPointer,f,c
  3678  000188  0E00               	movlw	0
  3679  00018A  2267               	addwfc	_Stack_CurrentPointer+1,f,c
  3680  00018C  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  3681  000190  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  3682  000194  C045  FFDE         	movff	Jvm_RunMethod@nextcodes,postinc2
  3683  000198  C046  FFDD         	movff	Jvm_RunMethod@nextcodes+1,postdec2
  3684  00019C  D085               	goto	L5
  3685  00019E                     l3032:
  3686                           
  3687                           ;JVM.c: 107: case 0x1B:
  3688                           ;JVM.c: 108: case 0x1C:
  3689                           ;JVM.c: 109: case 0x1D:
  3690                           ;JVM.c: 110: (*(++Stack_CurrentPointer) = localVariables[bytecode - 0x1A]);
  3691  00019E  0ECC               	movlw	204
  3692  0001A0  6E33               	movwf	??_Jvm_RunMethod& (0+255),c
  3693  0001A2  0EFF               	movlw	255
  3694  0001A4  6E34               	movwf	(??_Jvm_RunMethod+1)& (0+255),c
  3695  0001A6  5044               	movf	Jvm_RunMethod@bytecode,w,c
  3696  0001A8  6E35               	movwf	(??_Jvm_RunMethod+2)& (0+255),c
  3697  0001AA  6A36               	clrf	(??_Jvm_RunMethod+3)& (0+255),c
  3698  0001AC  90D8               	bcf	status,0,c
  3699  0001AE  3635               	rlcf	??_Jvm_RunMethod+2,f,c
  3700  0001B0  3636               	rlcf	??_Jvm_RunMethod+3,f,c
  3701  0001B2  5033               	movf	??_Jvm_RunMethod,w,c
  3702  0001B4  2635               	addwf	??_Jvm_RunMethod+2,f,c
  3703  0001B6  5034               	movf	??_Jvm_RunMethod+1,w,c
  3704  0001B8  2236               	addwfc	??_Jvm_RunMethod+3,f,c
  3705  0001BA  5035               	movf	??_Jvm_RunMethod+2,w,c
  3706  0001BC  246A               	addwf	_localVariables,w,c
  3707  0001BE  6ED9               	movwf	fsr2l,c
  3708  0001C0  5036               	movf	??_Jvm_RunMethod+3,w,c
  3709  0001C2  206B               	addwfc	_localVariables+1,w,c
  3710  0001C4  6EDA               	movwf	fsr2h,c
  3711  0001C6  D026               	goto	L6
  3712  0001C8                     l3034:
  3713                           
  3714                           ;JVM.c: 113: case 0x3C:
  3715                           ;JVM.c: 114: case 0x3D:
  3716                           ;JVM.c: 115: case 0x3E:
  3717                           ;JVM.c: 116: localVariables[bytecode - 0x3B] = (*(Stack_CurrentPointer--));
  3718  0001C8  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  3719  0001CC  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  3720  0001D0  0E8A               	movlw	138
  3721  0001D2  6E33               	movwf	??_Jvm_RunMethod& (0+255),c
  3722  0001D4  0EFF               	movlw	255
  3723  0001D6  6E34               	movwf	(??_Jvm_RunMethod+1)& (0+255),c
  3724  0001D8  5044               	movf	Jvm_RunMethod@bytecode,w,c
  3725  0001DA  6E35               	movwf	(??_Jvm_RunMethod+2)& (0+255),c
  3726  0001DC  6A36               	clrf	(??_Jvm_RunMethod+3)& (0+255),c
  3727  0001DE  90D8               	bcf	status,0,c
  3728  0001E0  3635               	rlcf	??_Jvm_RunMethod+2,f,c
  3729  0001E2  3636               	rlcf	??_Jvm_RunMethod+3,f,c
  3730  0001E4  5033               	movf	??_Jvm_RunMethod,w,c
  3731  0001E6  2635               	addwf	??_Jvm_RunMethod+2,f,c
  3732  0001E8  5034               	movf	??_Jvm_RunMethod+1,w,c
  3733  0001EA  2236               	addwfc	??_Jvm_RunMethod+3,f,c
  3734  0001EC  5035               	movf	??_Jvm_RunMethod+2,w,c
  3735  0001EE  246A               	addwf	_localVariables,w,c
  3736  0001F0  6EE1               	movwf	fsr1l,c
  3737  0001F2  5036               	movf	??_Jvm_RunMethod+3,w,c
  3738  0001F4  206B               	addwfc	_localVariables+1,w,c
  3739  0001F6  6EE2               	movwf	fsr1h,c
  3740  0001F8  CFDE FFE6          	movff	postinc2,postinc1
  3741  0001FC  CFDD FFE5          	movff	postdec2,postdec1
  3742  000200  0E02               	movlw	2
  3743  000202  5E66               	subwf	_Stack_CurrentPointer,f,c
  3744  000204  0E00               	movlw	0
  3745  000206  5A67               	subwfb	_Stack_CurrentPointer+1,f,c
  3746                           
  3747                           ;JVM.c: 117: break;
  3748  000208  EF2C  F005         	goto	l3212
  3749  00020C                     l3038:
  3750                           
  3751                           ;JVM.c: 119: (*(++Stack_CurrentPointer) = Stack_CurrentPointer[0]);
  3752  00020C  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  3753  000210  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  3754  000214                     L6:
  3755  000214  0E02               	movlw	2
  3756  000216  2666               	addwf	_Stack_CurrentPointer,f,c
  3757  000218  0E00               	movlw	0
  3758  00021A  2267               	addwfc	_Stack_CurrentPointer+1,f,c
  3759  00021C  C066  FFE1         	movff	_Stack_CurrentPointer,fsr1l
  3760  000220  C067  FFE2         	movff	_Stack_CurrentPointer+1,fsr1h
  3761  000224  CFDE FFE6          	movff	postinc2,postinc1
  3762  000228  CFDD FFE5          	movff	postdec2,postdec1
  3763                           
  3764                           ;JVM.c: 120: break;
  3765  00022C  EF2C  F005         	goto	l3212
  3766  000230                     l3040:
  3767                           
  3768                           ;JVM.c: 122: case 0x64:
  3769                           ;JVM.c: 123: case 0x68:
  3770                           ;JVM.c: 124: case 0x6C:
  3771                           ;JVM.c: 125: case 0x70:
  3772                           ;JVM.c: 126: case 0x74:
  3773                           ;JVM.c: 127: case 0x78:
  3774                           ;JVM.c: 128: case 0x7A:
  3775                           ;JVM.c: 129: case 0x7C:
  3776                           ;JVM.c: 130: case 0x7E:
  3777                           ;JVM.c: 131: case 0x80:
  3778                           ;JVM.c: 132: case 0x82:
  3779                           ;JVM.c: 133: case 0x84:
  3780                           ;JVM.c: 134: if (0x74 == bytecode) {
  3781  000230  5044               	movf	Jvm_RunMethod@bytecode,w,c
  3782  000232  0A74               	xorlw	116
  3783  000234  A4D8               	btfss	status,2,c
  3784  000236  D021               	goto	l3048
  3785                           
  3786                           ;JVM.c: 135: aux1 = -(*(Stack_CurrentPointer--));
  3787  000238  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  3788  00023C  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  3789  000240  CFDE F033          	movff	postinc2,??_Jvm_RunMethod
  3790  000244  CFDD F034          	movff	postdec2,??_Jvm_RunMethod+1
  3791  000248  1E33               	comf	??_Jvm_RunMethod,f,c
  3792  00024A  1E34               	comf	??_Jvm_RunMethod+1,f,c
  3793  00024C  4A33               	infsnz	??_Jvm_RunMethod,f,c
  3794  00024E  2A34               	incf	??_Jvm_RunMethod+1,f,c
  3795  000250  C033  F051         	movff	??_Jvm_RunMethod,Jvm_RunMethod@aux1
  3796  000254  C034  F052         	movff	??_Jvm_RunMethod+1,Jvm_RunMethod@aux1+1
  3797  000258  0E02               	movlw	2
  3798  00025A  5E66               	subwf	_Stack_CurrentPointer,f,c
  3799  00025C  0E00               	movlw	0
  3800  00025E  5A67               	subwfb	_Stack_CurrentPointer+1,f,c
  3801                           
  3802                           ;JVM.c: 136: (*(++Stack_CurrentPointer) = aux1);
  3803  000260  0E02               	movlw	2
  3804  000262  2666               	addwf	_Stack_CurrentPointer,f,c
  3805  000264  0E00               	movlw	0
  3806  000266  2267               	addwfc	_Stack_CurrentPointer+1,f,c
  3807  000268  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  3808  00026C  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  3809  000270  C051  FFDE         	movff	Jvm_RunMethod@aux1,postinc2
  3810  000274  C052  FFDD         	movff	Jvm_RunMethod@aux1+1,postdec2
  3811                           
  3812                           ;JVM.c: 137: } else if (0x84 == bytecode) {
  3813  000278  D3EF               	goto	l3212
  3814  00027A                     l3048:
  3815  00027A  5044               	movf	Jvm_RunMethod@bytecode,w,c
  3816  00027C  0A84               	xorlw	132
  3817  00027E  A4D8               	btfss	status,2,c
  3818  000280  D015               	goto	l3054
  3819                           
  3820                           ;JVM.c: 138: localVariables[nextcodes.byte_h] = nextcodes.byte_h +
  3821                           ;JVM.c: 139: nextcodes.byte_l;
  3822  000282  5045               	movf	Jvm_RunMethod@nextcodes,w,c
  3823  000284  C046  F033         	movff	Jvm_RunMethod@nextcodes+1,??_Jvm_RunMethod
  3824  000288  6A34               	clrf	(??_Jvm_RunMethod+1)& (0+255),c
  3825  00028A  2633               	addwf	??_Jvm_RunMethod,f,c
  3826  00028C  0E00               	movlw	0
  3827  00028E  2234               	addwfc	??_Jvm_RunMethod+1,f,c
  3828  000290  5046               	movf	Jvm_RunMethod@nextcodes+1,w,c
  3829  000292  0D02               	mullw	2
  3830  000294  50F3               	movf	prodl,w,c
  3831  000296  246A               	addwf	_localVariables,w,c
  3832  000298  6ED9               	movwf	fsr2l,c
  3833  00029A  50F4               	movf	prodh,w,c
  3834  00029C  206B               	addwfc	_localVariables+1,w,c
  3835  00029E  6EDA               	movwf	fsr2h,c
  3836  0002A0  C033  FFDE         	movff	??_Jvm_RunMethod,postinc2
  3837  0002A4  C034  FFDD         	movff	??_Jvm_RunMethod+1,postdec2
  3838  0002A8                     L5:
  3839                           
  3840                           ;JVM.c: 140: pcIncrement = 3;
  3841  0002A8  0E03               	movlw	3
  3842  0002AA  D130               	goto	L9
  3843  0002AC                     l3054:
  3844                           
  3845                           ;JVM.c: 142: aux1 = (*(Stack_CurrentPointer--));
  3846  0002AC  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  3847  0002B0  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  3848  0002B4  CFDE F051          	movff	postinc2,Jvm_RunMethod@aux1
  3849  0002B8  CFDD F052          	movff	postdec2,Jvm_RunMethod@aux1+1
  3850  0002BC  0E02               	movlw	2
  3851  0002BE  5E66               	subwf	_Stack_CurrentPointer,f,c
  3852  0002C0  0E00               	movlw	0
  3853  0002C2  5A67               	subwfb	_Stack_CurrentPointer+1,f,c
  3854                           
  3855                           ;JVM.c: 143: aux2 = (*(Stack_CurrentPointer--));
  3856  0002C4  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  3857  0002C8  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  3858  0002CC  CFDE F047          	movff	postinc2,Jvm_RunMethod@aux2
  3859  0002D0  CFDD F048          	movff	postdec2,Jvm_RunMethod@aux2+1
  3860  0002D4  0E02               	movlw	2
  3861  0002D6  5E66               	subwf	_Stack_CurrentPointer,f,c
  3862  0002D8  0E00               	movlw	0
  3863  0002DA  5A67               	subwfb	_Stack_CurrentPointer+1,f,c
  3864                           
  3865                           ;JVM.c: 145: switch (bytecode) {
  3866  0002DC  D069               	goto	l3084
  3867  0002DE                     l3060:
  3868                           
  3869                           ;JVM.c: 147: aux2 += aux1;
  3870  0002DE  5051               	movf	Jvm_RunMethod@aux1,w,c
  3871  0002E0  2647               	addwf	Jvm_RunMethod@aux2,f,c
  3872  0002E2  5052               	movf	Jvm_RunMethod@aux1+1,w,c
  3873  0002E4  2248               	addwfc	Jvm_RunMethod@aux2+1,f,c
  3874                           
  3875                           ;JVM.c: 148: break;
  3876  0002E6  D086               	goto	l3086
  3877  0002E8                     l3062:
  3878                           
  3879                           ;JVM.c: 150: aux2 -= aux1;
  3880  0002E8  5051               	movf	Jvm_RunMethod@aux1,w,c
  3881  0002EA  5E47               	subwf	Jvm_RunMethod@aux2,f,c
  3882  0002EC  5052               	movf	Jvm_RunMethod@aux1+1,w,c
  3883  0002EE  5A48               	subwfb	Jvm_RunMethod@aux2+1,f,c
  3884                           
  3885                           ;JVM.c: 151: break;
  3886  0002F0  D081               	goto	l3086
  3887  0002F2                     l3064:
  3888                           
  3889                           ;JVM.c: 153: aux2 *= aux1;
  3890  0002F2  C047  F010         	movff	Jvm_RunMethod@aux2,___wmul@multiplier
  3891  0002F6  C048  F011         	movff	Jvm_RunMethod@aux2+1,___wmul@multiplier+1
  3892  0002FA  C051  F012         	movff	Jvm_RunMethod@aux1,___wmul@multiplicand
  3893  0002FE  C052  F013         	movff	Jvm_RunMethod@aux1+1,___wmul@multiplicand+1
  3894  000302  ECC2  F00D         	call	___wmul	;wreg free
  3895  000306  C010  F047         	movff	?___wmul,Jvm_RunMethod@aux2
  3896  00030A  C011  F048         	movff	?___wmul+1,Jvm_RunMethod@aux2+1
  3897                           
  3898                           ;JVM.c: 154: break;
  3899  00030E  D072               	goto	l3086
  3900  000310                     l3066:
  3901                           
  3902                           ;JVM.c: 156: aux2 /= aux1;
  3903  000310  C047  F010         	movff	Jvm_RunMethod@aux2,___lwdiv@dividend
  3904  000314  C048  F011         	movff	Jvm_RunMethod@aux2+1,___lwdiv@dividend+1
  3905  000318  C051  F012         	movff	Jvm_RunMethod@aux1,___lwdiv@divisor
  3906  00031C  C052  F013         	movff	Jvm_RunMethod@aux1+1,___lwdiv@divisor+1
  3907  000320  ECA5  F00B         	call	___lwdiv	;wreg free
  3908  000324  C010  F047         	movff	?___lwdiv,Jvm_RunMethod@aux2
  3909  000328  C011  F048         	movff	?___lwdiv+1,Jvm_RunMethod@aux2+1
  3910                           
  3911                           ;JVM.c: 157: break;
  3912  00032C  D063               	goto	l3086
  3913  00032E                     l3068:
  3914                           
  3915                           ;JVM.c: 159: aux2 %= aux1;
  3916  00032E  C047  F010         	movff	Jvm_RunMethod@aux2,___lwmod@dividend
  3917  000332  C048  F011         	movff	Jvm_RunMethod@aux2+1,___lwmod@dividend+1
  3918  000336  C051  F012         	movff	Jvm_RunMethod@aux1,___lwmod@divisor
  3919  00033A  C052  F013         	movff	Jvm_RunMethod@aux1+1,___lwmod@divisor+1
  3920  00033E  ECA5  F00C         	call	___lwmod	;wreg free
  3921  000342  C010  F047         	movff	?___lwmod,Jvm_RunMethod@aux2
  3922  000346  C011  F048         	movff	?___lwmod+1,Jvm_RunMethod@aux2+1
  3923                           
  3924                           ;JVM.c: 160: break;
  3925  00034A  D054               	goto	l3086
  3926  00034C                     l3070:
  3927                           
  3928                           ;JVM.c: 162: aux2 <<= aux1;
  3929  00034C  2851               	incf	Jvm_RunMethod@aux1,w,c
  3930  00034E  D003               	goto	u2010
  3931  000350                     u2015:
  3932  000350  90D8               	bcf	status,0,c
  3933  000352  3647               	rlcf	Jvm_RunMethod@aux2,f,c
  3934  000354  3648               	rlcf	Jvm_RunMethod@aux2+1,f,c
  3935  000356                     u2010:
  3936  000356  2EE8               	decfsz	wreg,f,c
  3937  000358  D7FB               	goto	u2015
  3938                           
  3939                           ;JVM.c: 163: break;
  3940  00035A  D04C               	goto	l3086
  3941  00035C                     l3072:
  3942                           
  3943                           ;JVM.c: 165: aux2 >>= aux1;
  3944  00035C  2851               	incf	Jvm_RunMethod@aux1,w,c
  3945  00035E  6E33               	movwf	??_Jvm_RunMethod& (0+255),c
  3946  000360  D003               	goto	u2020
  3947  000362                     u2025:
  3948  000362  90D8               	bcf	status,0,c
  3949  000364  3248               	rrcf	Jvm_RunMethod@aux2+1,f,c
  3950  000366  3247               	rrcf	Jvm_RunMethod@aux2,f,c
  3951  000368                     u2020:
  3952  000368  2E33               	decfsz	??_Jvm_RunMethod& (0+255),f,c
  3953  00036A  D7FB               	goto	u2025
  3954                           
  3955                           ;JVM.c: 166: break;
  3956  00036C  D043               	goto	l3086
  3957  00036E                     l3074:
  3958                           
  3959                           ;JVM.c: 168: aux2 = aux2 >> aux1;
  3960  00036E  C051  F033         	movff	Jvm_RunMethod@aux1,??_Jvm_RunMethod
  3961  000372  C047  F034         	movff	Jvm_RunMethod@aux2,??_Jvm_RunMethod+1
  3962  000376  C048  F035         	movff	Jvm_RunMethod@aux2+1,??_Jvm_RunMethod+2
  3963  00037A  2A33               	incf	??_Jvm_RunMethod,f,c
  3964  00037C  D003               	goto	u2034
  3965  00037E                     u2035:
  3966  00037E  90D8               	bcf	status,0,c
  3967  000380  3235               	rrcf	??_Jvm_RunMethod+2,f,c
  3968  000382  3234               	rrcf	??_Jvm_RunMethod+1,f,c
  3969  000384                     u2034:
  3970  000384  2E33               	decfsz	??_Jvm_RunMethod,f,c
  3971  000386  D7FB               	goto	u2035
  3972  000388  C034  F047         	movff	??_Jvm_RunMethod+1,Jvm_RunMethod@aux2
  3973  00038C  C035  F048         	movff	??_Jvm_RunMethod+2,Jvm_RunMethod@aux2+1
  3974                           
  3975                           ;JVM.c: 169: break;
  3976  000390  D031               	goto	l3086
  3977  000392                     l3076:
  3978                           
  3979                           ;JVM.c: 171: aux2 &= aux1;
  3980  000392  5051               	movf	Jvm_RunMethod@aux1,w,c
  3981  000394  1647               	andwf	Jvm_RunMethod@aux2,f,c
  3982  000396  5052               	movf	Jvm_RunMethod@aux1+1,w,c
  3983  000398  1648               	andwf	Jvm_RunMethod@aux2+1,f,c
  3984                           
  3985                           ;JVM.c: 172: break;
  3986  00039A  D02C               	goto	l3086
  3987  00039C                     l3078:
  3988                           
  3989                           ;JVM.c: 174: aux2 |= aux1;
  3990  00039C  5051               	movf	Jvm_RunMethod@aux1,w,c
  3991  00039E  1247               	iorwf	Jvm_RunMethod@aux2,f,c
  3992  0003A0  5052               	movf	Jvm_RunMethod@aux1+1,w,c
  3993  0003A2  1248               	iorwf	Jvm_RunMethod@aux2+1,f,c
  3994                           
  3995                           ;JVM.c: 175: break;
  3996  0003A4  D027               	goto	l3086
  3997  0003A6                     l3080:
  3998                           
  3999                           ;JVM.c: 177: aux2 ^= aux1;
  4000  0003A6  5051               	movf	Jvm_RunMethod@aux1,w,c
  4001  0003A8  1A47               	xorwf	Jvm_RunMethod@aux2,f,c
  4002  0003AA  5052               	movf	Jvm_RunMethod@aux1+1,w,c
  4003  0003AC  1A48               	xorwf	Jvm_RunMethod@aux2+1,f,c
  4004                           
  4005                           ;JVM.c: 178: break;
  4006  0003AE  D022               	goto	l3086
  4007  0003B0                     l3084:
  4008  0003B0  5044               	movf	Jvm_RunMethod@bytecode,w,c
  4009                           
  4010                           ; Switch size 1, requested type "space"
  4011                           ; Number of cases is 11, Range of values is 96 to 130
  4012                           ; switch strategies available:
  4013                           ; Name         Instructions Cycles
  4014                           ; simple_byte           34    18 (average)
  4015                           ;	Chosen strategy is simple_byte
  4016  0003B2  0A60               	xorlw	96	; case 96
  4017  0003B4  B4D8               	btfsc	status,2,c
  4018  0003B6  D793               	goto	l3060
  4019  0003B8  0A04               	xorlw	4	; case 100
  4020  0003BA  B4D8               	btfsc	status,2,c
  4021  0003BC  D795               	goto	l3062
  4022  0003BE  0A0C               	xorlw	12	; case 104
  4023  0003C0  B4D8               	btfsc	status,2,c
  4024  0003C2  D797               	goto	l3064
  4025  0003C4  0A04               	xorlw	4	; case 108
  4026  0003C6  B4D8               	btfsc	status,2,c
  4027  0003C8  D7A3               	goto	l3066
  4028  0003CA  0A1C               	xorlw	28	; case 112
  4029  0003CC  B4D8               	btfsc	status,2,c
  4030  0003CE  D7AF               	goto	l3068
  4031  0003D0  0A08               	xorlw	8	; case 120
  4032  0003D2  B4D8               	btfsc	status,2,c
  4033  0003D4  D7BB               	goto	l3070
  4034  0003D6  0A02               	xorlw	2	; case 122
  4035  0003D8  B4D8               	btfsc	status,2,c
  4036  0003DA  D7C0               	goto	l3072
  4037  0003DC  0A06               	xorlw	6	; case 124
  4038  0003DE  B4D8               	btfsc	status,2,c
  4039  0003E0  D7C6               	goto	l3074
  4040  0003E2  0A02               	xorlw	2	; case 126
  4041  0003E4  B4D8               	btfsc	status,2,c
  4042  0003E6  D7D5               	goto	l3076
  4043  0003E8  0AFE               	xorlw	254	; case 128
  4044  0003EA  B4D8               	btfsc	status,2,c
  4045  0003EC  D7D7               	goto	l3078
  4046  0003EE  0A02               	xorlw	2	; case 130
  4047  0003F0  B4D8               	btfsc	status,2,c
  4048  0003F2  D7D9               	goto	l3080
  4049  0003F4                     l3086:
  4050                           
  4051                           ;JVM.c: 181: (*(++Stack_CurrentPointer) = aux2);
  4052  0003F4  0E02               	movlw	2
  4053  0003F6  2666               	addwf	_Stack_CurrentPointer,f,c
  4054  0003F8  0E00               	movlw	0
  4055  0003FA  2267               	addwfc	_Stack_CurrentPointer+1,f,c
  4056  0003FC  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  4057  000400  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  4058  000404  C047  FFDE         	movff	Jvm_RunMethod@aux2,postinc2
  4059  000408  C048  FFDD         	movff	Jvm_RunMethod@aux2+1,postdec2
  4060  00040C  D325               	goto	l3212
  4061  00040E                     l3088:
  4062                           
  4063                           ;JVM.c: 185: case 0x9A:
  4064                           ;JVM.c: 186: case 0x9B:
  4065                           ;JVM.c: 187: case 0x9C:
  4066                           ;JVM.c: 188: case 0x9D:
  4067                           ;JVM.c: 189: case 0x9E:
  4068                           ;JVM.c: 190: case 0x9F:
  4069                           ;JVM.c: 191: case 0xA0:
  4070                           ;JVM.c: 192: case 0xA1:
  4071                           ;JVM.c: 193: case 0xA2:
  4072                           ;JVM.c: 194: case 0xA3:
  4073                           ;JVM.c: 195: case 0xA4:
  4074                           ;JVM.c: 196: if ((0x9E >= bytecode) && (0x99 <= bytecode)) {
  4075  00040E  0E9F               	movlw	159
  4076  000410  5C44               	subwf	Jvm_RunMethod@bytecode,w,c
  4077  000412  B0D8               	btfsc	status,0,c
  4078  000414  D00A               	goto	l3096
  4079  000416  0E98               	movlw	152
  4080  000418  6444               	cpfsgt	Jvm_RunMethod@bytecode,c
  4081  00041A  D007               	goto	l3096
  4082                           
  4083                           ;JVM.c: 197: aux2 = 0;
  4084  00041C  0E00               	movlw	0
  4085  00041E  6E48               	movwf	Jvm_RunMethod@aux2+1,c
  4086  000420  0E00               	movlw	0
  4087  000422  6E47               	movwf	Jvm_RunMethod@aux2,c
  4088                           
  4089                           ;JVM.c: 198: bytecode -= 0x99 - 0x9F;
  4090  000424  0EFA               	movlw	250
  4091  000426  5E44               	subwf	Jvm_RunMethod@bytecode,f,c
  4092                           
  4093                           ;JVM.c: 199: } else {
  4094  000428  D00C               	goto	l3100
  4095  00042A                     l3096:
  4096                           
  4097                           ;JVM.c: 200: aux2 = (*(Stack_CurrentPointer--));
  4098  00042A  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  4099  00042E  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  4100  000432  CFDE F047          	movff	postinc2,Jvm_RunMethod@aux2
  4101  000436  CFDD F048          	movff	postdec2,Jvm_RunMethod@aux2+1
  4102  00043A  0E02               	movlw	2
  4103  00043C  5E66               	subwf	_Stack_CurrentPointer,f,c
  4104  00043E  0E00               	movlw	0
  4105  000440  5A67               	subwfb	_Stack_CurrentPointer+1,f,c
  4106  000442                     l3100:
  4107                           
  4108                           ;JVM.c: 201: }
  4109                           ;JVM.c: 203: aux1 = (*(Stack_CurrentPointer--));
  4110  000442  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  4111  000446  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  4112  00044A  CFDE F051          	movff	postinc2,Jvm_RunMethod@aux1
  4113  00044E  CFDD F052          	movff	postdec2,Jvm_RunMethod@aux1+1
  4114  000452  0E02               	movlw	2
  4115  000454  5E66               	subwf	_Stack_CurrentPointer,f,c
  4116  000456  0E00               	movlw	0
  4117  000458  5A67               	subwfb	_Stack_CurrentPointer+1,f,c
  4118                           
  4119                           ;JVM.c: 205: switch (bytecode) {
  4120  00045A  D02F               	goto	l3116
  4121  00045C                     l3102:
  4122                           
  4123                           ;JVM.c: 207: aux1 = (aux1 == aux2);
  4124  00045C  5048               	movf	Jvm_RunMethod@aux2+1,w,c
  4125  00045E  1852               	xorwf	Jvm_RunMethod@aux1+1,w,c
  4126  000460  E102               	bnz	u2065
  4127  000462  5047               	movf	Jvm_RunMethod@aux2,w,c
  4128  000464  1851               	xorwf	Jvm_RunMethod@aux1,w,c
  4129  000466                     u2065:
  4130  000466  0E00               	movlw	0
  4131  000468  B4D8               	btfsc	status,2,c
  4132  00046A  0E01               	movlw	1
  4133  00046C  6E51               	movwf	Jvm_RunMethod@aux1,c
  4134  00046E  6A52               	clrf	Jvm_RunMethod@aux1+1,c
  4135                           
  4136                           ;JVM.c: 208: break;
  4137  000470  D037               	goto	l3118
  4138  000472                     l3104:
  4139                           
  4140                           ;JVM.c: 210: aux1 = (aux1 != aux2);
  4141  000472  5048               	movf	Jvm_RunMethod@aux2+1,w,c
  4142  000474  1852               	xorwf	Jvm_RunMethod@aux1+1,w,c
  4143  000476  E102               	bnz	u2075
  4144  000478  5047               	movf	Jvm_RunMethod@aux2,w,c
  4145  00047A  1851               	xorwf	Jvm_RunMethod@aux1,w,c
  4146  00047C                     u2075:
  4147  00047C  0E00               	movlw	0
  4148  00047E  A4D8               	btfss	status,2,c
  4149  000480  0E01               	movlw	1
  4150  000482  6E51               	movwf	Jvm_RunMethod@aux1,c
  4151  000484  6A52               	clrf	Jvm_RunMethod@aux1+1,c
  4152                           
  4153                           ;JVM.c: 211: break;
  4154  000486  D02C               	goto	l3118
  4155  000488                     l3106:
  4156                           
  4157                           ;JVM.c: 213: aux1 = (aux1 < aux2);
  4158  000488  5047               	movf	Jvm_RunMethod@aux2,w,c
  4159  00048A  5C51               	subwf	Jvm_RunMethod@aux1,w,c
  4160  00048C  5048               	movf	Jvm_RunMethod@aux2+1,w,c
  4161  00048E  5852               	subwfb	Jvm_RunMethod@aux1+1,w,c
  4162  000490  D004               	goto	L8
  4163  000492                     l3110:
  4164                           
  4165                           ;JVM.c: 219: aux1 = (aux1 > aux2);
  4166  000492  5051               	movf	Jvm_RunMethod@aux1,w,c
  4167  000494  5C47               	subwf	Jvm_RunMethod@aux2,w,c
  4168  000496  5052               	movf	Jvm_RunMethod@aux1+1,w,c
  4169  000498  5848               	subwfb	Jvm_RunMethod@aux2+1,w,c
  4170  00049A                     L8:
  4171  00049A  0E00               	movlw	0
  4172  00049C  A0D8               	btfss	status,0,c
  4173  00049E  0E01               	movlw	1
  4174  0004A0  6E51               	movwf	Jvm_RunMethod@aux1,c
  4175  0004A2  6A52               	clrf	Jvm_RunMethod@aux1+1,c
  4176                           
  4177                           ;JVM.c: 220: break;
  4178  0004A4  D01D               	goto	l3118
  4179  0004A6                     l3112:
  4180                           
  4181                           ;JVM.c: 222: aux1 = (aux1 >= aux2);
  4182  0004A6  5047               	movf	Jvm_RunMethod@aux2,w,c
  4183  0004A8  5C51               	subwf	Jvm_RunMethod@aux1,w,c
  4184  0004AA  5048               	movf	Jvm_RunMethod@aux2+1,w,c
  4185  0004AC  5852               	subwfb	Jvm_RunMethod@aux1+1,w,c
  4186  0004AE  0E00               	movlw	0
  4187  0004B0  B0D8               	btfsc	status,0,c
  4188  0004B2  0E01               	movlw	1
  4189  0004B4  6E51               	movwf	Jvm_RunMethod@aux1,c
  4190  0004B6  6A52               	clrf	Jvm_RunMethod@aux1+1,c
  4191                           
  4192                           ;JVM.c: 223: break;
  4193  0004B8  D013               	goto	l3118
  4194  0004BA                     l3116:
  4195  0004BA  5044               	movf	Jvm_RunMethod@bytecode,w,c
  4196                           
  4197                           ; Switch size 1, requested type "space"
  4198                           ; Number of cases is 6, Range of values is 159 to 164
  4199                           ; switch strategies available:
  4200                           ; Name         Instructions Cycles
  4201                           ; simple_byte           19    10 (average)
  4202                           ;	Chosen strategy is simple_byte
  4203  0004BC  0A9F               	xorlw	159	; case 159
  4204  0004BE  B4D8               	btfsc	status,2,c
  4205  0004C0  D7CD               	goto	l3102
  4206  0004C2  0A3F               	xorlw	63	; case 160
  4207  0004C4  B4D8               	btfsc	status,2,c
  4208  0004C6  D7D5               	goto	l3104
  4209  0004C8  0A01               	xorlw	1	; case 161
  4210  0004CA  B4D8               	btfsc	status,2,c
  4211  0004CC  D7DD               	goto	l3106
  4212  0004CE  0A03               	xorlw	3	; case 162
  4213  0004D0  B4D8               	btfsc	status,2,c
  4214  0004D2  D7E9               	goto	l3112
  4215  0004D4  0A01               	xorlw	1	; case 163
  4216  0004D6  B4D8               	btfsc	status,2,c
  4217  0004D8  D7DC               	goto	l3110
  4218  0004DA  0A07               	xorlw	7	; case 164
  4219  0004DC  B4D8               	btfsc	status,2,c
  4220  0004DE  D7E3               	goto	l3112
  4221  0004E0                     l3118:
  4222                           
  4223                           ;JVM.c: 226: if (aux1) {
  4224  0004E0  5052               	movf	Jvm_RunMethod@aux1+1,w,c
  4225  0004E2  1051               	iorwf	Jvm_RunMethod@aux1,w,c
  4226  0004E4  B4D8               	btfsc	status,2,c
  4227  0004E6  D6E0               	goto	L5
  4228                           
  4229                           ;JVM.c: 227: pc += nextcodes.word;
  4230  0004E8  C045  F033         	movff	Jvm_RunMethod@nextcodes,??_Jvm_RunMethod
  4231  0004EC  C046  F034         	movff	Jvm_RunMethod@nextcodes+1,??_Jvm_RunMethod+1
  4232  0004F0  0E00               	movlw	0
  4233  0004F2  BE34               	btfsc	(??_Jvm_RunMethod+1)& (0+255),7,c
  4234  0004F4  0EFF               	movlw	255
  4235  0004F6  6E35               	movwf	(??_Jvm_RunMethod+2)& (0+255),c
  4236  0004F8  6E36               	movwf	(??_Jvm_RunMethod+3)& (0+255),c
  4237  0004FA  5033               	movf	??_Jvm_RunMethod,w,c
  4238  0004FC  2640               	addwf	Jvm_RunMethod@pc,f,c
  4239  0004FE  5034               	movf	??_Jvm_RunMethod+1,w,c
  4240  000500  2241               	addwfc	Jvm_RunMethod@pc+1,f,c
  4241  000502  5035               	movf	??_Jvm_RunMethod+2,w,c
  4242  000504  2242               	addwfc	Jvm_RunMethod@pc+2,f,c
  4243  000506  5036               	movf	??_Jvm_RunMethod+3,w,c
  4244  000508  2243               	addwfc	Jvm_RunMethod@pc+3,f,c
  4245  00050A                     
  4246                           ;JVM.c: 228: pcIncrement = 0;
  4247  00050A  0E00               	movlw	0
  4248  00050C                     L9:
  4249  00050C  6E3F               	movwf	Jvm_RunMethod@pcIncrement,c
  4250  00050E  D2A4               	goto	l3212
  4251  000510                     l3126:
  4252                           
  4253                           ;JVM.c: 234: pc += nextcodes.word - 3;
  4254  000510  0EFD               	movlw	253
  4255  000512  2445               	addwf	Jvm_RunMethod@nextcodes,w,c
  4256  000514  6E33               	movwf	??_Jvm_RunMethod& (0+255),c
  4257  000516  0EFF               	movlw	255
  4258  000518  2046               	addwfc	Jvm_RunMethod@nextcodes+1,w,c
  4259  00051A  6E34               	movwf	(??_Jvm_RunMethod+1)& (0+255),c
  4260  00051C  6A35               	clrf	(??_Jvm_RunMethod+2)& (0+255),c
  4261  00051E  BE34               	btfsc	(??_Jvm_RunMethod+1)& (0+255),7,c
  4262  000520  0635               	decf	(??_Jvm_RunMethod+2)& (0+255),f,c
  4263  000522  5035               	movf	(??_Jvm_RunMethod+2)& (0+255),w,c
  4264  000524  6E36               	movwf	(??_Jvm_RunMethod+3)& (0+255),c
  4265  000526  5033               	movf	??_Jvm_RunMethod,w,c
  4266  000528  2640               	addwf	Jvm_RunMethod@pc,f,c
  4267  00052A  5034               	movf	??_Jvm_RunMethod+1,w,c
  4268  00052C  2241               	addwfc	Jvm_RunMethod@pc+1,f,c
  4269  00052E  5035               	movf	??_Jvm_RunMethod+2,w,c
  4270  000530  2242               	addwfc	Jvm_RunMethod@pc+2,f,c
  4271  000532  5036               	movf	??_Jvm_RunMethod+3,w,c
  4272  000534  2243               	addwfc	Jvm_RunMethod@pc+3,f,c
  4273  000536  D6B8               	goto	L5
  4274  000538                     l3130:
  4275                           
  4276                           ;JVM.c: 238: aux1 = (*(Stack_CurrentPointer--));
  4277  000538  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  4278  00053C  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  4279  000540  CFDE F051          	movff	postinc2,Jvm_RunMethod@aux1
  4280  000544  CFDD F052          	movff	postdec2,Jvm_RunMethod@aux1+1
  4281  000548  0E02               	movlw	2
  4282  00054A  5E66               	subwf	_Stack_CurrentPointer,f,c
  4283  00054C  0E00               	movlw	0
  4284  00054E  5A67               	subwfb	_Stack_CurrentPointer+1,f,c
  4285  000550                     l3134:
  4286                           
  4287                           ;JVM.c: 240: if (!(Stack_CurrentPointer == Stack_BasePointer)) {
  4288  000550  0100               	movlb	0	; () banked
  4289  000552  51D2               	movf	(_Stack_BasePointer+1)& (0+255),w,b
  4290  000554  1867               	xorwf	_Stack_CurrentPointer+1,w,c
  4291  000556  E103               	bnz	u2095
  4292  000558  0100               	movlb	0	; () banked
  4293  00055A  51D1               	movf	_Stack_BasePointer& (0+255),w,b
  4294  00055C  1866               	xorwf	_Stack_CurrentPointer,w,c
  4295  00055E                     u2095:
  4296  00055E  B4D8               	btfsc	status,2,c
  4297  000560  D27B               	goto	l3212
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;JVM.c: 241: uint8_t oldLocals = method.locals;
  4301  000562  C04F  F03B         	movff	Jvm_RunMethod@method+6,Jvm_RunMethod@oldLocals
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;JVM.c: 242: uint8_t oldUnsteal = method.locals + method.stack +
  4305                           ;JVM.c: 243: method.arguments + 3;
  4306  000566  504F               	movf	Jvm_RunMethod@method+6,w,c
  4307  000568  2450               	addwf	Jvm_RunMethod@method+7,w,c
  4308  00056A  244E               	addwf	Jvm_RunMethod@method+5,w,c
  4309  00056C  0F03               	addlw	3
  4310  00056E  6E3C               	movwf	Jvm_RunMethod@oldUnsteal,c
  4311                           
  4312                           ; BSR set to: 0
  4313                           ;JVM.c: 244: uint16_t oldLocalsOffset = (*(Stack_CurrentPointer--));
  4314  000570  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  4315  000574  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  4316  000578  CFDE F039          	movff	postinc2,Jvm_RunMethod@oldLocalsOffset
  4317  00057C  CFDD F03A          	movff	postdec2,Jvm_RunMethod@oldLocalsOffset+1
  4318                           
  4319                           ; BSR set to: 0
  4320  000580  0E02               	movlw	2
  4321  000582  5E66               	subwf	_Stack_CurrentPointer,f,c
  4322  000584  0E00               	movlw	0
  4323  000586  5A67               	subwfb	_Stack_CurrentPointer+1,f,c
  4324                           
  4325                           ;JVM.c: 246: index = (*(Stack_CurrentPointer--));
  4326  000588  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  4327  00058C  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  4328  000590  CFDE F031          	movff	postinc2,Jvm_RunMethod@index
  4329  000594  CFDD F032          	movff	postdec2,Jvm_RunMethod@index+1
  4330                           
  4331                           ; BSR set to: 0
  4332  000598  0E02               	movlw	2
  4333  00059A  5E66               	subwf	_Stack_CurrentPointer,f,c
  4334  00059C  0E00               	movlw	0
  4335  00059E  5A67               	subwfb	_Stack_CurrentPointer+1,f,c
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;JVM.c: 247: method_ptr = ((javaclass_method_header_t *) (JavaClass_Data + (Mm_GetU16((u
      +                          int32_t) &((javaclass_header_t *) JavaClass_Data)->offsetMethods)) + (sizeof(javaclass_m
      +                          ethod_header_t) * index)));
  4339  0005A0  C031  F033         	movff	Jvm_RunMethod@index,??_Jvm_RunMethod
  4340  0005A4  C032  F034         	movff	Jvm_RunMethod@index+1,??_Jvm_RunMethod+1
  4341  0005A8  90D8               	bcf	status,0,c
  4342  0005AA  3633               	rlcf	??_Jvm_RunMethod,f,c
  4343  0005AC  3634               	rlcf	??_Jvm_RunMethod+1,f,c
  4344  0005AE  90D8               	bcf	status,0,c
  4345  0005B0  3633               	rlcf	??_Jvm_RunMethod,f,c
  4346  0005B2  3634               	rlcf	??_Jvm_RunMethod+1,f,c
  4347  0005B4  90D8               	bcf	status,0,c
  4348  0005B6  3633               	rlcf	??_Jvm_RunMethod,f,c
  4349  0005B8  3634               	rlcf	??_Jvm_RunMethod+1,f,c
  4350  0005BA  0E09               	movlw	low (_JavaClass_Data+14)
  4351  0005BC  6E35               	movwf	(??_Jvm_RunMethod+2)& (0+255),c
  4352  0005BE  0E7C               	movlw	high (_JavaClass_Data+14)
  4353  0005C0  6E36               	movwf	(??_Jvm_RunMethod+3)& (0+255),c
  4354  0005C2  C035  F024         	movff	??_Jvm_RunMethod+2,Mm_GetU16@address
  4355  0005C6  C036  F025         	movff	??_Jvm_RunMethod+3,Mm_GetU16@address+1
  4356  0005CA  6A26               	clrf	Mm_GetU16@address+2,c
  4357  0005CC  6A27               	clrf	Mm_GetU16@address+3,c
  4358  0005CE  ECE6  F00C         	call	_Mm_GetU16	;wreg free
  4359  0005D2  0EFB               	movlw	low _JavaClass_Data
  4360  0005D4  6E37               	movwf	(??_Jvm_RunMethod+4)& (0+255),c
  4361  0005D6  0E7B               	movlw	high _JavaClass_Data
  4362  0005D8  6E38               	movwf	(??_Jvm_RunMethod+5)& (0+255),c
  4363  0005DA  5024               	movf	?_Mm_GetU16,w,c
  4364  0005DC  2637               	addwf	??_Jvm_RunMethod+4,f,c
  4365  0005DE  5025               	movf	?_Mm_GetU16+1,w,c
  4366  0005E0  2238               	addwfc	??_Jvm_RunMethod+5,f,c
  4367  0005E2  5033               	movf	??_Jvm_RunMethod,w,c
  4368  0005E4  2637               	addwf	??_Jvm_RunMethod+4,f,c
  4369  0005E6  5034               	movf	??_Jvm_RunMethod+1,w,c
  4370  0005E8  2238               	addwfc	??_Jvm_RunMethod+5,f,c
  4371  0005EA  C037  F03D         	movff	??_Jvm_RunMethod+4,Jvm_RunMethod@method_ptr
  4372  0005EE  C038  F03E         	movff	??_Jvm_RunMethod+5,Jvm_RunMethod@method_ptr+1
  4373                           
  4374                           ;JVM.c: 248: Mm_ReadNVM((uint32_t) method_ptr,
  4375                           ;JVM.c: 249: sizeof(javaclass_method_header_t), (uint8_t *) &method);
  4376  0005F2  C03D  F01A         	movff	Jvm_RunMethod@method_ptr,Mm_ReadNVM@address
  4377  0005F6  C03E  F01B         	movff	Jvm_RunMethod@method_ptr+1,Mm_ReadNVM@address+1
  4378  0005FA  6A1C               	clrf	Mm_ReadNVM@address+2,c
  4379  0005FC  6A1D               	clrf	Mm_ReadNVM@address+3,c
  4380  0005FE  0E08               	movlw	8
  4381  000600  6E1E               	movwf	Mm_ReadNVM@bytes,c
  4382  000602  0E00               	movlw	0
  4383  000604  6E1F               	movwf	Mm_ReadNVM@bytes+1,c
  4384  000606  0E00               	movlw	0
  4385  000608  6E20               	movwf	Mm_ReadNVM@bytes+2,c
  4386  00060A  0E00               	movlw	0
  4387  00060C  6E21               	movwf	Mm_ReadNVM@bytes+3,c
  4388  00060E  0E00               	movlw	high Jvm_RunMethod@method
  4389  000610  6E23               	movwf	Mm_ReadNVM@data+1,c
  4390  000612  0E49               	movlw	low Jvm_RunMethod@method
  4391  000614  6E22               	movwf	Mm_ReadNVM@data,c
  4392  000616  EC78  F009         	call	_Mm_ReadNVM	;wreg free
  4393                           
  4394                           ;JVM.c: 251: pc = (uint32_t) (JavaClass_Data + (*(Stack_CurrentPointer--)));
  4395  00061A  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  4396  00061E  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  4397  000622  CFDE F033          	movff	postinc2,??_Jvm_RunMethod
  4398  000626  CFDD F034          	movff	postdec2,??_Jvm_RunMethod+1
  4399  00062A  0EFB               	movlw	low _JavaClass_Data
  4400  00062C  6E35               	movwf	(??_Jvm_RunMethod+2)& (0+255),c
  4401  00062E  0E7B               	movlw	high _JavaClass_Data
  4402  000630  6E36               	movwf	(??_Jvm_RunMethod+3)& (0+255),c
  4403  000632  5033               	movf	??_Jvm_RunMethod,w,c
  4404  000634  2635               	addwf	??_Jvm_RunMethod+2,f,c
  4405  000636  5034               	movf	??_Jvm_RunMethod+1,w,c
  4406  000638  2236               	addwfc	??_Jvm_RunMethod+3,f,c
  4407  00063A  C035  F040         	movff	??_Jvm_RunMethod+2,Jvm_RunMethod@pc
  4408  00063E  C036  F041         	movff	??_Jvm_RunMethod+3,Jvm_RunMethod@pc+1
  4409  000642  6A42               	clrf	Jvm_RunMethod@pc+2,c
  4410  000644  6A43               	clrf	Jvm_RunMethod@pc+3,c
  4411  000646  0E02               	movlw	2
  4412  000648  5E66               	subwf	_Stack_CurrentPointer,f,c
  4413  00064A  0E00               	movlw	0
  4414  00064C  5A67               	subwfb	_Stack_CurrentPointer+1,f,c
  4415                           
  4416                           ;JVM.c: 252: pcIncrement = 3;
  4417  00064E  0E03               	movlw	3
  4418  000650  6E3F               	movwf	Jvm_RunMethod@pcIncrement,c
  4419                           
  4420                           ;JVM.c: 254: (Stack_CurrentPointer += -oldLocals);
  4421  000652  503B               	movf	Jvm_RunMethod@oldLocals,w,c
  4422  000654  6E33               	movwf	??_Jvm_RunMethod& (0+255),c
  4423  000656  6A34               	clrf	(??_Jvm_RunMethod+1)& (0+255),c
  4424  000658  1E33               	comf	??_Jvm_RunMethod,f,c
  4425  00065A  1E34               	comf	??_Jvm_RunMethod+1,f,c
  4426  00065C  4A33               	infsnz	??_Jvm_RunMethod,f,c
  4427  00065E  2A34               	incf	??_Jvm_RunMethod+1,f,c
  4428  000660  90D8               	bcf	status,0,c
  4429  000662  3633               	rlcf	??_Jvm_RunMethod,f,c
  4430  000664  3634               	rlcf	??_Jvm_RunMethod+1,f,c
  4431  000666  5033               	movf	??_Jvm_RunMethod,w,c
  4432  000668  2666               	addwf	_Stack_CurrentPointer,f,c
  4433  00066A  5034               	movf	??_Jvm_RunMethod+1,w,c
  4434  00066C  2267               	addwfc	_Stack_CurrentPointer+1,f,c
  4435                           
  4436                           ;JVM.c: 255: localVariables = Stack_CurrentPointer - oldLocalsOffset;
  4437  00066E  C039  F033         	movff	Jvm_RunMethod@oldLocalsOffset,??_Jvm_RunMethod
  4438  000672  C03A  F034         	movff	Jvm_RunMethod@oldLocalsOffset+1,??_Jvm_RunMethod+1
  4439  000676  90D8               	bcf	status,0,c
  4440  000678  3633               	rlcf	??_Jvm_RunMethod,f,c
  4441  00067A  3634               	rlcf	??_Jvm_RunMethod+1,f,c
  4442  00067C  1E33               	comf	??_Jvm_RunMethod,f,c
  4443  00067E  1E34               	comf	??_Jvm_RunMethod+1,f,c
  4444  000680  4A33               	infsnz	??_Jvm_RunMethod,f,c
  4445  000682  2A34               	incf	??_Jvm_RunMethod+1,f,c
  4446  000684  5033               	movf	??_Jvm_RunMethod,w,c
  4447  000686  2466               	addwf	_Stack_CurrentPointer,w,c
  4448  000688  6E6A               	movwf	_localVariables,c
  4449  00068A  5034               	movf	??_Jvm_RunMethod+1,w,c
  4450  00068C  2067               	addwfc	_Stack_CurrentPointer+1,w,c
  4451  00068E  6E6B               	movwf	_localVariables+1,c
  4452                           
  4453                           ;JVM.c: 257: Heap_SetBytes(sizeof(uint16_t) * oldUnsteal);
  4454  000690  503C               	movf	Jvm_RunMethod@oldUnsteal,w,c
  4455  000692  0D02               	mullw	2
  4456  000694  CFF3 F010          	movff	prodl,Heap_SetBytes@bytes
  4457  000698  CFF4 F011          	movff	prodh,Heap_SetBytes@bytes+1
  4458  00069C  ECC0  F009         	call	_Heap_SetBytes	;wreg free
  4459                           
  4460                           ;JVM.c: 259: if (0xAC == bytecode) {
  4461  0006A0  5044               	movf	Jvm_RunMethod@bytecode,w,c
  4462  0006A2  0AAC               	xorlw	172
  4463  0006A4  A4D8               	btfss	status,2,c
  4464  0006A6  D00C               	goto	l3164
  4465                           
  4466                           ;JVM.c: 260: (*(++Stack_CurrentPointer) = aux1);
  4467  0006A8  0E02               	movlw	2
  4468  0006AA  2666               	addwf	_Stack_CurrentPointer,f,c
  4469  0006AC  0E00               	movlw	0
  4470  0006AE  2267               	addwfc	_Stack_CurrentPointer+1,f,c
  4471  0006B0  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  4472  0006B4  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  4473  0006B8  C051  FFDE         	movff	Jvm_RunMethod@aux1,postinc2
  4474  0006BC  C052  FFDD         	movff	Jvm_RunMethod@aux1+1,postdec2
  4475  0006C0                     l3164:
  4476                           
  4477                           ;JVM.c: 261: }
  4478                           ;JVM.c: 263: bytecode = 0x00;
  4479  0006C0  0E00               	movlw	0
  4480  0006C2  6E44               	movwf	Jvm_RunMethod@bytecode,c
  4481  0006C4  D1C9               	goto	l3212
  4482  0006C6                     l3166:
  4483                           
  4484                           ;JVM.c: 267: (*(++Stack_CurrentPointer) = ((uint32_t *) Heap_GetHeaderAddress((*(Stack_C
      +                          urrentPointer--)))) [1 + nextcodes.word]);
  4485  0006C6  C045  F033         	movff	Jvm_RunMethod@nextcodes,??_Jvm_RunMethod
  4486  0006CA  C046  F034         	movff	Jvm_RunMethod@nextcodes+1,??_Jvm_RunMethod+1
  4487  0006CE  90D8               	bcf	status,0,c
  4488  0006D0  3633               	rlcf	??_Jvm_RunMethod,f,c
  4489  0006D2  3634               	rlcf	??_Jvm_RunMethod+1,f,c
  4490  0006D4  90D8               	bcf	status,0,c
  4491  0006D6  3633               	rlcf	??_Jvm_RunMethod,f,c
  4492  0006D8  3634               	rlcf	??_Jvm_RunMethod+1,f,c
  4493  0006DA  0E04               	movlw	4
  4494  0006DC  2633               	addwf	??_Jvm_RunMethod,f,c
  4495  0006DE  0E00               	movlw	0
  4496  0006E0  2234               	addwfc	??_Jvm_RunMethod+1,f,c
  4497  0006E2  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  4498  0006E6  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  4499  0006EA  50DF               	movf	indf2,w,c
  4500  0006EC  ECAF  F00D         	call	_Heap_GetHeaderAddress
  4501  0006F0  5033               	movf	??_Jvm_RunMethod,w,c
  4502  0006F2  2419               	addwf	?_Heap_GetHeaderAddress,w,c
  4503  0006F4  6ED9               	movwf	fsr2l,c
  4504  0006F6  5034               	movf	??_Jvm_RunMethod+1,w,c
  4505  0006F8  201A               	addwfc	?_Heap_GetHeaderAddress+1,w,c
  4506  0006FA  6EDA               	movwf	fsr2h,c
  4507  0006FC  0E02               	movlw	2
  4508  0006FE  2666               	addwf	_Stack_CurrentPointer,f,c
  4509  000700  0E00               	movlw	0
  4510  000702  2267               	addwfc	_Stack_CurrentPointer+1,f,c
  4511  000704  C066  FFE1         	movff	_Stack_CurrentPointer,fsr1l
  4512  000708  C067  FFE2         	movff	_Stack_CurrentPointer+1,fsr1h
  4513  00070C  CFDE FFE6          	movff	postinc2,postinc1
  4514  000710  CFDD FFE5          	movff	postdec2,postdec1
  4515  000714  D037               	goto	L12
  4516  000716                     l3172:
  4517                           
  4518                           ;JVM.c: 272: aux1 = (*(Stack_CurrentPointer--));
  4519  000716  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  4520  00071A  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  4521  00071E  CFDE F051          	movff	postinc2,Jvm_RunMethod@aux1
  4522  000722  CFDD F052          	movff	postdec2,Jvm_RunMethod@aux1+1
  4523  000726  0E02               	movlw	2
  4524  000728  5E66               	subwf	_Stack_CurrentPointer,f,c
  4525  00072A  0E00               	movlw	0
  4526  00072C  5A67               	subwfb	_Stack_CurrentPointer+1,f,c
  4527                           
  4528                           ;JVM.c: 273: ((uint32_t *) Heap_GetHeaderAddress((*(Stack_CurrentPointer--))))
  4529                           ;JVM.c: 274: [1 + nextcodes.word] = aux1;
  4530  00072E  5051               	movf	Jvm_RunMethod@aux1,w,c
  4531  000730  6E33               	movwf	??_Jvm_RunMethod& (0+255),c
  4532  000732  5052               	movf	Jvm_RunMethod@aux1+1,w,c
  4533  000734  6E34               	movwf	(??_Jvm_RunMethod+1)& (0+255),c
  4534  000736  6A35               	clrf	(??_Jvm_RunMethod+2)& (0+255),c
  4535  000738  6A36               	clrf	(??_Jvm_RunMethod+3)& (0+255),c
  4536  00073A  C045  F037         	movff	Jvm_RunMethod@nextcodes,??_Jvm_RunMethod+4
  4537  00073E  C046  F038         	movff	Jvm_RunMethod@nextcodes+1,??_Jvm_RunMethod+5
  4538  000742  90D8               	bcf	status,0,c
  4539  000744  3637               	rlcf	??_Jvm_RunMethod+4,f,c
  4540  000746  3638               	rlcf	??_Jvm_RunMethod+5,f,c
  4541  000748  90D8               	bcf	status,0,c
  4542  00074A  3637               	rlcf	??_Jvm_RunMethod+4,f,c
  4543  00074C  3638               	rlcf	??_Jvm_RunMethod+5,f,c
  4544  00074E  0E04               	movlw	4
  4545  000750  2637               	addwf	??_Jvm_RunMethod+4,f,c
  4546  000752  0E00               	movlw	0
  4547  000754  2238               	addwfc	??_Jvm_RunMethod+5,f,c
  4548  000756  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  4549  00075A  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  4550  00075E  50DF               	movf	indf2,w,c
  4551  000760  ECAF  F00D         	call	_Heap_GetHeaderAddress
  4552  000764  5037               	movf	??_Jvm_RunMethod+4,w,c
  4553  000766  2419               	addwf	?_Heap_GetHeaderAddress,w,c
  4554  000768  6ED9               	movwf	fsr2l,c
  4555  00076A  5038               	movf	??_Jvm_RunMethod+5,w,c
  4556  00076C  201A               	addwfc	?_Heap_GetHeaderAddress+1,w,c
  4557  00076E  6EDA               	movwf	fsr2h,c
  4558  000770  C033  FFDE         	movff	??_Jvm_RunMethod,postinc2
  4559  000774  C034  FFDE         	movff	??_Jvm_RunMethod+1,postinc2
  4560  000778  C035  FFDE         	movff	??_Jvm_RunMethod+2,postinc2
  4561  00077C  C036  FFDD         	movff	??_Jvm_RunMethod+3,postdec2
  4562  000780  06D9               	decf	fsr2l,f,c
  4563  000782  06D9               	decf	fsr2l,f,c
  4564  000784                     L12:
  4565  000784  0E02               	movlw	2
  4566  000786  5E66               	subwf	_Stack_CurrentPointer,f,c
  4567  000788  0E00               	movlw	0
  4568  00078A  5A67               	subwfb	_Stack_CurrentPointer+1,f,c
  4569  00078C  D58D               	goto	L5
  4570  00078E                     l211:
  4571                           
  4572                           ;JVM.c: 278: case 0xB7:
  4573                           ;JVM.c: 279: case 0xB8:
  4574                           ;JVM.c: 280: if ((nextcodes.word & (uint16_t) 0x8000) == 0) {
  4575  00078E  BE46               	btfsc	Jvm_RunMethod@nextcodes+1,7,c
  4576  000790  D0C3               	goto	l3204
  4577                           
  4578                           ;JVM.c: 282: aux1 = (uint16_t) pc - (uint16_t) JavaClass_Data;
  4579  000792  0EFB               	movlw	low _JavaClass_Data
  4580  000794  6E33               	movwf	??_Jvm_RunMethod& (0+255),c
  4581  000796  0E7B               	movlw	high _JavaClass_Data
  4582  000798  6E34               	movwf	(??_Jvm_RunMethod+1)& (0+255),c
  4583  00079A  1E33               	comf	??_Jvm_RunMethod,f,c
  4584  00079C  1E34               	comf	??_Jvm_RunMethod+1,f,c
  4585  00079E  4A33               	infsnz	??_Jvm_RunMethod,f,c
  4586  0007A0  2A34               	incf	??_Jvm_RunMethod+1,f,c
  4587  0007A2  5040               	movf	Jvm_RunMethod@pc,w,c
  4588  0007A4  2433               	addwf	??_Jvm_RunMethod,w,c
  4589  0007A6  6E51               	movwf	Jvm_RunMethod@aux1,c
  4590  0007A8  5041               	movf	Jvm_RunMethod@pc+1,w,c
  4591  0007AA  2034               	addwfc	??_Jvm_RunMethod+1,w,c
  4592  0007AC  6E52               	movwf	Jvm_RunMethod@aux1+1,c
  4593                           
  4594                           ;JVM.c: 284: method_ptr = ((javaclass_method_header_t *) (JavaClass_Data + (Mm_GetU16((u
      +                          int32_t) &((javaclass_header_t *) JavaClass_Data)->offsetMethods)) + (sizeof(javaclass_m
      +                          ethod_header_t) * nextcodes.word)));
  4595  0007AE  C045  F033         	movff	Jvm_RunMethod@nextcodes,??_Jvm_RunMethod
  4596  0007B2  C046  F034         	movff	Jvm_RunMethod@nextcodes+1,??_Jvm_RunMethod+1
  4597  0007B6  90D8               	bcf	status,0,c
  4598  0007B8  3633               	rlcf	??_Jvm_RunMethod,f,c
  4599  0007BA  3634               	rlcf	??_Jvm_RunMethod+1,f,c
  4600  0007BC  90D8               	bcf	status,0,c
  4601  0007BE  3633               	rlcf	??_Jvm_RunMethod,f,c
  4602  0007C0  3634               	rlcf	??_Jvm_RunMethod+1,f,c
  4603  0007C2  90D8               	bcf	status,0,c
  4604  0007C4  3633               	rlcf	??_Jvm_RunMethod,f,c
  4605  0007C6  3634               	rlcf	??_Jvm_RunMethod+1,f,c
  4606  0007C8  0E09               	movlw	low (_JavaClass_Data+14)
  4607  0007CA  6E35               	movwf	(??_Jvm_RunMethod+2)& (0+255),c
  4608  0007CC  0E7C               	movlw	high (_JavaClass_Data+14)
  4609  0007CE  6E36               	movwf	(??_Jvm_RunMethod+3)& (0+255),c
  4610  0007D0  C035  F024         	movff	??_Jvm_RunMethod+2,Mm_GetU16@address
  4611  0007D4  C036  F025         	movff	??_Jvm_RunMethod+3,Mm_GetU16@address+1
  4612  0007D8  6A26               	clrf	Mm_GetU16@address+2,c
  4613  0007DA  6A27               	clrf	Mm_GetU16@address+3,c
  4614  0007DC  ECE6  F00C         	call	_Mm_GetU16	;wreg free
  4615  0007E0  0EFB               	movlw	low _JavaClass_Data
  4616  0007E2  6E37               	movwf	(??_Jvm_RunMethod+4)& (0+255),c
  4617  0007E4  0E7B               	movlw	high _JavaClass_Data
  4618  0007E6  6E38               	movwf	(??_Jvm_RunMethod+5)& (0+255),c
  4619  0007E8  5024               	movf	?_Mm_GetU16,w,c
  4620  0007EA  2637               	addwf	??_Jvm_RunMethod+4,f,c
  4621  0007EC  5025               	movf	?_Mm_GetU16+1,w,c
  4622  0007EE  2238               	addwfc	??_Jvm_RunMethod+5,f,c
  4623  0007F0  5033               	movf	??_Jvm_RunMethod,w,c
  4624  0007F2  2637               	addwf	??_Jvm_RunMethod+4,f,c
  4625  0007F4  5034               	movf	??_Jvm_RunMethod+1,w,c
  4626  0007F6  2238               	addwfc	??_Jvm_RunMethod+5,f,c
  4627  0007F8  C037  F03D         	movff	??_Jvm_RunMethod+4,Jvm_RunMethod@method_ptr
  4628  0007FC  C038  F03E         	movff	??_Jvm_RunMethod+5,Jvm_RunMethod@method_ptr+1
  4629                           
  4630                           ;JVM.c: 285: Mm_ReadNVM((uint32_t) method_ptr,
  4631                           ;JVM.c: 286: sizeof(javaclass_method_header_t), (uint8_t *) &method);
  4632  000800  C03D  F01A         	movff	Jvm_RunMethod@method_ptr,Mm_ReadNVM@address
  4633  000804  C03E  F01B         	movff	Jvm_RunMethod@method_ptr+1,Mm_ReadNVM@address+1
  4634  000808  6A1C               	clrf	Mm_ReadNVM@address+2,c
  4635  00080A  6A1D               	clrf	Mm_ReadNVM@address+3,c
  4636  00080C  0E08               	movlw	8
  4637  00080E  6E1E               	movwf	Mm_ReadNVM@bytes,c
  4638  000810  0E00               	movlw	0
  4639  000812  6E1F               	movwf	Mm_ReadNVM@bytes+1,c
  4640  000814  0E00               	movlw	0
  4641  000816  6E20               	movwf	Mm_ReadNVM@bytes+2,c
  4642  000818  0E00               	movlw	0
  4643  00081A  6E21               	movwf	Mm_ReadNVM@bytes+3,c
  4644  00081C  0E00               	movlw	high Jvm_RunMethod@method
  4645  00081E  6E23               	movwf	Mm_ReadNVM@data+1,c
  4646  000820  0E49               	movlw	low Jvm_RunMethod@method
  4647  000822  6E22               	movwf	Mm_ReadNVM@data,c
  4648  000824  EC78  F009         	call	_Mm_ReadNVM	;wreg free
  4649                           
  4650                           ;JVM.c: 288: (Stack_CurrentPointer += -method.arguments);
  4651  000828  504E               	movf	Jvm_RunMethod@method+5,w,c
  4652  00082A  6E33               	movwf	??_Jvm_RunMethod& (0+255),c
  4653  00082C  6A34               	clrf	(??_Jvm_RunMethod+1)& (0+255),c
  4654  00082E  1E33               	comf	??_Jvm_RunMethod,f,c
  4655  000830  1E34               	comf	??_Jvm_RunMethod+1,f,c
  4656  000832  4A33               	infsnz	??_Jvm_RunMethod,f,c
  4657  000834  2A34               	incf	??_Jvm_RunMethod+1,f,c
  4658  000836  90D8               	bcf	status,0,c
  4659  000838  3633               	rlcf	??_Jvm_RunMethod,f,c
  4660  00083A  3634               	rlcf	??_Jvm_RunMethod+1,f,c
  4661  00083C  5033               	movf	??_Jvm_RunMethod,w,c
  4662  00083E  2666               	addwf	_Stack_CurrentPointer,f,c
  4663  000840  5034               	movf	??_Jvm_RunMethod+1,w,c
  4664  000842  2267               	addwfc	_Stack_CurrentPointer+1,f,c
  4665                           
  4666                           ;JVM.c: 289: aux2 = Stack_CurrentPointer - localVariables;
  4667  000844  C06A  F033         	movff	_localVariables,??_Jvm_RunMethod
  4668  000848  C06B  F034         	movff	_localVariables+1,??_Jvm_RunMethod+1
  4669  00084C  1E33               	comf	??_Jvm_RunMethod,f,c
  4670  00084E  1E34               	comf	??_Jvm_RunMethod+1,f,c
  4671  000850  4A33               	infsnz	??_Jvm_RunMethod,f,c
  4672  000852  2A34               	incf	??_Jvm_RunMethod+1,f,c
  4673  000854  5066               	movf	_Stack_CurrentPointer,w,c
  4674  000856  2633               	addwf	??_Jvm_RunMethod,f,c
  4675  000858  5067               	movf	_Stack_CurrentPointer+1,w,c
  4676  00085A  2234               	addwfc	??_Jvm_RunMethod+1,f,c
  4677  00085C  3434               	rlcf	??_Jvm_RunMethod+1,w,c
  4678  00085E  3034               	rrcf	??_Jvm_RunMethod+1,w,c
  4679  000860  6E48               	movwf	Jvm_RunMethod@aux2+1,c
  4680  000862  3033               	rrcf	??_Jvm_RunMethod,w,c
  4681  000864  6E47               	movwf	Jvm_RunMethod@aux2,c
  4682                           
  4683                           ;JVM.c: 290: localVariables = Stack_CurrentPointer + 1;
  4684  000866  0E02               	movlw	2
  4685  000868  2466               	addwf	_Stack_CurrentPointer,w,c
  4686  00086A  6E6A               	movwf	_localVariables,c
  4687  00086C  0E00               	movlw	0
  4688  00086E  2067               	addwfc	_Stack_CurrentPointer+1,w,c
  4689  000870  6E6B               	movwf	_localVariables+1,c
  4690                           
  4691                           ;JVM.c: 292: Heap_GetBytes(sizeof(uint16_t) * (method.locals + method.stack +
  4692                           ;JVM.c: 293: method.arguments + 3));
  4693  000872  5050               	movf	Jvm_RunMethod@method+7,w,c
  4694  000874  C04F  F033         	movff	Jvm_RunMethod@method+6,??_Jvm_RunMethod
  4695  000878  6A34               	clrf	(??_Jvm_RunMethod+1)& (0+255),c
  4696  00087A  2633               	addwf	??_Jvm_RunMethod,f,c
  4697  00087C  0E00               	movlw	0
  4698  00087E  2234               	addwfc	??_Jvm_RunMethod+1,f,c
  4699  000880  504E               	movf	Jvm_RunMethod@method+5,w,c
  4700  000882  2633               	addwf	??_Jvm_RunMethod,f,c
  4701  000884  0E00               	movlw	0
  4702  000886  2234               	addwfc	??_Jvm_RunMethod+1,f,c
  4703  000888  90D8               	bcf	status,0,c
  4704  00088A  3633               	rlcf	??_Jvm_RunMethod,f,c
  4705  00088C  3634               	rlcf	??_Jvm_RunMethod+1,f,c
  4706  00088E  0E06               	movlw	6
  4707  000890  2433               	addwf	??_Jvm_RunMethod,w,c
  4708  000892  6E29               	movwf	Heap_GetBytes@bytes,c
  4709  000894  0E00               	movlw	0
  4710  000896  2034               	addwfc	??_Jvm_RunMethod+1,w,c
  4711  000898  6E2A               	movwf	Heap_GetBytes@bytes+1,c
  4712  00089A  EC8C  F008         	call	_Heap_GetBytes	;wreg free
  4713                           
  4714                           ;JVM.c: 295: (Stack_CurrentPointer += method.locals);
  4715  00089E  504F               	movf	Jvm_RunMethod@method+6,w,c
  4716  0008A0  0D02               	mullw	2
  4717  0008A2  50F3               	movf	prodl,w,c
  4718  0008A4  2666               	addwf	_Stack_CurrentPointer,f,c
  4719  0008A6  50F4               	movf	prodh,w,c
  4720  0008A8  2267               	addwfc	_Stack_CurrentPointer+1,f,c
  4721                           
  4722                           ;JVM.c: 296: (*(++Stack_CurrentPointer) = aux1);
  4723  0008AA  0E02               	movlw	2
  4724  0008AC  2666               	addwf	_Stack_CurrentPointer,f,c
  4725  0008AE  0E00               	movlw	0
  4726  0008B0  2267               	addwfc	_Stack_CurrentPointer+1,f,c
  4727  0008B2  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  4728  0008B6  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  4729  0008BA  C051  FFDE         	movff	Jvm_RunMethod@aux1,postinc2
  4730  0008BE  C052  FFDD         	movff	Jvm_RunMethod@aux1+1,postdec2
  4731                           
  4732                           ;JVM.c: 297: (*(++Stack_CurrentPointer) = index);
  4733  0008C2  0E02               	movlw	2
  4734  0008C4  2666               	addwf	_Stack_CurrentPointer,f,c
  4735  0008C6  0E00               	movlw	0
  4736  0008C8  2267               	addwfc	_Stack_CurrentPointer+1,f,c
  4737  0008CA  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  4738  0008CE  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  4739  0008D2  C031  FFDE         	movff	Jvm_RunMethod@index,postinc2
  4740  0008D6  C032  FFDD         	movff	Jvm_RunMethod@index+1,postdec2
  4741                           
  4742                           ;JVM.c: 298: (*(++Stack_CurrentPointer) = aux2);
  4743  0008DA  0E02               	movlw	2
  4744  0008DC  2666               	addwf	_Stack_CurrentPointer,f,c
  4745  0008DE  0E00               	movlw	0
  4746  0008E0  2267               	addwfc	_Stack_CurrentPointer+1,f,c
  4747  0008E2  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  4748  0008E6  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  4749  0008EA  C047  FFDE         	movff	Jvm_RunMethod@aux2,postinc2
  4750  0008EE  C048  FFDD         	movff	Jvm_RunMethod@aux2+1,postdec2
  4751                           
  4752                           ;JVM.c: 300: index = nextcodes.word;
  4753  0008F2  C045  F031         	movff	Jvm_RunMethod@nextcodes,Jvm_RunMethod@index
  4754  0008F6  C046  F032         	movff	Jvm_RunMethod@nextcodes+1,Jvm_RunMethod@index+1
  4755                           
  4756                           ;JVM.c: 301: pc = (uint32_t) (JavaClass_Data + method.code);
  4757  0008FA  0EFB               	movlw	low _JavaClass_Data
  4758  0008FC  6E33               	movwf	??_Jvm_RunMethod& (0+255),c
  4759  0008FE  0E7B               	movlw	high _JavaClass_Data
  4760  000900  6E34               	movwf	(??_Jvm_RunMethod+1)& (0+255),c
  4761  000902  5049               	movf	Jvm_RunMethod@method,w,c
  4762  000904  2633               	addwf	??_Jvm_RunMethod,f,c
  4763  000906  504A               	movf	Jvm_RunMethod@method+1,w,c
  4764  000908  2234               	addwfc	??_Jvm_RunMethod+1,f,c
  4765  00090A  C033  F040         	movff	??_Jvm_RunMethod,Jvm_RunMethod@pc
  4766  00090E  C034  F041         	movff	??_Jvm_RunMethod+1,Jvm_RunMethod@pc+1
  4767  000912  6A42               	clrf	Jvm_RunMethod@pc+2,c
  4768  000914  6A43               	clrf	Jvm_RunMethod@pc+3,c
  4769  000916  D5F9               	goto	L11
  4770  000918                     l3204:
  4771                           
  4772                           ;JVM.c: 304: Api_ExecuteNativeMethod(nextcodes.byte_l & 0x7F);
  4773  000918  5045               	movf	Jvm_RunMethod@nextcodes,w,c
  4774  00091A  0B7F               	andlw	127
  4775  00091C  EC53  F006         	call	_Api_ExecuteNativeMethod
  4776  000920  D4C3               	goto	L5
  4777  000922                     l3210:
  4778  000922  5044               	movf	Jvm_RunMethod@bytecode,w,c
  4779                           
  4780                           ; Switch size 1, requested type "space"
  4781                           ; Number of cases is 51, Range of values is 0 to 184
  4782                           ; switch strategies available:
  4783                           ; Name         Instructions Cycles
  4784                           ; simple_byte          154    78 (average)
  4785                           ;	Chosen strategy is simple_byte
  4786  000924  0A00               	xorlw	0	; case 0
  4787  000926  B4D8               	btfsc	status,2,c
  4788  000928  D097               	goto	l3212
  4789  00092A  0A02               	xorlw	2	; case 2
  4790  00092C  B4D8               	btfsc	status,2,c
  4791  00092E  D411               	goto	l3026
  4792  000930  0A01               	xorlw	1	; case 3
  4793  000932  B4D8               	btfsc	status,2,c
  4794  000934  D40E               	goto	l3026
  4795  000936  0A07               	xorlw	7	; case 4
  4796  000938  B4D8               	btfsc	status,2,c
  4797  00093A  D40B               	goto	l3026
  4798  00093C  0A01               	xorlw	1	; case 5
  4799  00093E  B4D8               	btfsc	status,2,c
  4800  000940  D408               	goto	l3026
  4801  000942  0A03               	xorlw	3	; case 6
  4802  000944  B4D8               	btfsc	status,2,c
  4803  000946  D405               	goto	l3026
  4804  000948  0A01               	xorlw	1	; case 7
  4805  00094A  B4D8               	btfsc	status,2,c
  4806  00094C  D402               	goto	l3026
  4807  00094E  0A0F               	xorlw	15	; case 8
  4808  000950  B4D8               	btfsc	status,2,c
  4809  000952  EFA9  F000         	goto	l3026
  4810  000956  0A19               	xorlw	25	; case 17
  4811  000958  B4D8               	btfsc	status,2,c
  4812  00095A  D414               	goto	l3028
  4813  00095C  0A0B               	xorlw	11	; case 26
  4814  00095E  B4D8               	btfsc	status,2,c
  4815  000960  D41E               	goto	l3032
  4816  000962  0A01               	xorlw	1	; case 27
  4817  000964  B4D8               	btfsc	status,2,c
  4818  000966  D41B               	goto	l3032
  4819  000968  0A07               	xorlw	7	; case 28
  4820  00096A  B4D8               	btfsc	status,2,c
  4821  00096C  D418               	goto	l3032
  4822  00096E  0A01               	xorlw	1	; case 29
  4823  000970  B4D8               	btfsc	status,2,c
  4824  000972  D415               	goto	l3032
  4825  000974  0A26               	xorlw	38	; case 59
  4826  000976  B4D8               	btfsc	status,2,c
  4827  000978  D427               	goto	l3034
  4828  00097A  0A07               	xorlw	7	; case 60
  4829  00097C  B4D8               	btfsc	status,2,c
  4830  00097E  D424               	goto	l3034
  4831  000980  0A01               	xorlw	1	; case 61
  4832  000982  B4D8               	btfsc	status,2,c
  4833  000984  D421               	goto	l3034
  4834  000986  0A03               	xorlw	3	; case 62
  4835  000988  B4D8               	btfsc	status,2,c
  4836  00098A  D41E               	goto	l3034
  4837  00098C  0A67               	xorlw	103	; case 89
  4838  00098E  B4D8               	btfsc	status,2,c
  4839  000990  D43D               	goto	l3038
  4840  000992  0A39               	xorlw	57	; case 96
  4841  000994  B4D8               	btfsc	status,2,c
  4842  000996  D44C               	goto	l3040
  4843  000998  0A04               	xorlw	4	; case 100
  4844  00099A  B4D8               	btfsc	status,2,c
  4845  00099C  D449               	goto	l3040
  4846  00099E  0A0C               	xorlw	12	; case 104
  4847  0009A0  B4D8               	btfsc	status,2,c
  4848  0009A2  D446               	goto	l3040
  4849  0009A4  0A04               	xorlw	4	; case 108
  4850  0009A6  B4D8               	btfsc	status,2,c
  4851  0009A8  D443               	goto	l3040
  4852  0009AA  0A1C               	xorlw	28	; case 112
  4853  0009AC  B4D8               	btfsc	status,2,c
  4854  0009AE  D440               	goto	l3040
  4855  0009B0  0A04               	xorlw	4	; case 116
  4856  0009B2  B4D8               	btfsc	status,2,c
  4857  0009B4  D43D               	goto	l3040
  4858  0009B6  0A0C               	xorlw	12	; case 120
  4859  0009B8  B4D8               	btfsc	status,2,c
  4860  0009BA  D43A               	goto	l3040
  4861  0009BC  0A02               	xorlw	2	; case 122
  4862  0009BE  B4D8               	btfsc	status,2,c
  4863  0009C0  D437               	goto	l3040
  4864  0009C2  0A06               	xorlw	6	; case 124
  4865  0009C4  B4D8               	btfsc	status,2,c
  4866  0009C6  D434               	goto	l3040
  4867  0009C8  0A02               	xorlw	2	; case 126
  4868  0009CA  B4D8               	btfsc	status,2,c
  4869  0009CC  D431               	goto	l3040
  4870  0009CE  0AFE               	xorlw	254	; case 128
  4871  0009D0  B4D8               	btfsc	status,2,c
  4872  0009D2  D42E               	goto	l3040
  4873  0009D4  0A02               	xorlw	2	; case 130
  4874  0009D6  B4D8               	btfsc	status,2,c
  4875  0009D8  D42B               	goto	l3040
  4876  0009DA  0A06               	xorlw	6	; case 132
  4877  0009DC  B4D8               	btfsc	status,2,c
  4878  0009DE  D428               	goto	l3040
  4879  0009E0  0A1D               	xorlw	29	; case 153
  4880  0009E2  B4D8               	btfsc	status,2,c
  4881  0009E4  D514               	goto	l3088
  4882  0009E6  0A03               	xorlw	3	; case 154
  4883  0009E8  B4D8               	btfsc	status,2,c
  4884  0009EA  D511               	goto	l3088
  4885  0009EC  0A01               	xorlw	1	; case 155
  4886  0009EE  B4D8               	btfsc	status,2,c
  4887  0009F0  D50E               	goto	l3088
  4888  0009F2  0A07               	xorlw	7	; case 156
  4889  0009F4  B4D8               	btfsc	status,2,c
  4890  0009F6  D50B               	goto	l3088
  4891  0009F8  0A01               	xorlw	1	; case 157
  4892  0009FA  B4D8               	btfsc	status,2,c
  4893  0009FC  D508               	goto	l3088
  4894  0009FE  0A03               	xorlw	3	; case 158
  4895  000A00  B4D8               	btfsc	status,2,c
  4896  000A02  D505               	goto	l3088
  4897  000A04  0A01               	xorlw	1	; case 159
  4898  000A06  B4D8               	btfsc	status,2,c
  4899  000A08  D502               	goto	l3088
  4900  000A0A  0A3F               	xorlw	63	; case 160
  4901  000A0C  B4D8               	btfsc	status,2,c
  4902  000A0E  D4FF               	goto	l3088
  4903  000A10  0A01               	xorlw	1	; case 161
  4904  000A12  B4D8               	btfsc	status,2,c
  4905  000A14  D4FC               	goto	l3088
  4906  000A16  0A03               	xorlw	3	; case 162
  4907  000A18  B4D8               	btfsc	status,2,c
  4908  000A1A  D4F9               	goto	l3088
  4909  000A1C  0A01               	xorlw	1	; case 163
  4910  000A1E  B4D8               	btfsc	status,2,c
  4911  000A20  D4F6               	goto	l3088
  4912  000A22  0A07               	xorlw	7	; case 164
  4913  000A24  B4D8               	btfsc	status,2,c
  4914  000A26  D4F3               	goto	l3088
  4915  000A28  0A03               	xorlw	3	; case 167
  4916  000A2A  B4D8               	btfsc	status,2,c
  4917  000A2C  D571               	goto	l3126
  4918  000A2E  0A0B               	xorlw	11	; case 172
  4919  000A30  B4D8               	btfsc	status,2,c
  4920  000A32  D582               	goto	l3130
  4921  000A34  0A1D               	xorlw	29	; case 177
  4922  000A36  B4D8               	btfsc	status,2,c
  4923  000A38  D58B               	goto	l3134
  4924  000A3A  0A05               	xorlw	5	; case 180
  4925  000A3C  B4D8               	btfsc	status,2,c
  4926  000A3E  D643               	goto	l3166
  4927  000A40  0A01               	xorlw	1	; case 181
  4928  000A42  B4D8               	btfsc	status,2,c
  4929  000A44  D668               	goto	l3172
  4930  000A46  0A03               	xorlw	3	; case 182
  4931  000A48  B4D8               	btfsc	status,2,c
  4932  000A4A  D6A1               	goto	l211
  4933  000A4C  0A01               	xorlw	1	; case 183
  4934  000A4E  B4D8               	btfsc	status,2,c
  4935  000A50  D69E               	goto	l211
  4936  000A52  0A0F               	xorlw	15	; case 184
  4937  000A54  B4D8               	btfsc	status,2,c
  4938  000A56  D69B               	goto	l211
  4939  000A58                     l3212:
  4940                           
  4941                           ;JVM.c: 310: pc += pcIncrement;
  4942  000A58  503F               	movf	Jvm_RunMethod@pcIncrement,w,c
  4943  000A5A  2640               	addwf	Jvm_RunMethod@pc,f,c
  4944  000A5C  0E00               	movlw	0
  4945  000A5E  2241               	addwfc	Jvm_RunMethod@pc+1,f,c
  4946  000A60  2242               	addwfc	Jvm_RunMethod@pc+2,f,c
  4947  000A62  2243               	addwfc	Jvm_RunMethod@pc+3,f,c
  4948                           
  4949                           ;JVM.c: 312: } while((bytecode != 0xAC) && (bytecode != 0xB1));
  4950  000A64  5044               	movf	Jvm_RunMethod@bytecode,w,c
  4951  000A66  0AAC               	xorlw	172
  4952  000A68  B4D8               	btfsc	status,2,c
  4953  000A6A  D005               	goto	l217
  4954  000A6C  5044               	movf	Jvm_RunMethod@bytecode,w,c
  4955  000A6E  0AB1               	xorlw	177
  4956  000A70  A4D8               	btfss	status,2,c
  4957  000A72  EF7D  F000         	goto	l3018
  4958  000A76                     l217:
  4959  000A76  0012               	return	
  4960  000A78                     __end_of_Jvm_RunMethod:
  4961                           	opt stack 0
  4962                           tblptru	equ	0xFF8
  4963                           tblptrh	equ	0xFF7
  4964                           tblptrl	equ	0xFF6
  4965                           tablat	equ	0xFF5
  4966                           prodh	equ	0xFF4
  4967                           prodl	equ	0xFF3
  4968                           intcon	equ	0xFF2
  4969                           postinc0	equ	0xFEE
  4970                           wreg	equ	0xFE8
  4971                           indf1	equ	0xFE7
  4972                           postinc1	equ	0xFE6
  4973                           postdec1	equ	0xFE5
  4974                           fsr1h	equ	0xFE2
  4975                           fsr1l	equ	0xFE1
  4976                           indf2	equ	0xFDF
  4977                           postinc2	equ	0xFDE
  4978                           postdec2	equ	0xFDD
  4979                           fsr2h	equ	0xFDA
  4980                           fsr2l	equ	0xFD9
  4981                           status	equ	0xFD8
  4982                           
  4983 ;; *************** function ___lwmod *****************
  4984 ;; Defined at:
  4985 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwmod.c"
  4986 ;; Parameters:    Size  Location     Type
  4987 ;;  dividend        2   15[COMRAM] unsigned int 
  4988 ;;  divisor         2   17[COMRAM] unsigned int 
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;  counter         1   19[COMRAM] unsigned char 
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  2   15[COMRAM] unsigned int 
  4993 ;; Registers used:
  4994 ;;		wreg, status,2, status,0
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5000 ;;      Params:         4       0       0       0       0       0       0
  5001 ;;      Locals:         1       0       0       0       0       0       0
  5002 ;;      Temps:          0       0       0       0       0       0       0
  5003 ;;      Totals:         5       0       0       0       0       0       0
  5004 ;;Total ram usage:        5 bytes
  5005 ;; Hardware stack levels used:    1
  5006 ;; Hardware stack levels required when called:    2
  5007 ;; This function calls:
  5008 ;;		Nothing
  5009 ;; This function is called by:
  5010 ;;		_Jvm_RunMethod
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           	psect	text14
  5015  00194A                     __ptext14:
  5016                           	opt stack 0
  5017  00194A                     ___lwmod:
  5018                           	opt stack 26
  5019                           
  5020                           ;incstack = 0
  5021  00194A  5013               	movf	___lwmod@divisor+1,w,c
  5022  00194C  1012               	iorwf	___lwmod@divisor,w,c
  5023  00194E  B4D8               	btfsc	status,2,c
  5024  001950  D018               	goto	l1097
  5025  001952  0E01               	movlw	1
  5026  001954  6E14               	movwf	___lwmod@counter,c
  5027  001956  D004               	goto	l2452
  5028  001958                     l2450:
  5029  001958  90D8               	bcf	status,0,c
  5030  00195A  3612               	rlcf	___lwmod@divisor,f,c
  5031  00195C  3613               	rlcf	___lwmod@divisor+1,f,c
  5032  00195E  2A14               	incf	___lwmod@counter,f,c
  5033  001960                     l2452:
  5034  001960  AE13               	btfss	___lwmod@divisor+1,7,c
  5035  001962  D7FA               	goto	l2450
  5036  001964                     l2454:
  5037  001964  5012               	movf	___lwmod@divisor,w,c
  5038  001966  5C10               	subwf	___lwmod@dividend,w,c
  5039  001968  5013               	movf	___lwmod@divisor+1,w,c
  5040  00196A  5811               	subwfb	___lwmod@dividend+1,w,c
  5041  00196C  A0D8               	btfss	status,0,c
  5042  00196E  D004               	goto	l2458
  5043  001970  5012               	movf	___lwmod@divisor,w,c
  5044  001972  5E10               	subwf	___lwmod@dividend,f,c
  5045  001974  5013               	movf	___lwmod@divisor+1,w,c
  5046  001976  5A11               	subwfb	___lwmod@dividend+1,f,c
  5047  001978                     l2458:
  5048  001978  90D8               	bcf	status,0,c
  5049  00197A  3213               	rrcf	___lwmod@divisor+1,f,c
  5050  00197C  3212               	rrcf	___lwmod@divisor,f,c
  5051  00197E  2E14               	decfsz	___lwmod@counter,f,c
  5052  001980  D7F1               	goto	l2454
  5053  001982                     l1097:
  5054  001982  C010  F010         	movff	___lwmod@dividend,?___lwmod
  5055  001986  C011  F011         	movff	___lwmod@dividend+1,?___lwmod+1
  5056  00198A  0012               	return	
  5057  00198C                     __end_of___lwmod:
  5058                           	opt stack 0
  5059                           tblptru	equ	0xFF8
  5060                           tblptrh	equ	0xFF7
  5061                           tblptrl	equ	0xFF6
  5062                           tablat	equ	0xFF5
  5063                           prodh	equ	0xFF4
  5064                           prodl	equ	0xFF3
  5065                           intcon	equ	0xFF2
  5066                           postinc0	equ	0xFEE
  5067                           wreg	equ	0xFE8
  5068                           indf1	equ	0xFE7
  5069                           postinc1	equ	0xFE6
  5070                           postdec1	equ	0xFE5
  5071                           fsr1h	equ	0xFE2
  5072                           fsr1l	equ	0xFE1
  5073                           indf2	equ	0xFDF
  5074                           postinc2	equ	0xFDE
  5075                           postdec2	equ	0xFDD
  5076                           fsr2h	equ	0xFDA
  5077                           fsr2l	equ	0xFD9
  5078                           status	equ	0xFD8
  5079                           
  5080 ;; *************** function ___lwdiv *****************
  5081 ;; Defined at:
  5082 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;  dividend        2   15[COMRAM] unsigned int 
  5085 ;;  divisor         2   17[COMRAM] unsigned int 
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;  quotient        2   19[COMRAM] unsigned int 
  5088 ;;  counter         1   21[COMRAM] unsigned char 
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  2   15[COMRAM] unsigned int 
  5091 ;; Registers used:
  5092 ;;		wreg, status,2, status,0
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5098 ;;      Params:         4       0       0       0       0       0       0
  5099 ;;      Locals:         3       0       0       0       0       0       0
  5100 ;;      Temps:          0       0       0       0       0       0       0
  5101 ;;      Totals:         7       0       0       0       0       0       0
  5102 ;;Total ram usage:        7 bytes
  5103 ;; Hardware stack levels used:    1
  5104 ;; Hardware stack levels required when called:    2
  5105 ;; This function calls:
  5106 ;;		Nothing
  5107 ;; This function is called by:
  5108 ;;		_Jvm_RunMethod
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112                           	psect	text15
  5113  00174A                     __ptext15:
  5114                           	opt stack 0
  5115  00174A                     ___lwdiv:
  5116                           	opt stack 26
  5117                           
  5118                           ;incstack = 0
  5119  00174A  0E00               	movlw	0
  5120  00174C  6E15               	movwf	___lwdiv@quotient+1,c
  5121  00174E  0E00               	movlw	0
  5122  001750  6E14               	movwf	___lwdiv@quotient,c
  5123  001752  5013               	movf	___lwdiv@divisor+1,w,c
  5124  001754  1012               	iorwf	___lwdiv@divisor,w,c
  5125  001756  B4D8               	btfsc	status,2,c
  5126  001758  D01C               	goto	l1087
  5127  00175A  0E01               	movlw	1
  5128  00175C  6E16               	movwf	___lwdiv@counter,c
  5129  00175E  D004               	goto	l2432
  5130  001760                     l2430:
  5131  001760  90D8               	bcf	status,0,c
  5132  001762  3612               	rlcf	___lwdiv@divisor,f,c
  5133  001764  3613               	rlcf	___lwdiv@divisor+1,f,c
  5134  001766  2A16               	incf	___lwdiv@counter,f,c
  5135  001768                     l2432:
  5136  001768  AE13               	btfss	___lwdiv@divisor+1,7,c
  5137  00176A  D7FA               	goto	l2430
  5138  00176C                     l2434:
  5139  00176C  90D8               	bcf	status,0,c
  5140  00176E  3614               	rlcf	___lwdiv@quotient,f,c
  5141  001770  3615               	rlcf	___lwdiv@quotient+1,f,c
  5142  001772  5012               	movf	___lwdiv@divisor,w,c
  5143  001774  5C10               	subwf	___lwdiv@dividend,w,c
  5144  001776  5013               	movf	___lwdiv@divisor+1,w,c
  5145  001778  5811               	subwfb	___lwdiv@dividend+1,w,c
  5146  00177A  A0D8               	btfss	status,0,c
  5147  00177C  D005               	goto	l2442
  5148  00177E  5012               	movf	___lwdiv@divisor,w,c
  5149  001780  5E10               	subwf	___lwdiv@dividend,f,c
  5150  001782  5013               	movf	___lwdiv@divisor+1,w,c
  5151  001784  5A11               	subwfb	___lwdiv@dividend+1,f,c
  5152  001786  8014               	bsf	___lwdiv@quotient,0,c
  5153  001788                     l2442:
  5154  001788  90D8               	bcf	status,0,c
  5155  00178A  3213               	rrcf	___lwdiv@divisor+1,f,c
  5156  00178C  3212               	rrcf	___lwdiv@divisor,f,c
  5157  00178E  2E16               	decfsz	___lwdiv@counter,f,c
  5158  001790  D7ED               	goto	l2434
  5159  001792                     l1087:
  5160  001792  C014  F010         	movff	___lwdiv@quotient,?___lwdiv
  5161  001796  C015  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5162  00179A  0012               	return	
  5163  00179C                     __end_of___lwdiv:
  5164                           	opt stack 0
  5165                           tblptru	equ	0xFF8
  5166                           tblptrh	equ	0xFF7
  5167                           tblptrl	equ	0xFF6
  5168                           tablat	equ	0xFF5
  5169                           prodh	equ	0xFF4
  5170                           prodl	equ	0xFF3
  5171                           intcon	equ	0xFF2
  5172                           postinc0	equ	0xFEE
  5173                           wreg	equ	0xFE8
  5174                           indf1	equ	0xFE7
  5175                           postinc1	equ	0xFE6
  5176                           postdec1	equ	0xFE5
  5177                           fsr1h	equ	0xFE2
  5178                           fsr1l	equ	0xFE1
  5179                           indf2	equ	0xFDF
  5180                           postinc2	equ	0xFDE
  5181                           postdec2	equ	0xFDD
  5182                           fsr2h	equ	0xFDA
  5183                           fsr2l	equ	0xFD9
  5184                           status	equ	0xFD8
  5185                           
  5186 ;; *************** function _Mm_GetU16 *****************
  5187 ;; Defined at:
  5188 ;;		line 22 in file "src/MemoryManagement/MemoryManagement.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  address         4   35[COMRAM] unsigned long 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  value           2   39[COMRAM] unsigned short 
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  2   35[COMRAM] unsigned short 
  5195 ;; Registers used:
  5196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5202 ;;      Params:         4       0       0       0       0       0       0
  5203 ;;      Locals:         2       0       0       0       0       0       0
  5204 ;;      Temps:          0       0       0       0       0       0       0
  5205 ;;      Totals:         6       0       0       0       0       0       0
  5206 ;;Total ram usage:        6 bytes
  5207 ;; Hardware stack levels used:    1
  5208 ;; Hardware stack levels required when called:    4
  5209 ;; This function calls:
  5210 ;;		_Mm_ReadNVM
  5211 ;; This function is called by:
  5212 ;;		_Jvm_Main
  5213 ;;		_Jvm_RunMethod
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           	psect	text16
  5218  0019CC                     __ptext16:
  5219                           	opt stack 0
  5220  0019CC                     _Mm_GetU16:
  5221                           	opt stack 25
  5222                           
  5223                           ;MemoryManagement.c: 24: uint16_t value = 0x00;
  5224                           
  5225                           ;incstack = 0
  5226  0019CC  0E00               	movlw	0
  5227  0019CE  6E29               	movwf	Mm_GetU16@value+1,c
  5228  0019D0  0E00               	movlw	0
  5229  0019D2  6E28               	movwf	Mm_GetU16@value,c
  5230                           
  5231                           ;MemoryManagement.c: 25: Mm_ReadNVM((uint32_t) address, 2, (uint8_t *) &value);
  5232  0019D4  C024  F01A         	movff	Mm_GetU16@address,Mm_ReadNVM@address
  5233  0019D8  C025  F01B         	movff	Mm_GetU16@address+1,Mm_ReadNVM@address+1
  5234  0019DC  C026  F01C         	movff	Mm_GetU16@address+2,Mm_ReadNVM@address+2
  5235  0019E0  C027  F01D         	movff	Mm_GetU16@address+3,Mm_ReadNVM@address+3
  5236  0019E4  0E02               	movlw	2
  5237  0019E6  6E1E               	movwf	Mm_ReadNVM@bytes,c
  5238  0019E8  0E00               	movlw	0
  5239  0019EA  6E1F               	movwf	Mm_ReadNVM@bytes+1,c
  5240  0019EC  0E00               	movlw	0
  5241  0019EE  6E20               	movwf	Mm_ReadNVM@bytes+2,c
  5242  0019F0  0E00               	movlw	0
  5243  0019F2  6E21               	movwf	Mm_ReadNVM@bytes+3,c
  5244  0019F4  0E00               	movlw	high Mm_GetU16@value
  5245  0019F6  6E23               	movwf	Mm_ReadNVM@data+1,c
  5246  0019F8  0E28               	movlw	low Mm_GetU16@value
  5247  0019FA  6E22               	movwf	Mm_ReadNVM@data,c
  5248  0019FC  EC78  F009         	call	_Mm_ReadNVM	;wreg free
  5249                           
  5250                           ;MemoryManagement.c: 26: return value;
  5251  001A00  C028  F024         	movff	Mm_GetU16@value,?_Mm_GetU16
  5252  001A04  C029  F025         	movff	Mm_GetU16@value+1,?_Mm_GetU16+1
  5253  001A08  0012               	return	
  5254  001A0A                     __end_of_Mm_GetU16:
  5255                           	opt stack 0
  5256                           tblptru	equ	0xFF8
  5257                           tblptrh	equ	0xFF7
  5258                           tblptrl	equ	0xFF6
  5259                           tablat	equ	0xFF5
  5260                           prodh	equ	0xFF4
  5261                           prodl	equ	0xFF3
  5262                           intcon	equ	0xFF2
  5263                           postinc0	equ	0xFEE
  5264                           wreg	equ	0xFE8
  5265                           indf1	equ	0xFE7
  5266                           postinc1	equ	0xFE6
  5267                           postdec1	equ	0xFE5
  5268                           fsr1h	equ	0xFE2
  5269                           fsr1l	equ	0xFE1
  5270                           indf2	equ	0xFDF
  5271                           postinc2	equ	0xFDE
  5272                           postdec2	equ	0xFDD
  5273                           fsr2h	equ	0xFDA
  5274                           fsr2l	equ	0xFD9
  5275                           status	equ	0xFD8
  5276                           
  5277 ;; *************** function _Heap_SetBytes *****************
  5278 ;; Defined at:
  5279 ;;		line 119 in file "src/JVM/Heap.c"
  5280 ;; Parameters:    Size  Location     Type
  5281 ;;  bytes           2   15[COMRAM] unsigned short 
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;  heap            2   21[COMRAM] PTR struct .
  5284 ;;		 -> Heap(1024), 
  5285 ;;  size            2   19[COMRAM] unsigned short 
  5286 ;; Return value:  Size  Location     Type
  5287 ;;		None               void
  5288 ;; Registers used:
  5289 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5295 ;;      Params:         2       0       0       0       0       0       0
  5296 ;;      Locals:         4       0       0       0       0       0       0
  5297 ;;      Temps:          2       0       0       0       0       0       0
  5298 ;;      Totals:         8       0       0       0       0       0       0
  5299 ;;Total ram usage:        8 bytes
  5300 ;; Hardware stack levels used:    1
  5301 ;; Hardware stack levels required when called:    2
  5302 ;; This function calls:
  5303 ;;		Nothing
  5304 ;; This function is called by:
  5305 ;;		_Jvm_RunMethod
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           	psect	text17
  5310  001380                     __ptext17:
  5311                           	opt stack 0
  5312  001380                     _Heap_SetBytes:
  5313                           	opt stack 26
  5314                           
  5315                           ;Heap.c: 121: heap_t *heap = (heap_t *) &Heap[Heap_BaseOffset];
  5316                           
  5317                           ;incstack = 0
  5318  001380  0ED7               	movlw	low _Heap
  5319  001382  2462               	addwf	_Heap_BaseOffset,w,c
  5320  001384  6E16               	movwf	Heap_SetBytes@heap,c
  5321  001386  0E00               	movlw	high _Heap
  5322  001388  2063               	addwfc	_Heap_BaseOffset+1,w,c
  5323  00138A  6E17               	movwf	Heap_SetBytes@heap+1,c
  5324                           
  5325                           ;Heap.c: 122: uint16_t size = heap->size;
  5326  00138C  EE20 F002          	lfsr	2,2
  5327  001390  5016               	movf	Heap_SetBytes@heap,w,c
  5328  001392  26D9               	addwf	fsr2l,f,c
  5329  001394  5017               	movf	Heap_SetBytes@heap+1,w,c
  5330  001396  22DA               	addwfc	fsr2h,f,c
  5331  001398  CFDE F014          	movff	postinc2,Heap_SetBytes@size
  5332  00139C  CFDD F015          	movff	postdec2,Heap_SetBytes@size+1
  5333                           
  5334                           ;Heap.c: 124: if ((Heap_BaseOffset < bytes) || (0 != heap->id)) {
  5335  0013A0  5010               	movf	Heap_SetBytes@bytes,w,c
  5336  0013A2  5C62               	subwf	_Heap_BaseOffset,w,c
  5337  0013A4  5011               	movf	Heap_SetBytes@bytes+1,w,c
  5338  0013A6  5863               	subwfb	_Heap_BaseOffset+1,w,c
  5339  0013A8  A0D8               	btfss	status,0,c
  5340  0013AA  D006               	goto	l278
  5341  0013AC  C016  FFD9         	movff	Heap_SetBytes@heap,fsr2l
  5342  0013B0  C017  FFDA         	movff	Heap_SetBytes@heap+1,fsr2h
  5343  0013B4  50DF               	movf	indf2,w,c
  5344  0013B6  A4D8               	btfss	status,2,c
  5345  0013B8                     l278:
  5346  0013B8  D7FF               	goto	l278
  5347                           
  5348                           ;Heap.c: 126: }
  5349                           ;Heap.c: 128: Heap_BaseOffset -= bytes;
  5350  0013BA  5010               	movf	Heap_SetBytes@bytes,w,c
  5351  0013BC  5E62               	subwf	_Heap_BaseOffset,f,c
  5352  0013BE  5011               	movf	Heap_SetBytes@bytes+1,w,c
  5353  0013C0  5A63               	subwfb	_Heap_BaseOffset+1,f,c
  5354                           
  5355                           ;Heap.c: 129: heap = (heap_t *) &Heap[Heap_BaseOffset];
  5356  0013C2  0ED7               	movlw	low _Heap
  5357  0013C4  2462               	addwf	_Heap_BaseOffset,w,c
  5358  0013C6  6E16               	movwf	Heap_SetBytes@heap,c
  5359  0013C8  0E00               	movlw	high _Heap
  5360  0013CA  2063               	addwfc	_Heap_BaseOffset+1,w,c
  5361  0013CC  6E17               	movwf	Heap_SetBytes@heap+1,c
  5362                           
  5363                           ;Heap.c: 130: heap->id = 0;
  5364  0013CE  C016  FFD9         	movff	Heap_SetBytes@heap,fsr2l
  5365  0013D2  C017  FFDA         	movff	Heap_SetBytes@heap+1,fsr2h
  5366  0013D6  0E00               	movlw	0
  5367  0013D8  6EDF               	movwf	indf2,c
  5368                           
  5369                           ;Heap.c: 131: heap->size = size + bytes;
  5370  0013DA  C014  F012         	movff	Heap_SetBytes@size,??_Heap_SetBytes
  5371  0013DE  C015  F013         	movff	Heap_SetBytes@size+1,??_Heap_SetBytes+1
  5372  0013E2  5010               	movf	Heap_SetBytes@bytes,w,c
  5373  0013E4  2612               	addwf	??_Heap_SetBytes,f,c
  5374  0013E6  5011               	movf	Heap_SetBytes@bytes+1,w,c
  5375  0013E8  2213               	addwfc	??_Heap_SetBytes+1,f,c
  5376  0013EA  EE20 F002          	lfsr	2,2
  5377  0013EE  5016               	movf	Heap_SetBytes@heap,w,c
  5378  0013F0  26D9               	addwf	fsr2l,f,c
  5379  0013F2  5017               	movf	Heap_SetBytes@heap+1,w,c
  5380  0013F4  22DA               	addwfc	fsr2h,f,c
  5381  0013F6  C012  FFDE         	movff	??_Heap_SetBytes,postinc2
  5382  0013FA  C013  FFDD         	movff	??_Heap_SetBytes+1,postdec2
  5383  0013FE  0012               	return	
  5384  001400                     __end_of_Heap_SetBytes:
  5385                           	opt stack 0
  5386                           tblptru	equ	0xFF8
  5387                           tblptrh	equ	0xFF7
  5388                           tblptrl	equ	0xFF6
  5389                           tablat	equ	0xFF5
  5390                           prodh	equ	0xFF4
  5391                           prodl	equ	0xFF3
  5392                           intcon	equ	0xFF2
  5393                           postinc0	equ	0xFEE
  5394                           wreg	equ	0xFE8
  5395                           indf1	equ	0xFE7
  5396                           postinc1	equ	0xFE6
  5397                           postdec1	equ	0xFE5
  5398                           fsr1h	equ	0xFE2
  5399                           fsr1l	equ	0xFE1
  5400                           indf2	equ	0xFDF
  5401                           postinc2	equ	0xFDE
  5402                           postdec2	equ	0xFDD
  5403                           fsr2h	equ	0xFDA
  5404                           fsr2l	equ	0xFD9
  5405                           status	equ	0xFD8
  5406                           
  5407 ;; *************** function _Heap_GetHeaderAddress *****************
  5408 ;; Defined at:
  5409 ;;		line 108 in file "src/JVM/Heap.c"
  5410 ;; Parameters:    Size  Location     Type
  5411 ;;  id              1    wreg     unsigned char 
  5412 ;; Auto vars:     Size  Location     Type
  5413 ;;  id              1   26[COMRAM] unsigned char 
  5414 ;;  heap            2   27[COMRAM] PTR struct .
  5415 ;;		 -> Heap(1024), NULL(0), 
  5416 ;; Return value:  Size  Location     Type
  5417 ;;                  2   24[COMRAM] PTR void 
  5418 ;; Registers used:
  5419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5420 ;; Tracked objects:
  5421 ;;		On entry : 0/0
  5422 ;;		On exit  : 0/0
  5423 ;;		Unchanged: 0/0
  5424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5425 ;;      Params:         2       0       0       0       0       0       0
  5426 ;;      Locals:         3       0       0       0       0       0       0
  5427 ;;      Temps:          0       0       0       0       0       0       0
  5428 ;;      Totals:         5       0       0       0       0       0       0
  5429 ;;Total ram usage:        5 bytes
  5430 ;; Hardware stack levels used:    1
  5431 ;; Hardware stack levels required when called:    3
  5432 ;; This function calls:
  5433 ;;		_Heap_GetHeader
  5434 ;; This function is called by:
  5435 ;;		_Jvm_RunMethod
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439                           	psect	text18
  5440  001B5E                     __ptext18:
  5441                           	opt stack 0
  5442  001B5E                     _Heap_GetHeaderAddress:
  5443                           	opt stack 25
  5444                           
  5445                           ;incstack = 0
  5446                           ;Heap_GetHeaderAddress@id stored from wreg
  5447  001B5E  6E1B               	movwf	Heap_GetHeaderAddress@id,c
  5448                           
  5449                           ;Heap.c: 110: heap_t *heap = Heap_GetHeader(id);
  5450  001B60  501B               	movf	Heap_GetHeaderAddress@id,w,c
  5451  001B62  ECE8  F00A         	call	_Heap_GetHeader
  5452  001B66  C010  F01C         	movff	?_Heap_GetHeader,Heap_GetHeaderAddress@heap
  5453  001B6A  C011  F01D         	movff	?_Heap_GetHeader+1,Heap_GetHeaderAddress@heap+1
  5454                           
  5455                           ;Heap.c: 112: if (heap == (0)) {
  5456  001B6E  501D               	movf	Heap_GetHeaderAddress@heap+1,w,c
  5457  001B70  101C               	iorwf	Heap_GetHeaderAddress@heap,w,c
  5458  001B72  B4D8               	btfsc	status,2,c
  5459  001B74                     l270:
  5460  001B74  D7FF               	goto	l270
  5461                           
  5462                           ;Heap.c: 114: }
  5463                           ;Heap.c: 116: return (heap + 1);
  5464  001B76  0E04               	movlw	4
  5465  001B78  241C               	addwf	Heap_GetHeaderAddress@heap,w,c
  5466  001B7A  6E19               	movwf	?_Heap_GetHeaderAddress,c
  5467  001B7C  0E00               	movlw	0
  5468  001B7E  201D               	addwfc	Heap_GetHeaderAddress@heap+1,w,c
  5469  001B80  6E1A               	movwf	?_Heap_GetHeaderAddress+1,c
  5470  001B82  0012               	return	
  5471  001B84                     __end_of_Heap_GetHeaderAddress:
  5472                           	opt stack 0
  5473                           tblptru	equ	0xFF8
  5474                           tblptrh	equ	0xFF7
  5475                           tblptrl	equ	0xFF6
  5476                           tablat	equ	0xFF5
  5477                           prodh	equ	0xFF4
  5478                           prodl	equ	0xFF3
  5479                           intcon	equ	0xFF2
  5480                           postinc0	equ	0xFEE
  5481                           wreg	equ	0xFE8
  5482                           indf1	equ	0xFE7
  5483                           postinc1	equ	0xFE6
  5484                           postdec1	equ	0xFE5
  5485                           fsr1h	equ	0xFE2
  5486                           fsr1l	equ	0xFE1
  5487                           indf2	equ	0xFDF
  5488                           postinc2	equ	0xFDE
  5489                           postdec2	equ	0xFDD
  5490                           fsr2h	equ	0xFDA
  5491                           fsr2l	equ	0xFD9
  5492                           status	equ	0xFD8
  5493                           
  5494 ;; *************** function _Heap_GetHeader *****************
  5495 ;; Defined at:
  5496 ;;		line 91 in file "src/JVM/Heap.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;  id              1    wreg     unsigned char 
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;  id              1   19[COMRAM] unsigned char 
  5501 ;;  heap            2   22[COMRAM] PTR struct .
  5502 ;;		 -> Heap(1024), 
  5503 ;;  offset          2   20[COMRAM] unsigned short 
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  2   15[COMRAM] PTR struct .
  5506 ;; Registers used:
  5507 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5513 ;;      Params:         2       0       0       0       0       0       0
  5514 ;;      Locals:         5       0       0       0       0       0       0
  5515 ;;      Temps:          2       0       0       0       0       0       0
  5516 ;;      Totals:         9       0       0       0       0       0       0
  5517 ;;Total ram usage:        9 bytes
  5518 ;; Hardware stack levels used:    1
  5519 ;; Hardware stack levels required when called:    2
  5520 ;; This function calls:
  5521 ;;		Nothing
  5522 ;; This function is called by:
  5523 ;;		_Heap_GetHeaderAddress
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527                           	psect	text19
  5528  0015D0                     __ptext19:
  5529                           	opt stack 0
  5530  0015D0                     _Heap_GetHeader:
  5531                           	opt stack 25
  5532                           
  5533                           ;incstack = 0
  5534                           ;Heap_GetHeader@id stored from wreg
  5535  0015D0  6E14               	movwf	Heap_GetHeader@id,c
  5536                           
  5537                           ;Heap.c: 93: uint16_t offset = Heap_BaseOffset;
  5538  0015D2  C062  F015         	movff	_Heap_BaseOffset,Heap_GetHeader@offset
  5539  0015D6  C063  F016         	movff	_Heap_BaseOffset+1,Heap_GetHeader@offset+1
  5540                           
  5541                           ;Heap.c: 95: while (offset < sizeof(Heap)) {
  5542  0015DA  D024               	goto	l2326
  5543  0015DC                     l2316:
  5544                           
  5545                           ;Heap.c: 96: heap_t *heap = (heap_t *) &Heap[offset];
  5546  0015DC  0ED7               	movlw	low _Heap
  5547  0015DE  2415               	addwf	Heap_GetHeader@offset,w,c
  5548  0015E0  6E17               	movwf	Heap_GetHeader@heap,c
  5549  0015E2  0E00               	movlw	high _Heap
  5550  0015E4  2016               	addwfc	Heap_GetHeader@offset+1,w,c
  5551  0015E6  6E18               	movwf	Heap_GetHeader@heap+1,c
  5552                           
  5553                           ;Heap.c: 98: if (heap->id == id) {
  5554  0015E8  5014               	movf	Heap_GetHeader@id,w,c
  5555  0015EA  C017  FFD9         	movff	Heap_GetHeader@heap,fsr2l
  5556  0015EE  C018  FFDA         	movff	Heap_GetHeader@heap+1,fsr2h
  5557  0015F2  62DF               	cpfseq	indf2,c
  5558  0015F4  D005               	goto	l2324
  5559                           
  5560                           ;Heap.c: 99: return heap;
  5561  0015F6  C018  F011         	movff	Heap_GetHeader@heap+1,?_Heap_GetHeader+1
  5562  0015FA  C017  F010         	movff	Heap_GetHeader@heap,?_Heap_GetHeader
  5563  0015FE  D01C               	goto	l265
  5564  001600                     l2324:
  5565                           
  5566                           ;Heap.c: 100: }
  5567                           ;Heap.c: 102: offset += heap->size + sizeof(heap_t);
  5568  001600  EE20 F002          	lfsr	2,2
  5569  001604  5017               	movf	Heap_GetHeader@heap,w,c
  5570  001606  26D9               	addwf	fsr2l,f,c
  5571  001608  5018               	movf	Heap_GetHeader@heap+1,w,c
  5572  00160A  22DA               	addwfc	fsr2h,f,c
  5573  00160C  CFDE F012          	movff	postinc2,??_Heap_GetHeader
  5574  001610  CFDD F013          	movff	postdec2,??_Heap_GetHeader+1
  5575  001614  0E04               	movlw	4
  5576  001616  2612               	addwf	??_Heap_GetHeader,f,c
  5577  001618  0E00               	movlw	0
  5578  00161A  2213               	addwfc	??_Heap_GetHeader+1,f,c
  5579  00161C  5012               	movf	??_Heap_GetHeader,w,c
  5580  00161E  2615               	addwf	Heap_GetHeader@offset,f,c
  5581  001620  5013               	movf	??_Heap_GetHeader+1,w,c
  5582  001622  2216               	addwfc	Heap_GetHeader@offset+1,f,c
  5583  001624                     l2326:
  5584  001624  0E00               	movlw	0
  5585  001626  5C15               	subwf	Heap_GetHeader@offset,w,c
  5586  001628  0E04               	movlw	4
  5587  00162A  5816               	subwfb	Heap_GetHeader@offset+1,w,c
  5588  00162C  A0D8               	btfss	status,0,c
  5589  00162E  D7D6               	goto	l2316
  5590                           
  5591                           ;Heap.c: 103: }
  5592                           ;Heap.c: 105: return (0);
  5593  001630  0E00               	movlw	0
  5594  001632  6E11               	movwf	?_Heap_GetHeader+1,c
  5595  001634  0E00               	movlw	0
  5596  001636  6E10               	movwf	?_Heap_GetHeader,c
  5597  001638                     l265:
  5598  001638  0012               	return	
  5599  00163A                     __end_of_Heap_GetHeader:
  5600                           	opt stack 0
  5601                           tblptru	equ	0xFF8
  5602                           tblptrh	equ	0xFF7
  5603                           tblptrl	equ	0xFF6
  5604                           tablat	equ	0xFF5
  5605                           prodh	equ	0xFF4
  5606                           prodl	equ	0xFF3
  5607                           intcon	equ	0xFF2
  5608                           postinc0	equ	0xFEE
  5609                           wreg	equ	0xFE8
  5610                           indf1	equ	0xFE7
  5611                           postinc1	equ	0xFE6
  5612                           postdec1	equ	0xFE5
  5613                           fsr1h	equ	0xFE2
  5614                           fsr1l	equ	0xFE1
  5615                           indf2	equ	0xFDF
  5616                           postinc2	equ	0xFDE
  5617                           postdec2	equ	0xFDD
  5618                           fsr2h	equ	0xFDA
  5619                           fsr2l	equ	0xFD9
  5620                           status	equ	0xFD8
  5621                           
  5622 ;; *************** function _Api_ExecuteNativeMethod *****************
  5623 ;; Defined at:
  5624 ;;		line 16 in file "src/API/API.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;  id              1    wreg     unsigned char 
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;  id              1   43[COMRAM] unsigned char 
  5629 ;;  value           2   44[COMRAM] unsigned short 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;		None               void
  5632 ;; Registers used:
  5633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5639 ;;      Params:         0       0       0       0       0       0       0
  5640 ;;      Locals:         3       0       0       0       0       0       0
  5641 ;;      Temps:          2       0       0       0       0       0       0
  5642 ;;      Totals:         5       0       0       0       0       0       0
  5643 ;;Total ram usage:        5 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; Hardware stack levels required when called:    4
  5646 ;; This function calls:
  5647 ;;		_API_MicroApplication_Sleep
  5648 ;;		_Api_PortRegistry_GetPortRegistry
  5649 ;;		_Api_PortRegistry_SetPin
  5650 ;; This function is called by:
  5651 ;;		_Jvm_RunMethod
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text20
  5656  000CA6                     __ptext20:
  5657                           	opt stack 0
  5658  000CA6                     _Api_ExecuteNativeMethod:
  5659                           	opt stack 24
  5660                           
  5661                           ;incstack = 0
  5662                           ;Api_ExecuteNativeMethod@id stored from wreg
  5663  000CA6  6E2C               	movwf	Api_ExecuteNativeMethod@id,c
  5664                           
  5665                           ;API.c: 18: uint16_t value = (*(Stack_CurrentPointer--));
  5666  000CA8  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  5667  000CAC  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  5668  000CB0  CFDE F02D          	movff	postinc2,Api_ExecuteNativeMethod@value
  5669  000CB4  CFDD F02E          	movff	postdec2,Api_ExecuteNativeMethod@value+1
  5670  000CB8  0E02               	movlw	2
  5671  000CBA  5E66               	subwf	_Stack_CurrentPointer,f,c
  5672  000CBC  0E00               	movlw	0
  5673  000CBE  5A67               	subwfb	_Stack_CurrentPointer+1,f,c
  5674                           
  5675                           ;API.c: 20: switch (id) {
  5676  000CC0  D04B               	goto	l2358
  5677  000CC2                     l2344:
  5678                           
  5679                           ;API.c: 25: API_MicroApplication_Sleep(value);
  5680  000CC2  C02D  F024         	movff	Api_ExecuteNativeMethod@value,API_MicroApplication_Sleep@value
  5681  000CC6  C02E  F025         	movff	Api_ExecuteNativeMethod@value+1,API_MicroApplication_Sleep@value+1
  5682  000CCA  EC00  F00A         	call	_API_MicroApplication_Sleep	;wreg free
  5683                           
  5684                           ;API.c: 26: break;
  5685  000CCE  D05D               	goto	l2360
  5686  000CD0                     l2346:
  5687                           
  5688                           ;API.c: 28: Api_PortRegistry_GetPortRegistry(value);
  5689  000CD0  502D               	movf	Api_ExecuteNativeMethod@value,w,c
  5690  000CD2  ECCE  F00B         	call	_Api_PortRegistry_GetPortRegistry
  5691                           
  5692                           ;API.c: 29: break;
  5693  000CD6  D059               	goto	l2360
  5694  000CD8                     l2348:
  5695                           
  5696                           ;API.c: 31: Api_PortRegistry_SetPin((0x01 << (uint8_t) value), 0x00);
  5697  000CD8  0E00               	movlw	0
  5698  000CDA  6E10               	movwf	Api_PortRegistry_SetPin@type,c
  5699  000CDC  C02D  F02A         	movff	Api_ExecuteNativeMethod@value,??_Api_ExecuteNativeMethod
  5700  000CE0  0E01               	movlw	1
  5701  000CE2  6E2B               	movwf	(??_Api_ExecuteNativeMethod+1)& (0+255),c
  5702  000CE4  2A2A               	incf	??_Api_ExecuteNativeMethod,f,c
  5703  000CE6  D002               	goto	u1334
  5704  000CE8                     u1335:
  5705  000CE8  90D8               	bcf	status,0,c
  5706  000CEA  362B               	rlcf	??_Api_ExecuteNativeMethod+1,f,c
  5707  000CEC                     u1334:
  5708  000CEC  2E2A               	decfsz	??_Api_ExecuteNativeMethod,f,c
  5709  000CEE  D7FC               	goto	u1335
  5710  000CF0  502B               	movf	??_Api_ExecuteNativeMethod+1,w,c
  5711  000CF2  EC7B  F00B         	call	_Api_PortRegistry_SetPin
  5712                           
  5713                           ;API.c: 32: break;
  5714  000CF6  D049               	goto	l2360
  5715  000CF8                     l2350:
  5716                           
  5717                           ;API.c: 34: Api_PortRegistry_SetPin((0x01 << (uint8_t) value), 0x01);
  5718  000CF8  0E01               	movlw	1
  5719  000CFA  6E10               	movwf	Api_PortRegistry_SetPin@type,c
  5720  000CFC  C02D  F02A         	movff	Api_ExecuteNativeMethod@value,??_Api_ExecuteNativeMethod
  5721  000D00  0E01               	movlw	1
  5722  000D02  6E2B               	movwf	(??_Api_ExecuteNativeMethod+1)& (0+255),c
  5723  000D04  2A2A               	incf	??_Api_ExecuteNativeMethod,f,c
  5724  000D06  D002               	goto	u1344
  5725  000D08                     u1345:
  5726  000D08  90D8               	bcf	status,0,c
  5727  000D0A  362B               	rlcf	??_Api_ExecuteNativeMethod+1,f,c
  5728  000D0C                     u1344:
  5729  000D0C  2E2A               	decfsz	??_Api_ExecuteNativeMethod,f,c
  5730  000D0E  D7FC               	goto	u1345
  5731  000D10  502B               	movf	??_Api_ExecuteNativeMethod+1,w,c
  5732  000D12  EC7B  F00B         	call	_Api_PortRegistry_SetPin
  5733                           
  5734                           ;API.c: 35: break;
  5735  000D16  D039               	goto	l2360
  5736  000D18                     l2352:
  5737                           
  5738                           ;API.c: 37: Api_PortRegistry_SetPin((0x01 << (uint8_t) value), 0x03);
  5739  000D18  0E03               	movlw	3
  5740  000D1A  6E10               	movwf	Api_PortRegistry_SetPin@type,c
  5741  000D1C  C02D  F02A         	movff	Api_ExecuteNativeMethod@value,??_Api_ExecuteNativeMethod
  5742  000D20  0E01               	movlw	1
  5743  000D22  6E2B               	movwf	(??_Api_ExecuteNativeMethod+1)& (0+255),c
  5744  000D24  2A2A               	incf	??_Api_ExecuteNativeMethod,f,c
  5745  000D26  D002               	goto	u1354
  5746  000D28                     u1355:
  5747  000D28  90D8               	bcf	status,0,c
  5748  000D2A  362B               	rlcf	??_Api_ExecuteNativeMethod+1,f,c
  5749  000D2C                     u1354:
  5750  000D2C  2E2A               	decfsz	??_Api_ExecuteNativeMethod,f,c
  5751  000D2E  D7FC               	goto	u1355
  5752  000D30  502B               	movf	??_Api_ExecuteNativeMethod+1,w,c
  5753  000D32  EC7B  F00B         	call	_Api_PortRegistry_SetPin
  5754                           
  5755                           ;API.c: 38: break;
  5756  000D36  D029               	goto	l2360
  5757  000D38                     l2354:
  5758                           
  5759                           ;API.c: 40: Api_PortRegistry_SetPin((0x01 << (uint8_t) value), 0x02);
  5760  000D38  0E02               	movlw	2
  5761  000D3A  6E10               	movwf	Api_PortRegistry_SetPin@type,c
  5762  000D3C  C02D  F02A         	movff	Api_ExecuteNativeMethod@value,??_Api_ExecuteNativeMethod
  5763  000D40  0E01               	movlw	1
  5764  000D42  6E2B               	movwf	(??_Api_ExecuteNativeMethod+1)& (0+255),c
  5765  000D44  2A2A               	incf	??_Api_ExecuteNativeMethod,f,c
  5766  000D46  D002               	goto	u1364
  5767  000D48                     u1365:
  5768  000D48  90D8               	bcf	status,0,c
  5769  000D4A  362B               	rlcf	??_Api_ExecuteNativeMethod+1,f,c
  5770  000D4C                     u1364:
  5771  000D4C  2E2A               	decfsz	??_Api_ExecuteNativeMethod,f,c
  5772  000D4E  D7FC               	goto	u1365
  5773  000D50  502B               	movf	??_Api_ExecuteNativeMethod+1,w,c
  5774  000D52  EC7B  F00B         	call	_Api_PortRegistry_SetPin
  5775                           
  5776                           ;API.c: 41: break;
  5777  000D56  D019               	goto	l2360
  5778  000D58                     l2358:
  5779  000D58  502C               	movf	Api_ExecuteNativeMethod@id,w,c
  5780                           
  5781                           ; Switch size 1, requested type "space"
  5782                           ; Number of cases is 8, Range of values is 0 to 10
  5783                           ; switch strategies available:
  5784                           ; Name         Instructions Cycles
  5785                           ; simple_byte           25    13 (average)
  5786                           ;	Chosen strategy is simple_byte
  5787  000D5A  0A00               	xorlw	0	; case 0
  5788  000D5C  B4D8               	btfsc	status,2,c
  5789  000D5E  D015               	goto	l2360
  5790  000D60  0A01               	xorlw	1	; case 1
  5791  000D62  B4D8               	btfsc	status,2,c
  5792  000D64  D012               	goto	l2360
  5793  000D66  0A03               	xorlw	3	; case 2
  5794  000D68  B4D8               	btfsc	status,2,c
  5795  000D6A  D7AB               	goto	l2344
  5796  000D6C  0A01               	xorlw	1	; case 3
  5797  000D6E  B4D8               	btfsc	status,2,c
  5798  000D70  D7AF               	goto	l2346
  5799  000D72  0A05               	xorlw	5	; case 6
  5800  000D74  B4D8               	btfsc	status,2,c
  5801  000D76  D7B0               	goto	l2348
  5802  000D78  0A01               	xorlw	1	; case 7
  5803  000D7A  B4D8               	btfsc	status,2,c
  5804  000D7C  D7BD               	goto	l2350
  5805  000D7E  0A0E               	xorlw	14	; case 9
  5806  000D80  B4D8               	btfsc	status,2,c
  5807  000D82  D7CA               	goto	l2352
  5808  000D84  0A03               	xorlw	3	; case 10
  5809  000D86  B4D8               	btfsc	status,2,c
  5810  000D88  D7D7               	goto	l2354
  5811  000D8A                     l2360:
  5812                           
  5813                           ;API.c: 44: (*(++Stack_CurrentPointer) = value);
  5814  000D8A  0E02               	movlw	2
  5815  000D8C  2666               	addwf	_Stack_CurrentPointer,f,c
  5816  000D8E  0E00               	movlw	0
  5817  000D90  2267               	addwfc	_Stack_CurrentPointer+1,f,c
  5818  000D92  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  5819  000D96  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  5820  000D9A  C02D  FFDE         	movff	Api_ExecuteNativeMethod@value,postinc2
  5821  000D9E  C02E  FFDD         	movff	Api_ExecuteNativeMethod@value+1,postdec2
  5822  000DA2  0012               	return	
  5823  000DA4                     __end_of_Api_ExecuteNativeMethod:
  5824                           	opt stack 0
  5825                           tblptru	equ	0xFF8
  5826                           tblptrh	equ	0xFF7
  5827                           tblptrl	equ	0xFF6
  5828                           tablat	equ	0xFF5
  5829                           prodh	equ	0xFF4
  5830                           prodl	equ	0xFF3
  5831                           intcon	equ	0xFF2
  5832                           postinc0	equ	0xFEE
  5833                           wreg	equ	0xFE8
  5834                           indf1	equ	0xFE7
  5835                           postinc1	equ	0xFE6
  5836                           postdec1	equ	0xFE5
  5837                           fsr1h	equ	0xFE2
  5838                           fsr1l	equ	0xFE1
  5839                           indf2	equ	0xFDF
  5840                           postinc2	equ	0xFDE
  5841                           postdec2	equ	0xFDD
  5842                           fsr2h	equ	0xFDA
  5843                           fsr2l	equ	0xFD9
  5844                           status	equ	0xFD8
  5845                           
  5846 ;; *************** function _Api_PortRegistry_SetPin *****************
  5847 ;; Defined at:
  5848 ;;		line 26 in file "src/API/PortRegistry/APIPortRegistry.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;  pins            1    wreg     unsigned char 
  5851 ;;  type            1   15[COMRAM] unsigned char 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;  pins            1   16[COMRAM] unsigned char 
  5854 ;; Return value:  Size  Location     Type
  5855 ;;		None               void
  5856 ;; Registers used:
  5857 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5863 ;;      Params:         1       0       0       0       0       0       0
  5864 ;;      Locals:         1       0       0       0       0       0       0
  5865 ;;      Temps:          0       0       0       0       0       0       0
  5866 ;;      Totals:         2       0       0       0       0       0       0
  5867 ;;Total ram usage:        2 bytes
  5868 ;; Hardware stack levels used:    1
  5869 ;; Hardware stack levels required when called:    2
  5870 ;; This function calls:
  5871 ;;		Nothing
  5872 ;; This function is called by:
  5873 ;;		_Api_ExecuteNativeMethod
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           	psect	text21
  5878  0016F6                     __ptext21:
  5879                           	opt stack 0
  5880  0016F6                     _Api_PortRegistry_SetPin:
  5881                           	opt stack 25
  5882                           
  5883                           ;incstack = 0
  5884                           ;Api_PortRegistry_SetPin@pins stored from wreg
  5885  0016F6  6E11               	movwf	Api_PortRegistry_SetPin@pins,c
  5886                           
  5887                           ;APIPortRegistry.c: 28: switch (type) {
  5888  0016F8  D01A               	goto	l2276
  5889  0016FA                     l2262:
  5890                           
  5891                           ;APIPortRegistry.c: 30: pins = ~pins;
  5892  0016FA  1E11               	comf	Api_PortRegistry_SetPin@pins,f,c
  5893                           
  5894                           ;APIPortRegistry.c: 31: (*Api_PortRegistry_Port) &= pins;
  5895  0016FC  C05E  FFD9         	movff	_Api_PortRegistry_Port,fsr2l
  5896  001700  C05F  FFDA         	movff	_Api_PortRegistry_Port+1,fsr2h
  5897  001704  D005               	goto	L13
  5898  001706                     l2266:
  5899                           
  5900                           ;APIPortRegistry.c: 34: pins = ~pins;
  5901  001706  1E11               	comf	Api_PortRegistry_SetPin@pins,f,c
  5902                           
  5903                           ;APIPortRegistry.c: 35: (*Api_PortRegistry_Tris) &= pins;
  5904  001708  C060  FFD9         	movff	_Api_PortRegistry_Tris,fsr2l
  5905  00170C  C061  FFDA         	movff	_Api_PortRegistry_Tris+1,fsr2h
  5906  001710                     L13:
  5907  001710  5011               	movf	Api_PortRegistry_SetPin@pins,w,c
  5908  001712  16DF               	andwf	indf2,f,c
  5909                           
  5910                           ;APIPortRegistry.c: 36: break;
  5911  001714  D019               	goto	l51
  5912  001716                     l2270:
  5913                           
  5914                           ;APIPortRegistry.c: 38: (*Api_PortRegistry_Port) |= pins;
  5915  001716  C05E  FFD9         	movff	_Api_PortRegistry_Port,fsr2l
  5916  00171A  C05F  FFDA         	movff	_Api_PortRegistry_Port+1,fsr2h
  5917  00171E  D004               	goto	L14
  5918  001720                     l2272:
  5919                           
  5920                           ;APIPortRegistry.c: 41: (*Api_PortRegistry_Tris) |= pins;
  5921  001720  C060  FFD9         	movff	_Api_PortRegistry_Tris,fsr2l
  5922  001724  C061  FFDA         	movff	_Api_PortRegistry_Tris+1,fsr2h
  5923  001728                     L14:
  5924  001728  5011               	movf	Api_PortRegistry_SetPin@pins,w,c
  5925  00172A  12DF               	iorwf	indf2,f,c
  5926                           
  5927                           ;APIPortRegistry.c: 42: break;
  5928  00172C  D00D               	goto	l51
  5929  00172E                     l2276:
  5930  00172E  5010               	movf	Api_PortRegistry_SetPin@type,w,c
  5931                           
  5932                           ; Switch size 1, requested type "space"
  5933                           ; Number of cases is 4, Range of values is 0 to 3
  5934                           ; switch strategies available:
  5935                           ; Name         Instructions Cycles
  5936                           ; simple_byte           13     7 (average)
  5937                           ;	Chosen strategy is simple_byte
  5938  001730  0A00               	xorlw	0	; case 0
  5939  001732  B4D8               	btfsc	status,2,c
  5940  001734  D7E2               	goto	l2262
  5941  001736  0A01               	xorlw	1	; case 1
  5942  001738  B4D8               	btfsc	status,2,c
  5943  00173A  D7ED               	goto	l2270
  5944  00173C  0A03               	xorlw	3	; case 2
  5945  00173E  B4D8               	btfsc	status,2,c
  5946  001740  D7E2               	goto	l2266
  5947  001742  0A01               	xorlw	1	; case 3
  5948  001744  B4D8               	btfsc	status,2,c
  5949  001746  D7EC               	goto	l2272
  5950  001748                     l51:
  5951  001748  0012               	return	
  5952  00174A                     __end_of_Api_PortRegistry_SetPin:
  5953                           	opt stack 0
  5954                           tblptru	equ	0xFF8
  5955                           tblptrh	equ	0xFF7
  5956                           tblptrl	equ	0xFF6
  5957                           tablat	equ	0xFF5
  5958                           prodh	equ	0xFF4
  5959                           prodl	equ	0xFF3
  5960                           intcon	equ	0xFF2
  5961                           postinc0	equ	0xFEE
  5962                           wreg	equ	0xFE8
  5963                           indf1	equ	0xFE7
  5964                           postinc1	equ	0xFE6
  5965                           postdec1	equ	0xFE5
  5966                           fsr1h	equ	0xFE2
  5967                           fsr1l	equ	0xFE1
  5968                           indf2	equ	0xFDF
  5969                           postinc2	equ	0xFDE
  5970                           postdec2	equ	0xFDD
  5971                           fsr2h	equ	0xFDA
  5972                           fsr2l	equ	0xFD9
  5973                           status	equ	0xFD8
  5974                           
  5975 ;; *************** function _Api_PortRegistry_GetPortRegistry *****************
  5976 ;; Defined at:
  5977 ;;		line 8 in file "src/API/PortRegistry/APIPortRegistry.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;  port            1    wreg     unsigned char 
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;  port            1   15[COMRAM] unsigned char 
  5982 ;; Return value:  Size  Location     Type
  5983 ;;		None               void
  5984 ;; Registers used:
  5985 ;;		wreg, status,2, status,0
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5991 ;;      Params:         0       0       0       0       0       0       0
  5992 ;;      Locals:         1       0       0       0       0       0       0
  5993 ;;      Temps:          0       0       0       0       0       0       0
  5994 ;;      Totals:         1       0       0       0       0       0       0
  5995 ;;Total ram usage:        1 bytes
  5996 ;; Hardware stack levels used:    1
  5997 ;; Hardware stack levels required when called:    2
  5998 ;; This function calls:
  5999 ;;		Nothing
  6000 ;; This function is called by:
  6001 ;;		_Api_ExecuteNativeMethod
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text22
  6006  00179C                     __ptext22:
  6007                           	opt stack 0
  6008  00179C                     _Api_PortRegistry_GetPortRegistry:
  6009                           	opt stack 25
  6010                           
  6011                           ;incstack = 0
  6012                           ;Api_PortRegistry_GetPortRegistry@port stored from wreg
  6013  00179C  6E10               	movwf	Api_PortRegistry_GetPortRegistry@port,c
  6014                           
  6015                           ;APIPortRegistry.c: 10: switch (port) {
  6016  00179E  D019               	goto	l2258
  6017  0017A0                     l2250:
  6018                           
  6019                           ;APIPortRegistry.c: 12: Api_PortRegistry_Port = (uint8_t *) &PORTA;
  6020  0017A0  0E0F               	movlw	15	;volatile
  6021  0017A2  6E5F               	movwf	_Api_PortRegistry_Port+1,c
  6022  0017A4  0E80               	movlw	128	;volatile
  6023  0017A6  6E5E               	movwf	_Api_PortRegistry_Port,c
  6024                           
  6025                           ;APIPortRegistry.c: 13: Api_PortRegistry_Tris = (uint8_t *) &TRISA;
  6026  0017A8  0E0F               	movlw	15	;volatile
  6027  0017AA  6E61               	movwf	_Api_PortRegistry_Tris+1,c
  6028  0017AC  0E92               	movlw	146	;volatile
  6029  0017AE  D00F               	goto	L16
  6030  0017B0                     l2252:
  6031                           
  6032                           ;APIPortRegistry.c: 16: Api_PortRegistry_Port = (uint8_t *) &PORTB;
  6033  0017B0  0E0F               	movlw	15	;volatile
  6034  0017B2  6E5F               	movwf	_Api_PortRegistry_Port+1,c
  6035  0017B4  0E81               	movlw	129	;volatile
  6036  0017B6  6E5E               	movwf	_Api_PortRegistry_Port,c
  6037                           
  6038                           ;APIPortRegistry.c: 17: Api_PortRegistry_Tris = (uint8_t *) &TRISB;
  6039  0017B8  0E0F               	movlw	15	;volatile
  6040  0017BA  6E61               	movwf	_Api_PortRegistry_Tris+1,c
  6041  0017BC  0E93               	movlw	147	;volatile
  6042  0017BE  D007               	goto	L16
  6043  0017C0                     l2254:
  6044                           
  6045                           ;APIPortRegistry.c: 20: Api_PortRegistry_Port = (uint8_t *) &PORTC;
  6046  0017C0  0E0F               	movlw	15	;volatile
  6047  0017C2  6E5F               	movwf	_Api_PortRegistry_Port+1,c
  6048  0017C4  0E82               	movlw	130	;volatile
  6049  0017C6  6E5E               	movwf	_Api_PortRegistry_Port,c
  6050                           
  6051                           ;APIPortRegistry.c: 21: Api_PortRegistry_Tris = (uint8_t *) &TRISC;
  6052  0017C8  0E0F               	movlw	15	;volatile
  6053  0017CA  6E61               	movwf	_Api_PortRegistry_Tris+1,c
  6054  0017CC  0E94               	movlw	148	;volatile
  6055  0017CE                     L16:
  6056  0017CE  6E60               	movwf	_Api_PortRegistry_Tris,c
  6057                           
  6058                           ;APIPortRegistry.c: 22: break;
  6059  0017D0  D00A               	goto	l42
  6060  0017D2                     l2258:
  6061  0017D2  5010               	movf	Api_PortRegistry_GetPortRegistry@port,w,c
  6062                           
  6063                           ; Switch size 1, requested type "space"
  6064                           ; Number of cases is 3, Range of values is 0 to 2
  6065                           ; switch strategies available:
  6066                           ; Name         Instructions Cycles
  6067                           ; simple_byte           10     6 (average)
  6068                           ;	Chosen strategy is simple_byte
  6069  0017D4  0A00               	xorlw	0	; case 0
  6070  0017D6  B4D8               	btfsc	status,2,c
  6071  0017D8  D7E3               	goto	l2250
  6072  0017DA  0A01               	xorlw	1	; case 1
  6073  0017DC  B4D8               	btfsc	status,2,c
  6074  0017DE  D7E8               	goto	l2252
  6075  0017E0  0A03               	xorlw	3	; case 2
  6076  0017E2  B4D8               	btfsc	status,2,c
  6077  0017E4  D7ED               	goto	l2254
  6078  0017E6                     l42:
  6079  0017E6  0012               	return	
  6080  0017E8                     __end_of_Api_PortRegistry_GetPortRegistry:
  6081                           	opt stack 0
  6082                           tblptru	equ	0xFF8
  6083                           tblptrh	equ	0xFF7
  6084                           tblptrl	equ	0xFF6
  6085                           tablat	equ	0xFF5
  6086                           prodh	equ	0xFF4
  6087                           prodl	equ	0xFF3
  6088                           intcon	equ	0xFF2
  6089                           postinc0	equ	0xFEE
  6090                           wreg	equ	0xFE8
  6091                           indf1	equ	0xFE7
  6092                           postinc1	equ	0xFE6
  6093                           postdec1	equ	0xFE5
  6094                           fsr1h	equ	0xFE2
  6095                           fsr1l	equ	0xFE1
  6096                           indf2	equ	0xFDF
  6097                           postinc2	equ	0xFDE
  6098                           postdec2	equ	0xFDD
  6099                           fsr2h	equ	0xFDA
  6100                           fsr2l	equ	0xFD9
  6101                           status	equ	0xFD8
  6102                           
  6103 ;; *************** function _API_MicroApplication_Sleep *****************
  6104 ;; Defined at:
  6105 ;;		line 5 in file "src/API/MicroApplication/APIMicroApplication.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;  value           2   35[COMRAM] unsigned short 
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;  counter         4   37[COMRAM] unsigned long 
  6110 ;; Return value:  Size  Location     Type
  6111 ;;		None               void
  6112 ;; Registers used:
  6113 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6119 ;;      Params:         2       0       0       0       0       0       0
  6120 ;;      Locals:         4       0       0       0       0       0       0
  6121 ;;      Temps:          0       0       0       0       0       0       0
  6122 ;;      Totals:         6       0       0       0       0       0       0
  6123 ;;Total ram usage:        6 bytes
  6124 ;; Hardware stack levels used:    1
  6125 ;; Hardware stack levels required when called:    3
  6126 ;; This function calls:
  6127 ;;		_Timer_T0_Init
  6128 ;;		___aldiv
  6129 ;;		___wmul
  6130 ;; This function is called by:
  6131 ;;		_Api_ExecuteNativeMethod
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           	psect	text23
  6136  001400                     __ptext23:
  6137                           	opt stack 0
  6138  001400                     _API_MicroApplication_Sleep:
  6139                           	opt stack 24
  6140                           
  6141                           ;APIMicroApplication.c: 7: uint32_t counter = ((value * 1000) / ((256 * 1000000) / (2000
      +                          0000 / 4)));
  6142                           
  6143                           ;incstack = 0
  6144  001400  C024  F010         	movff	API_MicroApplication_Sleep@value,___wmul@multiplier
  6145  001404  C025  F011         	movff	API_MicroApplication_Sleep@value+1,___wmul@multiplier+1
  6146  001408  0E03               	movlw	3
  6147  00140A  6E13               	movwf	___wmul@multiplicand+1,c
  6148  00140C  0EE8               	movlw	232
  6149  00140E  6E12               	movwf	___wmul@multiplicand,c
  6150  001410  ECC2  F00D         	call	___wmul	;wreg free
  6151  001414  C010  F016         	movff	?___wmul,___aldiv@dividend
  6152  001418  C011  F017         	movff	?___wmul+1,___aldiv@dividend+1
  6153  00141C  6A18               	clrf	___aldiv@dividend+2,c
  6154  00141E  6A19               	clrf	___aldiv@dividend+3,c
  6155  001420  0E33               	movlw	51
  6156  001422  6E1A               	movwf	___aldiv@divisor,c
  6157  001424  0E00               	movlw	0
  6158  001426  6E1B               	movwf	___aldiv@divisor+1,c
  6159  001428  0E00               	movlw	0
  6160  00142A  6E1C               	movwf	___aldiv@divisor+2,c
  6161  00142C  0E00               	movlw	0
  6162  00142E  6E1D               	movwf	___aldiv@divisor+3,c
  6163  001430  ECD2  F006         	call	___aldiv	;wreg free
  6164  001434  C016  F026         	movff	?___aldiv,API_MicroApplication_Sleep@counter
  6165  001438  C017  F027         	movff	?___aldiv+1,API_MicroApplication_Sleep@counter+1
  6166  00143C  C018  F028         	movff	?___aldiv+2,API_MicroApplication_Sleep@counter+2
  6167  001440  C019  F029         	movff	?___aldiv+3,API_MicroApplication_Sleep@counter+3
  6168                           
  6169                           ;APIMicroApplication.c: 9: Timer_T0_Init(0x00);
  6170  001444  0E00               	movlw	0
  6171  001446  EC09  F00E         	call	_Timer_T0_Init
  6172  00144A                     l2238:
  6173                           
  6174                           ;APIMicroApplication.c: 12: (TMR0ON = 1);
  6175  00144A  8ED5               	bsf	4053,7,c	;volatile
  6176  00144C                     l12:
  6177  00144C  A4F2               	btfss	intcon,2,c	;volatile
  6178  00144E  D7FE               	goto	l12
  6179                           
  6180                           ;APIMicroApplication.c: 15: TMR0IF = 0;
  6181  001450  94F2               	bcf	intcon,2,c	;volatile
  6182                           
  6183                           ;APIMicroApplication.c: 16: counter--;
  6184  001452  0626               	decf	API_MicroApplication_Sleep@counter,f,c
  6185  001454  0E00               	movlw	0
  6186  001456  5A27               	subwfb	API_MicroApplication_Sleep@counter+1,f,c
  6187  001458  5A28               	subwfb	API_MicroApplication_Sleep@counter+2,f,c
  6188  00145A  5A29               	subwfb	API_MicroApplication_Sleep@counter+3,f,c
  6189                           
  6190                           ;APIMicroApplication.c: 18: if (0x00 >= counter) {
  6191  00145C  5029               	movf	API_MicroApplication_Sleep@counter+3,w,c
  6192  00145E  1026               	iorwf	API_MicroApplication_Sleep@counter,w,c
  6193  001460  1027               	iorwf	API_MicroApplication_Sleep@counter+1,w,c
  6194  001462  1028               	iorwf	API_MicroApplication_Sleep@counter+2,w,c
  6195  001464  A4D8               	btfss	status,2,c
  6196  001466  D7F1               	goto	l2238
  6197                           
  6198                           ;APIMicroApplication.c: 19: TMR0ON = 0; (TMR0 = 0);
  6199  001468  9ED5               	bcf	4053,7,c	;volatile
  6200  00146A  0E00               	movlw	0
  6201  00146C  6ED7               	movwf	4055,c	;volatile
  6202  00146E  0E00               	movlw	0
  6203  001470  6ED6               	movwf	4054,c	;volatile
  6204                           
  6205                           ;APIMicroApplication.c: 20: (TMR0 = 0);
  6206  001472  0E00               	movlw	0
  6207  001474  6ED7               	movwf	4055,c	;volatile
  6208  001476  0E00               	movlw	0
  6209  001478  6ED6               	movwf	4054,c	;volatile
  6210                           
  6211                           ;APIMicroApplication.c: 21: return;
  6212  00147A  0012               	return	
  6213  00147C                     __end_of_API_MicroApplication_Sleep:
  6214                           	opt stack 0
  6215                           tblptru	equ	0xFF8
  6216                           tblptrh	equ	0xFF7
  6217                           tblptrl	equ	0xFF6
  6218                           tablat	equ	0xFF5
  6219                           prodh	equ	0xFF4
  6220                           prodl	equ	0xFF3
  6221                           intcon	equ	0xFF2
  6222                           postinc0	equ	0xFEE
  6223                           wreg	equ	0xFE8
  6224                           indf1	equ	0xFE7
  6225                           postinc1	equ	0xFE6
  6226                           postdec1	equ	0xFE5
  6227                           fsr1h	equ	0xFE2
  6228                           fsr1l	equ	0xFE1
  6229                           indf2	equ	0xFDF
  6230                           postinc2	equ	0xFDE
  6231                           postdec2	equ	0xFDD
  6232                           fsr2h	equ	0xFDA
  6233                           fsr2l	equ	0xFD9
  6234                           status	equ	0xFD8
  6235                           
  6236 ;; *************** function ___wmul *****************
  6237 ;; Defined at:
  6238 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\Umul16.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  multiplier      2   15[COMRAM] unsigned int 
  6241 ;;  multiplicand    2   17[COMRAM] unsigned int 
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;  product         2   19[COMRAM] unsigned int 
  6244 ;; Return value:  Size  Location     Type
  6245 ;;                  2   15[COMRAM] unsigned int 
  6246 ;; Registers used:
  6247 ;;		wreg, status,2, status,0, prodl, prodh
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6253 ;;      Params:         4       0       0       0       0       0       0
  6254 ;;      Locals:         2       0       0       0       0       0       0
  6255 ;;      Temps:          0       0       0       0       0       0       0
  6256 ;;      Totals:         6       0       0       0       0       0       0
  6257 ;;Total ram usage:        6 bytes
  6258 ;; Hardware stack levels used:    1
  6259 ;; Hardware stack levels required when called:    2
  6260 ;; This function calls:
  6261 ;;		Nothing
  6262 ;; This function is called by:
  6263 ;;		_API_MicroApplication_Sleep
  6264 ;;		_Jvm_RunMethod
  6265 ;; This function uses a non-reentrant model
  6266 ;;
  6267                           
  6268                           	psect	text24
  6269  001B84                     __ptext24:
  6270                           	opt stack 0
  6271  001B84                     ___wmul:
  6272                           	opt stack 26
  6273                           
  6274                           ;incstack = 0
  6275  001B84  5010               	movf	___wmul@multiplier,w,c
  6276  001B86  0212               	mulwf	___wmul@multiplicand,c
  6277  001B88  CFF3 F014          	movff	prodl,___wmul@product
  6278  001B8C  CFF4 F015          	movff	prodh,___wmul@product+1
  6279  001B90  5010               	movf	___wmul@multiplier,w,c
  6280  001B92  0213               	mulwf	___wmul@multiplicand+1,c
  6281  001B94  50F3               	movf	prodl,w,c
  6282  001B96  2615               	addwf	___wmul@product+1,f,c
  6283  001B98  5011               	movf	___wmul@multiplier+1,w,c
  6284  001B9A  0212               	mulwf	___wmul@multiplicand,c
  6285  001B9C  50F3               	movf	prodl,w,c
  6286  001B9E  2615               	addwf	___wmul@product+1,f,c
  6287  001BA0  C014  F010         	movff	___wmul@product,?___wmul
  6288  001BA4  C015  F011         	movff	___wmul@product+1,?___wmul+1
  6289  001BA8  0012               	return	
  6290  001BAA                     __end_of___wmul:
  6291                           	opt stack 0
  6292                           tblptru	equ	0xFF8
  6293                           tblptrh	equ	0xFF7
  6294                           tblptrl	equ	0xFF6
  6295                           tablat	equ	0xFF5
  6296                           prodh	equ	0xFF4
  6297                           prodl	equ	0xFF3
  6298                           intcon	equ	0xFF2
  6299                           postinc0	equ	0xFEE
  6300                           wreg	equ	0xFE8
  6301                           indf1	equ	0xFE7
  6302                           postinc1	equ	0xFE6
  6303                           postdec1	equ	0xFE5
  6304                           fsr1h	equ	0xFE2
  6305                           fsr1l	equ	0xFE1
  6306                           indf2	equ	0xFDF
  6307                           postinc2	equ	0xFDE
  6308                           postdec2	equ	0xFDD
  6309                           fsr2h	equ	0xFDA
  6310                           fsr2l	equ	0xFD9
  6311                           status	equ	0xFD8
  6312                           
  6313 ;; *************** function ___aldiv *****************
  6314 ;; Defined at:
  6315 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\aldiv.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;  dividend        4   21[COMRAM] long 
  6318 ;;  divisor         4   25[COMRAM] long 
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;  quotient        4   31[COMRAM] long 
  6321 ;;  sign            1   30[COMRAM] unsigned char 
  6322 ;;  counter         1   29[COMRAM] unsigned char 
  6323 ;; Return value:  Size  Location     Type
  6324 ;;                  4   21[COMRAM] long 
  6325 ;; Registers used:
  6326 ;;		wreg, status,2, status,0
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6332 ;;      Params:         8       0       0       0       0       0       0
  6333 ;;      Locals:         6       0       0       0       0       0       0
  6334 ;;      Temps:          0       0       0       0       0       0       0
  6335 ;;      Totals:        14       0       0       0       0       0       0
  6336 ;;Total ram usage:       14 bytes
  6337 ;; Hardware stack levels used:    1
  6338 ;; Hardware stack levels required when called:    2
  6339 ;; This function calls:
  6340 ;;		Nothing
  6341 ;; This function is called by:
  6342 ;;		_API_MicroApplication_Sleep
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           	psect	text25
  6347  000DA4                     __ptext25:
  6348                           	opt stack 0
  6349  000DA4                     ___aldiv:
  6350                           	opt stack 24
  6351                           
  6352                           ;incstack = 0
  6353  000DA4  0E00               	movlw	0
  6354  000DA6  6E1F               	movwf	___aldiv@sign,c
  6355  000DA8  501D               	movf	___aldiv@divisor+3,w,c
  6356  000DAA  0A80               	xorlw	128
  6357  000DAC  0F80               	addlw	128
  6358  000DAE  E108               	bnz	u1145
  6359  000DB0  0E00               	movlw	0
  6360  000DB2  5C1C               	subwf	___aldiv@divisor+2,w,c
  6361  000DB4  E105               	bnz	u1145
  6362  000DB6  0E00               	movlw	0
  6363  000DB8  5C1B               	subwf	___aldiv@divisor+1,w,c
  6364  000DBA  E102               	bnz	u1145
  6365  000DBC  0E00               	movlw	0
  6366  000DBE  5C1A               	subwf	___aldiv@divisor,w,c
  6367  000DC0                     u1145:
  6368  000DC0  B0D8               	btfsc	status,0,c
  6369  000DC2  D00A               	goto	l2198
  6370  000DC4  1E1D               	comf	___aldiv@divisor+3,f,c
  6371  000DC6  1E1C               	comf	___aldiv@divisor+2,f,c
  6372  000DC8  1E1B               	comf	___aldiv@divisor+1,f,c
  6373  000DCA  6C1A               	negf	___aldiv@divisor,c
  6374  000DCC  0E00               	movlw	0
  6375  000DCE  221B               	addwfc	___aldiv@divisor+1,f,c
  6376  000DD0  221C               	addwfc	___aldiv@divisor+2,f,c
  6377  000DD2  221D               	addwfc	___aldiv@divisor+3,f,c
  6378  000DD4  0E01               	movlw	1
  6379  000DD6  6E1F               	movwf	___aldiv@sign,c
  6380  000DD8                     l2198:
  6381  000DD8  5019               	movf	___aldiv@dividend+3,w,c
  6382  000DDA  0A80               	xorlw	128
  6383  000DDC  0F80               	addlw	128
  6384  000DDE  E108               	bnz	u1155
  6385  000DE0  0E00               	movlw	0
  6386  000DE2  5C18               	subwf	___aldiv@dividend+2,w,c
  6387  000DE4  E105               	bnz	u1155
  6388  000DE6  0E00               	movlw	0
  6389  000DE8  5C17               	subwf	___aldiv@dividend+1,w,c
  6390  000DEA  E102               	bnz	u1155
  6391  000DEC  0E00               	movlw	0
  6392  000DEE  5C16               	subwf	___aldiv@dividend,w,c
  6393  000DF0                     u1155:
  6394  000DF0  B0D8               	btfsc	status,0,c
  6395  000DF2  D00A               	goto	l2204
  6396  000DF4  1E19               	comf	___aldiv@dividend+3,f,c
  6397  000DF6  1E18               	comf	___aldiv@dividend+2,f,c
  6398  000DF8  1E17               	comf	___aldiv@dividend+1,f,c
  6399  000DFA  6C16               	negf	___aldiv@dividend,c
  6400  000DFC  0E00               	movlw	0
  6401  000DFE  2217               	addwfc	___aldiv@dividend+1,f,c
  6402  000E00  2218               	addwfc	___aldiv@dividend+2,f,c
  6403  000E02  2219               	addwfc	___aldiv@dividend+3,f,c
  6404  000E04  0E01               	movlw	1
  6405  000E06  1A1F               	xorwf	___aldiv@sign,f,c
  6406  000E08                     l2204:
  6407  000E08  0E00               	movlw	0
  6408  000E0A  6E20               	movwf	___aldiv@quotient,c
  6409  000E0C  0E00               	movlw	0
  6410  000E0E  6E21               	movwf	___aldiv@quotient+1,c
  6411  000E10  0E00               	movlw	0
  6412  000E12  6E22               	movwf	___aldiv@quotient+2,c
  6413  000E14  0E00               	movlw	0
  6414  000E16  6E23               	movwf	___aldiv@quotient+3,c
  6415  000E18  501D               	movf	___aldiv@divisor+3,w,c
  6416  000E1A  101A               	iorwf	___aldiv@divisor,w,c
  6417  000E1C  101B               	iorwf	___aldiv@divisor+1,w,c
  6418  000E1E  101C               	iorwf	___aldiv@divisor+2,w,c
  6419  000E20  B4D8               	btfsc	status,2,c
  6420  000E22  D02A               	goto	l2226
  6421  000E24  0E01               	movlw	1
  6422  000E26  6E1E               	movwf	___aldiv@counter,c
  6423  000E28  D006               	goto	l2212
  6424  000E2A                     l2210:
  6425  000E2A  90D8               	bcf	status,0,c
  6426  000E2C  361A               	rlcf	___aldiv@divisor,f,c
  6427  000E2E  361B               	rlcf	___aldiv@divisor+1,f,c
  6428  000E30  361C               	rlcf	___aldiv@divisor+2,f,c
  6429  000E32  361D               	rlcf	___aldiv@divisor+3,f,c
  6430  000E34  2A1E               	incf	___aldiv@counter,f,c
  6431  000E36                     l2212:
  6432  000E36  AE1D               	btfss	___aldiv@divisor+3,7,c
  6433  000E38  D7F8               	goto	l2210
  6434  000E3A                     l2214:
  6435  000E3A  90D8               	bcf	status,0,c
  6436  000E3C  3620               	rlcf	___aldiv@quotient,f,c
  6437  000E3E  3621               	rlcf	___aldiv@quotient+1,f,c
  6438  000E40  3622               	rlcf	___aldiv@quotient+2,f,c
  6439  000E42  3623               	rlcf	___aldiv@quotient+3,f,c
  6440  000E44  501A               	movf	___aldiv@divisor,w,c
  6441  000E46  5C16               	subwf	___aldiv@dividend,w,c
  6442  000E48  501B               	movf	___aldiv@divisor+1,w,c
  6443  000E4A  5817               	subwfb	___aldiv@dividend+1,w,c
  6444  000E4C  501C               	movf	___aldiv@divisor+2,w,c
  6445  000E4E  5818               	subwfb	___aldiv@dividend+2,w,c
  6446  000E50  501D               	movf	___aldiv@divisor+3,w,c
  6447  000E52  5819               	subwfb	___aldiv@dividend+3,w,c
  6448  000E54  A0D8               	btfss	status,0,c
  6449  000E56  D009               	goto	l2222
  6450  000E58  501A               	movf	___aldiv@divisor,w,c
  6451  000E5A  5E16               	subwf	___aldiv@dividend,f,c
  6452  000E5C  501B               	movf	___aldiv@divisor+1,w,c
  6453  000E5E  5A17               	subwfb	___aldiv@dividend+1,f,c
  6454  000E60  501C               	movf	___aldiv@divisor+2,w,c
  6455  000E62  5A18               	subwfb	___aldiv@dividend+2,f,c
  6456  000E64  501D               	movf	___aldiv@divisor+3,w,c
  6457  000E66  5A19               	subwfb	___aldiv@dividend+3,f,c
  6458  000E68  8020               	bsf	___aldiv@quotient,0,c
  6459  000E6A                     l2222:
  6460  000E6A  90D8               	bcf	status,0,c
  6461  000E6C  321D               	rrcf	___aldiv@divisor+3,f,c
  6462  000E6E  321C               	rrcf	___aldiv@divisor+2,f,c
  6463  000E70  321B               	rrcf	___aldiv@divisor+1,f,c
  6464  000E72  321A               	rrcf	___aldiv@divisor,f,c
  6465  000E74  2E1E               	decfsz	___aldiv@counter,f,c
  6466  000E76  D7E1               	goto	l2214
  6467  000E78                     l2226:
  6468  000E78  501F               	movf	___aldiv@sign,w,c
  6469  000E7A  B4D8               	btfsc	status,2,c
  6470  000E7C  D008               	goto	l2230
  6471  000E7E  1E23               	comf	___aldiv@quotient+3,f,c
  6472  000E80  1E22               	comf	___aldiv@quotient+2,f,c
  6473  000E82  1E21               	comf	___aldiv@quotient+1,f,c
  6474  000E84  6C20               	negf	___aldiv@quotient,c
  6475  000E86  0E00               	movlw	0
  6476  000E88  2221               	addwfc	___aldiv@quotient+1,f,c
  6477  000E8A  2222               	addwfc	___aldiv@quotient+2,f,c
  6478  000E8C  2223               	addwfc	___aldiv@quotient+3,f,c
  6479  000E8E                     l2230:
  6480  000E8E  C020  F016         	movff	___aldiv@quotient,?___aldiv
  6481  000E92  C021  F017         	movff	___aldiv@quotient+1,?___aldiv+1
  6482  000E96  C022  F018         	movff	___aldiv@quotient+2,?___aldiv+2
  6483  000E9A  C023  F019         	movff	___aldiv@quotient+3,?___aldiv+3
  6484  000E9E  0012               	return	
  6485  000EA0                     __end_of___aldiv:
  6486                           	opt stack 0
  6487                           tblptru	equ	0xFF8
  6488                           tblptrh	equ	0xFF7
  6489                           tblptrl	equ	0xFF6
  6490                           tablat	equ	0xFF5
  6491                           prodh	equ	0xFF4
  6492                           prodl	equ	0xFF3
  6493                           intcon	equ	0xFF2
  6494                           postinc0	equ	0xFEE
  6495                           wreg	equ	0xFE8
  6496                           indf1	equ	0xFE7
  6497                           postinc1	equ	0xFE6
  6498                           postdec1	equ	0xFE5
  6499                           fsr1h	equ	0xFE2
  6500                           fsr1l	equ	0xFE1
  6501                           indf2	equ	0xFDF
  6502                           postinc2	equ	0xFDE
  6503                           postdec2	equ	0xFDD
  6504                           fsr2h	equ	0xFDA
  6505                           fsr2l	equ	0xFD9
  6506                           status	equ	0xFD8
  6507                           
  6508 ;; *************** function _Timer_T0_Init *****************
  6509 ;; Defined at:
  6510 ;;		line 7 in file "src/Timer/Timer.c"
  6511 ;; Parameters:    Size  Location     Type
  6512 ;;  interruption    1    wreg     unsigned char 
  6513 ;; Auto vars:     Size  Location     Type
  6514 ;;  interruption    1   15[COMRAM] unsigned char 
  6515 ;; Return value:  Size  Location     Type
  6516 ;;		None               void
  6517 ;; Registers used:
  6518 ;;		wreg, status,2
  6519 ;; Tracked objects:
  6520 ;;		On entry : 0/0
  6521 ;;		On exit  : 0/0
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6524 ;;      Params:         0       0       0       0       0       0       0
  6525 ;;      Locals:         1       0       0       0       0       0       0
  6526 ;;      Temps:          0       0       0       0       0       0       0
  6527 ;;      Totals:         1       0       0       0       0       0       0
  6528 ;;Total ram usage:        1 bytes
  6529 ;; Hardware stack levels used:    1
  6530 ;; Hardware stack levels required when called:    2
  6531 ;; This function calls:
  6532 ;;		Nothing
  6533 ;; This function is called by:
  6534 ;;		_API_MicroApplication_Sleep
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537                           
  6538                           	psect	text26
  6539  001C12                     __ptext26:
  6540                           	opt stack 0
  6541  001C12                     _Timer_T0_Init:
  6542                           	opt stack 24
  6543                           
  6544                           ;incstack = 0
  6545                           ;Timer_T0_Init@interruption stored from wreg
  6546  001C12  6E10               	movwf	Timer_T0_Init@interruption,c
  6547                           
  6548                           ;Timer.c: 9: if (interruption) {
  6549  001C14  5010               	movf	Timer_T0_Init@interruption,w,c
  6550  001C16  B4D8               	btfsc	status,2,c
  6551  001C18  D003               	goto	l534
  6552                           
  6553                           ;Timer.c: 10: INTCON = 0xC0;
  6554  001C1A  0EC0               	movlw	192
  6555  001C1C  6EF2               	movwf	intcon,c	;volatile
  6556                           
  6557                           ;Timer.c: 11: TMR0IE = 1;
  6558  001C1E  8AF2               	bsf	intcon,5,c	;volatile
  6559  001C20                     l534:
  6560                           
  6561                           ;Timer.c: 12: }
  6562                           ;Timer.c: 14: T0CON = 0x48;
  6563  001C20  0E48               	movlw	72
  6564  001C22  6ED5               	movwf	4053,c	;volatile
  6565  001C24  0012               	return	
  6566  001C26                     __end_of_Timer_T0_Init:
  6567                           	opt stack 0
  6568                           tblptru	equ	0xFF8
  6569                           tblptrh	equ	0xFF7
  6570                           tblptrl	equ	0xFF6
  6571                           tablat	equ	0xFF5
  6572                           prodh	equ	0xFF4
  6573                           prodl	equ	0xFF3
  6574                           intcon	equ	0xFF2
  6575                           postinc0	equ	0xFEE
  6576                           wreg	equ	0xFE8
  6577                           indf1	equ	0xFE7
  6578                           postinc1	equ	0xFE6
  6579                           postdec1	equ	0xFE5
  6580                           fsr1h	equ	0xFE2
  6581                           fsr1l	equ	0xFE1
  6582                           indf2	equ	0xFDF
  6583                           postinc2	equ	0xFDE
  6584                           postdec2	equ	0xFDD
  6585                           fsr2h	equ	0xFDA
  6586                           fsr2l	equ	0xFD9
  6587                           status	equ	0xFD8
  6588                           
  6589 ;; *************** function _Jvm_Init *****************
  6590 ;; Defined at:
  6591 ;;		line 23 in file "src/JVM/JVM.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;		None
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;		None
  6596 ;; Return value:  Size  Location     Type
  6597 ;;		None               void
  6598 ;; Registers used:
  6599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6600 ;; Tracked objects:
  6601 ;;		On entry : 0/0
  6602 ;;		On exit  : 0/0
  6603 ;;		Unchanged: 0/0
  6604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6605 ;;      Params:         0       0       0       0       0       0       0
  6606 ;;      Locals:         0       0       0       0       0       0       0
  6607 ;;      Temps:          0       0       0       0       0       0       0
  6608 ;;      Totals:         0       0       0       0       0       0       0
  6609 ;;Total ram usage:        0 bytes
  6610 ;; Hardware stack levels used:    1
  6611 ;; Hardware stack levels required when called:    6
  6612 ;; This function calls:
  6613 ;;		_Heap_Init
  6614 ;;		_Stack_Init
  6615 ;; This function is called by:
  6616 ;;		_main
  6617 ;; This function uses a non-reentrant model
  6618 ;;
  6619                           
  6620                           	psect	text27
  6621  001BCE                     __ptext27:
  6622                           	opt stack 0
  6623  001BCE                     _Jvm_Init:
  6624                           	opt stack 24
  6625                           
  6626                           ;JVM.c: 25: Heap_Init();
  6627                           
  6628                           ;incstack = 0
  6629  001BCE  EC9A  F00D         	call	_Heap_Init	;wreg free
  6630                           
  6631                           ;JVM.c: 26: Stack_Init();
  6632  001BD2  EC7A  F00A         	call	_Stack_Init	;wreg free
  6633                           
  6634                           ;JVM.c: 27: (*(++Stack_CurrentPointer) = 0);
  6635  001BD6  0E02               	movlw	2
  6636  001BD8  2666               	addwf	_Stack_CurrentPointer,f,c
  6637  001BDA  0E00               	movlw	0
  6638  001BDC  2267               	addwfc	_Stack_CurrentPointer+1,f,c
  6639  001BDE  C066  FFD9         	movff	_Stack_CurrentPointer,fsr2l
  6640  001BE2  C067  FFDA         	movff	_Stack_CurrentPointer+1,fsr2h
  6641  001BE6  0E00               	movlw	0
  6642  001BE8  6EDE               	movwf	postinc2,c
  6643  001BEA  0E00               	movlw	0
  6644  001BEC  6EDD               	movwf	postdec2,c
  6645  001BEE  0012               	return	
  6646  001BF0                     __end_of_Jvm_Init:
  6647                           	opt stack 0
  6648                           tblptru	equ	0xFF8
  6649                           tblptrh	equ	0xFF7
  6650                           tblptrl	equ	0xFF6
  6651                           tablat	equ	0xFF5
  6652                           prodh	equ	0xFF4
  6653                           prodl	equ	0xFF3
  6654                           intcon	equ	0xFF2
  6655                           postinc0	equ	0xFEE
  6656                           wreg	equ	0xFE8
  6657                           indf1	equ	0xFE7
  6658                           postinc1	equ	0xFE6
  6659                           postdec1	equ	0xFE5
  6660                           fsr1h	equ	0xFE2
  6661                           fsr1l	equ	0xFE1
  6662                           indf2	equ	0xFDF
  6663                           postinc2	equ	0xFDE
  6664                           postdec2	equ	0xFDD
  6665                           fsr2h	equ	0xFDA
  6666                           fsr2l	equ	0xFD9
  6667                           status	equ	0xFD8
  6668                           
  6669 ;; *************** function _Stack_Init *****************
  6670 ;; Defined at:
  6671 ;;		line 11 in file "src/JVM/Stack.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;		None
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;		None
  6676 ;; Return value:  Size  Location     Type
  6677 ;;		None               void
  6678 ;; Registers used:
  6679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6685 ;;      Params:         0       0       0       0       0       0       0
  6686 ;;      Locals:         0       0       0       0       0       0       0
  6687 ;;      Temps:          4       0       0       0       0       0       0
  6688 ;;      Totals:         4       0       0       0       0       0       0
  6689 ;;Total ram usage:        4 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; Hardware stack levels required when called:    5
  6692 ;; This function calls:
  6693 ;;		_Heap_GetBytes
  6694 ;;		_Mm_GetU08
  6695 ;; This function is called by:
  6696 ;;		_Jvm_Init
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700                           	psect	text28
  6701  0014F4                     __ptext28:
  6702                           	opt stack 0
  6703  0014F4                     _Stack_Init:
  6704                           	opt stack 24
  6705                           
  6706                           ;Stack.c: 13: Stack_Pointer = (uint16_t *) Heap;
  6707                           
  6708                           ;incstack = 0
  6709  0014F4  0E00               	movlw	high _Heap
  6710  0014F6  6E69               	movwf	_Stack_Pointer+1,c
  6711  0014F8  0ED7               	movlw	low _Heap
  6712  0014FA  6E68               	movwf	_Stack_Pointer,c
  6713                           
  6714                           ;Stack.c: 14: Stack_CurrentPointer = Stack_Pointer - 1;
  6715  0014FC  0EFE               	movlw	254
  6716  0014FE  2468               	addwf	_Stack_Pointer,w,c
  6717  001500  6E66               	movwf	_Stack_CurrentPointer,c
  6718  001502  0EFF               	movlw	255
  6719  001504  2069               	addwfc	_Stack_Pointer+1,w,c
  6720  001506  6E67               	movwf	_Stack_CurrentPointer+1,c
  6721                           
  6722                           ;Stack.c: 16: Heap_GetBytes(sizeof(uint16_t) *
  6723                           ;Stack.c: 17: ((Mm_GetU08((uint32_t) &((javaclass_header_t *) JavaClass_Data)->fields)) 
      +                          + 1));
  6724  001508  0E00               	movlw	low (_JavaClass_Data+5)
  6725  00150A  6E31               	movwf	??_Stack_Init& (0+255),c
  6726  00150C  0E7C               	movlw	high (_JavaClass_Data+5)
  6727  00150E  6E32               	movwf	(??_Stack_Init+1)& (0+255),c
  6728  001510  C031  F024         	movff	??_Stack_Init,Mm_GetU08@address
  6729  001514  C032  F025         	movff	??_Stack_Init+1,Mm_GetU08@address+1
  6730  001518  6A26               	clrf	Mm_GetU08@address+2,c
  6731  00151A  6A27               	clrf	Mm_GetU08@address+3,c
  6732  00151C  EC3F  F00D         	call	_Mm_GetU08	;wreg free
  6733  001520  6E33               	movwf	(??_Stack_Init+2)& (0+255),c
  6734  001522  6A34               	clrf	(??_Stack_Init+3)& (0+255),c
  6735  001524  90D8               	bcf	status,0,c
  6736  001526  3633               	rlcf	??_Stack_Init+2,f,c
  6737  001528  3634               	rlcf	??_Stack_Init+3,f,c
  6738  00152A  0E02               	movlw	2
  6739  00152C  2433               	addwf	??_Stack_Init+2,w,c
  6740  00152E  6E29               	movwf	Heap_GetBytes@bytes,c
  6741  001530  0E00               	movlw	0
  6742  001532  2034               	addwfc	??_Stack_Init+3,w,c
  6743  001534  6E2A               	movwf	Heap_GetBytes@bytes+1,c
  6744  001536  EC8C  F008         	call	_Heap_GetBytes	;wreg free
  6745                           
  6746                           ;Stack.c: 19: Stack_CurrentPointer += (Mm_GetU08((uint32_t) &((javaclass_header_t *) Jav
      +                          aClass_Data)->fields));
  6747  00153A  0E00               	movlw	low (_JavaClass_Data+5)
  6748  00153C  6E31               	movwf	??_Stack_Init& (0+255),c
  6749  00153E  0E7C               	movlw	high (_JavaClass_Data+5)
  6750  001540  6E32               	movwf	(??_Stack_Init+1)& (0+255),c
  6751  001542  C031  F024         	movff	??_Stack_Init,Mm_GetU08@address
  6752  001546  C032  F025         	movff	??_Stack_Init+1,Mm_GetU08@address+1
  6753  00154A  6A26               	clrf	Mm_GetU08@address+2,c
  6754  00154C  6A27               	clrf	Mm_GetU08@address+3,c
  6755  00154E  EC3F  F00D         	call	_Mm_GetU08	;wreg free
  6756  001552  6E33               	movwf	(??_Stack_Init+2)& (0+255),c
  6757  001554  5033               	movf	??_Stack_Init+2,w,c
  6758  001556  0D02               	mullw	2
  6759  001558  50F3               	movf	prodl,w,c
  6760  00155A  2666               	addwf	_Stack_CurrentPointer,f,c
  6761  00155C  50F4               	movf	prodh,w,c
  6762  00155E  2267               	addwfc	_Stack_CurrentPointer+1,f,c
  6763  001560  0012               	return	
  6764  001562                     __end_of_Stack_Init:
  6765                           	opt stack 0
  6766                           tblptru	equ	0xFF8
  6767                           tblptrh	equ	0xFF7
  6768                           tblptrl	equ	0xFF6
  6769                           tablat	equ	0xFF5
  6770                           prodh	equ	0xFF4
  6771                           prodl	equ	0xFF3
  6772                           intcon	equ	0xFF2
  6773                           postinc0	equ	0xFEE
  6774                           wreg	equ	0xFE8
  6775                           indf1	equ	0xFE7
  6776                           postinc1	equ	0xFE6
  6777                           postdec1	equ	0xFE5
  6778                           fsr1h	equ	0xFE2
  6779                           fsr1l	equ	0xFE1
  6780                           indf2	equ	0xFDF
  6781                           postinc2	equ	0xFDE
  6782                           postdec2	equ	0xFDD
  6783                           fsr2h	equ	0xFDA
  6784                           fsr2l	equ	0xFD9
  6785                           status	equ	0xFD8
  6786                           
  6787 ;; *************** function _Heap_GetBytes *****************
  6788 ;; Defined at:
  6789 ;;		line 70 in file "src/JVM/Heap.c"
  6790 ;; Parameters:    Size  Location     Type
  6791 ;;  bytes           2   40[COMRAM] unsigned short 
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;  heap            2   46[COMRAM] PTR struct .
  6794 ;;		 -> Heap(1024), 
  6795 ;;  size            2   44[COMRAM] unsigned short 
  6796 ;; Return value:  Size  Location     Type
  6797 ;;		None               void
  6798 ;; Registers used:
  6799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6800 ;; Tracked objects:
  6801 ;;		On entry : 0/0
  6802 ;;		On exit  : 0/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6805 ;;      Params:         2       0       0       0       0       0       0
  6806 ;;      Locals:         4       0       0       0       0       0       0
  6807 ;;      Temps:          2       0       0       0       0       0       0
  6808 ;;      Totals:         8       0       0       0       0       0       0
  6809 ;;Total ram usage:        8 bytes
  6810 ;; Hardware stack levels used:    1
  6811 ;; Hardware stack levels required when called:    4
  6812 ;; This function calls:
  6813 ;;		_Heap_GarbageCollect
  6814 ;; This function is called by:
  6815 ;;		_Jvm_RunMethod
  6816 ;;		_Stack_Init
  6817 ;; This function uses a non-reentrant model
  6818 ;;
  6819                           
  6820                           	psect	text29
  6821  001118                     __ptext29:
  6822                           	opt stack 0
  6823  001118                     _Heap_GetBytes:
  6824                           	opt stack 24
  6825                           
  6826                           ;Heap.c: 72: heap_t *heap = (heap_t *) &Heap[Heap_BaseOffset];
  6827                           
  6828                           ;incstack = 0
  6829  001118  0ED7               	movlw	low _Heap
  6830  00111A  2462               	addwf	_Heap_BaseOffset,w,c
  6831  00111C  6E2F               	movwf	Heap_GetBytes@heap,c
  6832  00111E  0E00               	movlw	high _Heap
  6833  001120  2063               	addwfc	_Heap_BaseOffset+1,w,c
  6834  001122  6E30               	movwf	Heap_GetBytes@heap+1,c
  6835                           
  6836                           ;Heap.c: 73: uint16_t size = heap->size;
  6837  001124  EE20 F002          	lfsr	2,2
  6838  001128  502F               	movf	Heap_GetBytes@heap,w,c
  6839  00112A  26D9               	addwf	fsr2l,f,c
  6840  00112C  5030               	movf	Heap_GetBytes@heap+1,w,c
  6841  00112E  22DA               	addwfc	fsr2h,f,c
  6842  001130  CFDE F02D          	movff	postinc2,Heap_GetBytes@size
  6843  001134  CFDD F02E          	movff	postdec2,Heap_GetBytes@size+1
  6844                           
  6845                           ;Heap.c: 75: if (size < bytes) {
  6846  001138  5029               	movf	Heap_GetBytes@bytes,w,c
  6847  00113A  5C2D               	subwf	Heap_GetBytes@size,w,c
  6848  00113C  502A               	movf	Heap_GetBytes@bytes+1,w,c
  6849  00113E  582E               	subwfb	Heap_GetBytes@size+1,w,c
  6850  001140  A0D8               	btfss	status,0,c
  6851                           
  6852                           ;Heap.c: 76: Heap_GarbageCollect();
  6853  001142  ECC9  F005         	call	_Heap_GarbageCollect	;wreg free
  6854                           
  6855                           ;Heap.c: 77: }
  6856                           ;Heap.c: 79: size = heap->size;
  6857  001146  EE20 F002          	lfsr	2,2
  6858  00114A  502F               	movf	Heap_GetBytes@heap,w,c
  6859  00114C  26D9               	addwf	fsr2l,f,c
  6860  00114E  5030               	movf	Heap_GetBytes@heap+1,w,c
  6861  001150  22DA               	addwfc	fsr2h,f,c
  6862  001152  CFDE F02D          	movff	postinc2,Heap_GetBytes@size
  6863  001156  CFDD F02E          	movff	postdec2,Heap_GetBytes@size+1
  6864                           
  6865                           ;Heap.c: 81: if ((size < bytes) || (0 != heap->id)) {
  6866  00115A  5029               	movf	Heap_GetBytes@bytes,w,c
  6867  00115C  5C2D               	subwf	Heap_GetBytes@size,w,c
  6868  00115E  502A               	movf	Heap_GetBytes@bytes+1,w,c
  6869  001160  582E               	subwfb	Heap_GetBytes@size+1,w,c
  6870  001162  A0D8               	btfss	status,0,c
  6871  001164  D006               	goto	l257
  6872  001166  C02F  FFD9         	movff	Heap_GetBytes@heap,fsr2l
  6873  00116A  C030  FFDA         	movff	Heap_GetBytes@heap+1,fsr2h
  6874  00116E  50DF               	movf	indf2,w,c
  6875  001170  A4D8               	btfss	status,2,c
  6876  001172                     l257:
  6877  001172  D7FF               	goto	l257
  6878                           
  6879                           ;Heap.c: 83: }
  6880                           ;Heap.c: 85: Heap_BaseOffset += bytes;
  6881  001174  5029               	movf	Heap_GetBytes@bytes,w,c
  6882  001176  2662               	addwf	_Heap_BaseOffset,f,c
  6883  001178  502A               	movf	Heap_GetBytes@bytes+1,w,c
  6884  00117A  2263               	addwfc	_Heap_BaseOffset+1,f,c
  6885                           
  6886                           ;Heap.c: 86: heap = (heap_t *) &Heap[Heap_BaseOffset];
  6887  00117C  0ED7               	movlw	low _Heap
  6888  00117E  2462               	addwf	_Heap_BaseOffset,w,c
  6889  001180  6E2F               	movwf	Heap_GetBytes@heap,c
  6890  001182  0E00               	movlw	high _Heap
  6891  001184  2063               	addwfc	_Heap_BaseOffset+1,w,c
  6892  001186  6E30               	movwf	Heap_GetBytes@heap+1,c
  6893                           
  6894                           ;Heap.c: 87: heap->id = 0;
  6895  001188  C02F  FFD9         	movff	Heap_GetBytes@heap,fsr2l
  6896  00118C  C030  FFDA         	movff	Heap_GetBytes@heap+1,fsr2h
  6897  001190  0E00               	movlw	0
  6898  001192  6EDF               	movwf	indf2,c
  6899                           
  6900                           ;Heap.c: 88: heap->size = size - bytes;
  6901  001194  C029  F02B         	movff	Heap_GetBytes@bytes,??_Heap_GetBytes
  6902  001198  C02A  F02C         	movff	Heap_GetBytes@bytes+1,??_Heap_GetBytes+1
  6903  00119C  1E2B               	comf	??_Heap_GetBytes,f,c
  6904  00119E  1E2C               	comf	??_Heap_GetBytes+1,f,c
  6905  0011A0  4A2B               	infsnz	??_Heap_GetBytes,f,c
  6906  0011A2  2A2C               	incf	??_Heap_GetBytes+1,f,c
  6907  0011A4  502D               	movf	Heap_GetBytes@size,w,c
  6908  0011A6  262B               	addwf	??_Heap_GetBytes,f,c
  6909  0011A8  502E               	movf	Heap_GetBytes@size+1,w,c
  6910  0011AA  222C               	addwfc	??_Heap_GetBytes+1,f,c
  6911  0011AC  EE20 F002          	lfsr	2,2
  6912  0011B0  502F               	movf	Heap_GetBytes@heap,w,c
  6913  0011B2  26D9               	addwf	fsr2l,f,c
  6914  0011B4  5030               	movf	Heap_GetBytes@heap+1,w,c
  6915  0011B6  22DA               	addwfc	fsr2h,f,c
  6916  0011B8  C02B  FFDE         	movff	??_Heap_GetBytes,postinc2
  6917  0011BC  C02C  FFDD         	movff	??_Heap_GetBytes+1,postdec2
  6918  0011C0  0012               	return	
  6919  0011C2                     __end_of_Heap_GetBytes:
  6920                           	opt stack 0
  6921                           tblptru	equ	0xFF8
  6922                           tblptrh	equ	0xFF7
  6923                           tblptrl	equ	0xFF6
  6924                           tablat	equ	0xFF5
  6925                           prodh	equ	0xFF4
  6926                           prodl	equ	0xFF3
  6927                           intcon	equ	0xFF2
  6928                           postinc0	equ	0xFEE
  6929                           wreg	equ	0xFE8
  6930                           indf1	equ	0xFE7
  6931                           postinc1	equ	0xFE6
  6932                           postdec1	equ	0xFE5
  6933                           fsr1h	equ	0xFE2
  6934                           fsr1l	equ	0xFE1
  6935                           indf2	equ	0xFDF
  6936                           postinc2	equ	0xFDE
  6937                           postdec2	equ	0xFDD
  6938                           fsr2h	equ	0xFDA
  6939                           fsr2l	equ	0xFD9
  6940                           status	equ	0xFD8
  6941                           
  6942 ;; *************** function _Heap_GarbageCollect *****************
  6943 ;; Defined at:
  6944 ;;		line 42 in file "src/JVM/Heap.c"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;		None
  6947 ;; Auto vars:     Size  Location     Type
  6948 ;;  heap            2   36[COMRAM] PTR struct .
  6949 ;;		 -> Heap(1024), NULL(0), 
  6950 ;;  offset          2   34[COMRAM] unsigned short 
  6951 ;;  size            2   32[COMRAM] unsigned short 
  6952 ;; Return value:  Size  Location     Type
  6953 ;;		None               void
  6954 ;; Registers used:
  6955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6956 ;; Tracked objects:
  6957 ;;		On entry : 0/0
  6958 ;;		On exit  : 0/0
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6961 ;;      Params:         0       0       0       0       0       0       0
  6962 ;;      Locals:         6       0       0       0       0       0       0
  6963 ;;      Temps:          4       0       0       0       0       0       0
  6964 ;;      Totals:        10       0       0       0       0       0       0
  6965 ;;Total ram usage:       10 bytes
  6966 ;; Hardware stack levels used:    1
  6967 ;; Hardware stack levels required when called:    3
  6968 ;; This function calls:
  6969 ;;		_Heap_IsIdInUse
  6970 ;;		_Mm_CopyRam
  6971 ;;		_Stack_IsIdInUse
  6972 ;; This function is called by:
  6973 ;;		_Heap_GetBytes
  6974 ;; This function uses a non-reentrant model
  6975 ;;
  6976                           
  6977                           	psect	text30
  6978  000B92                     __ptext30:
  6979                           	opt stack 0
  6980  000B92                     _Heap_GarbageCollect:
  6981                           	opt stack 24
  6982                           
  6983                           ;Heap.c: 44: heap_t *heap = (0);
  6984                           
  6985                           ;incstack = 0
  6986  000B92  0E00               	movlw	0
  6987  000B94  6E26               	movwf	Heap_GarbageCollect@heap+1,c
  6988  000B96  0E00               	movlw	0
  6989  000B98  6E25               	movwf	Heap_GarbageCollect@heap,c
  6990                           
  6991                           ;Heap.c: 45: uint16_t size = 0;
  6992  000B9A  0E00               	movlw	0
  6993  000B9C  6E22               	movwf	Heap_GarbageCollect@size+1,c
  6994  000B9E  0E00               	movlw	0
  6995  000BA0  6E21               	movwf	Heap_GarbageCollect@size,c
  6996                           
  6997                           ;Heap.c: 46: uint16_t offset = Heap_BaseOffset;
  6998  000BA2  C062  F023         	movff	_Heap_BaseOffset,Heap_GarbageCollect@offset
  6999  000BA6  C063  F024         	movff	_Heap_BaseOffset+1,Heap_GarbageCollect@offset+1
  7000                           
  7001                           ;Heap.c: 48: while (offset < sizeof(Heap)) {
  7002  000BAA  D071               	goto	l2310
  7003  000BAC                     l2292:
  7004                           
  7005                           ;Heap.c: 49: heap = (heap_t *) &Heap[offset];
  7006  000BAC  0ED7               	movlw	low _Heap
  7007  000BAE  2423               	addwf	Heap_GarbageCollect@offset,w,c
  7008  000BB0  6E25               	movwf	Heap_GarbageCollect@heap,c
  7009  000BB2  0E00               	movlw	high _Heap
  7010  000BB4  2024               	addwfc	Heap_GarbageCollect@offset+1,w,c
  7011  000BB6  6E26               	movwf	Heap_GarbageCollect@heap+1,c
  7012                           
  7013                           ;Heap.c: 50: size = heap->size + sizeof(heap_t);
  7014  000BB8  EE20 F002          	lfsr	2,2
  7015  000BBC  5025               	movf	Heap_GarbageCollect@heap,w,c
  7016  000BBE  26D9               	addwf	fsr2l,f,c
  7017  000BC0  5026               	movf	Heap_GarbageCollect@heap+1,w,c
  7018  000BC2  22DA               	addwfc	fsr2h,f,c
  7019  000BC4  CFDE F01D          	movff	postinc2,??_Heap_GarbageCollect
  7020  000BC8  CFDD F01E          	movff	postdec2,??_Heap_GarbageCollect+1
  7021  000BCC  0E04               	movlw	4
  7022  000BCE  241D               	addwf	??_Heap_GarbageCollect,w,c
  7023  000BD0  6E21               	movwf	Heap_GarbageCollect@size,c
  7024  000BD2  0E00               	movlw	0
  7025  000BD4  201E               	addwfc	??_Heap_GarbageCollect+1,w,c
  7026  000BD6  6E22               	movwf	Heap_GarbageCollect@size+1,c
  7027                           
  7028                           ;Heap.c: 52: if (0 != heap->id) {
  7029  000BD8  C025  FFD9         	movff	Heap_GarbageCollect@heap,fsr2l
  7030  000BDC  C026  FFDA         	movff	Heap_GarbageCollect@heap+1,fsr2h
  7031  000BE0  50DF               	movf	indf2,w,c
  7032  000BE2  B4D8               	btfsc	status,2,c
  7033  000BE4  D050               	goto	l2308
  7034                           
  7035                           ;Heap.c: 53: if ((!Stack_IsIdInUse(heap->id)) && (!Heap_IsIdInUse(heap->id))) {
  7036  000BE6  C025  FFD9         	movff	Heap_GarbageCollect@heap,fsr2l
  7037  000BEA  C026  FFDA         	movff	Heap_GarbageCollect@heap+1,fsr2h
  7038  000BEE  50DF               	movf	indf2,w,c
  7039  000BF0  6E1D               	movwf	??_Heap_GarbageCollect& (0+255),c
  7040  000BF2  501D               	movf	??_Heap_GarbageCollect,w,c
  7041  000BF4  6E10               	movwf	Stack_IsIdInUse@id,c
  7042  000BF6  6A11               	clrf	Stack_IsIdInUse@id+1,c
  7043  000BF8  EC3E  F00A         	call	_Stack_IsIdInUse	;wreg free
  7044  000BFC  0900               	iorlw	0
  7045  000BFE  A4D8               	btfss	status,2,c
  7046  000C00  D042               	goto	l2308
  7047  000C02  C025  FFD9         	movff	Heap_GarbageCollect@heap,fsr2l
  7048  000C06  C026  FFDA         	movff	Heap_GarbageCollect@heap+1,fsr2h
  7049  000C0A  50DF               	movf	indf2,w,c
  7050  000C0C  6E1D               	movwf	??_Heap_GarbageCollect& (0+255),c
  7051  000C0E  501D               	movf	??_Heap_GarbageCollect,w,c
  7052  000C10  6E10               	movwf	Heap_IsIdInUse@id,c
  7053  000C12  6A11               	clrf	Heap_IsIdInUse@id+1,c
  7054  000C14  ECC7  F007         	call	_Heap_IsIdInUse	;wreg free
  7055  000C18  0900               	iorlw	0
  7056  000C1A  A4D8               	btfss	status,2,c
  7057  000C1C  D034               	goto	l2308
  7058                           
  7059                           ;Heap.c: 54: Mm_CopyRam((Heap + Heap_BaseOffset + size),
  7060                           ;Heap.c: 55: (Heap + Heap_BaseOffset), (offset - Heap_BaseOffset));
  7061  000C1E  0ED7               	movlw	low _Heap
  7062  000C20  6E1D               	movwf	??_Heap_GarbageCollect& (0+255),c
  7063  000C22  0E00               	movlw	high _Heap
  7064  000C24  6E1E               	movwf	(??_Heap_GarbageCollect+1)& (0+255),c
  7065  000C26  5062               	movf	_Heap_BaseOffset,w,c
  7066  000C28  261D               	addwf	??_Heap_GarbageCollect,f,c
  7067  000C2A  5063               	movf	_Heap_BaseOffset+1,w,c
  7068  000C2C  221E               	addwfc	??_Heap_GarbageCollect+1,f,c
  7069  000C2E  5021               	movf	Heap_GarbageCollect@size,w,c
  7070  000C30  241D               	addwf	??_Heap_GarbageCollect,w,c
  7071  000C32  6E10               	movwf	Mm_CopyRam@destination,c
  7072  000C34  5022               	movf	Heap_GarbageCollect@size+1,w,c
  7073  000C36  201E               	addwfc	??_Heap_GarbageCollect+1,w,c
  7074  000C38  6E11               	movwf	Mm_CopyRam@destination+1,c
  7075  000C3A  0ED7               	movlw	low _Heap
  7076  000C3C  2462               	addwf	_Heap_BaseOffset,w,c
  7077  000C3E  6E12               	movwf	Mm_CopyRam@source,c
  7078  000C40  0E00               	movlw	high _Heap
  7079  000C42  2063               	addwfc	_Heap_BaseOffset+1,w,c
  7080  000C44  6E13               	movwf	Mm_CopyRam@source+1,c
  7081  000C46  C062  F01F         	movff	_Heap_BaseOffset,??_Heap_GarbageCollect+2
  7082  000C4A  C063  F020         	movff	_Heap_BaseOffset+1,??_Heap_GarbageCollect+3
  7083  000C4E  1E1F               	comf	??_Heap_GarbageCollect+2,f,c
  7084  000C50  1E20               	comf	??_Heap_GarbageCollect+3,f,c
  7085  000C52  4A1F               	infsnz	??_Heap_GarbageCollect+2,f,c
  7086  000C54  2A20               	incf	??_Heap_GarbageCollect+3,f,c
  7087  000C56  5023               	movf	Heap_GarbageCollect@offset,w,c
  7088  000C58  241F               	addwf	??_Heap_GarbageCollect+2,w,c
  7089  000C5A  6E14               	movwf	Mm_CopyRam@size,c
  7090  000C5C  5024               	movf	Heap_GarbageCollect@offset+1,w,c
  7091  000C5E  2020               	addwfc	??_Heap_GarbageCollect+3,w,c
  7092  000C60  6E15               	movwf	Mm_CopyRam@size+1,c
  7093  000C62  EC62  F00C         	call	_Mm_CopyRam	;wreg free
  7094                           
  7095                           ;Heap.c: 57: heap = (heap_t *) &Heap[Heap_BaseOffset];
  7096  000C66  0ED7               	movlw	low _Heap
  7097  000C68  2462               	addwf	_Heap_BaseOffset,w,c
  7098  000C6A  6E25               	movwf	Heap_GarbageCollect@heap,c
  7099  000C6C  0E00               	movlw	high _Heap
  7100  000C6E  2063               	addwfc	_Heap_BaseOffset+1,w,c
  7101  000C70  6E26               	movwf	Heap_GarbageCollect@heap+1,c
  7102                           
  7103                           ;Heap.c: 58: heap->size += size;
  7104  000C72  EE20 F002          	lfsr	2,2
  7105  000C76  5025               	movf	Heap_GarbageCollect@heap,w,c
  7106  000C78  26D9               	addwf	fsr2l,f,c
  7107  000C7A  5026               	movf	Heap_GarbageCollect@heap+1,w,c
  7108  000C7C  22DA               	addwfc	fsr2h,f,c
  7109  000C7E  5021               	movf	Heap_GarbageCollect@size,w,c
  7110  000C80  26DE               	addwf	postinc2,f,c
  7111  000C82  5022               	movf	Heap_GarbageCollect@size+1,w,c
  7112  000C84  22DD               	addwfc	postdec2,f,c
  7113  000C86                     l2308:
  7114                           
  7115                           ;Heap.c: 59: }
  7116                           ;Heap.c: 60: }
  7117                           ;Heap.c: 62: offset += size;
  7118  000C86  5021               	movf	Heap_GarbageCollect@size,w,c
  7119  000C88  2623               	addwf	Heap_GarbageCollect@offset,f,c
  7120  000C8A  5022               	movf	Heap_GarbageCollect@size+1,w,c
  7121  000C8C  2224               	addwfc	Heap_GarbageCollect@offset+1,f,c
  7122  000C8E                     l2310:
  7123  000C8E  0E00               	movlw	0
  7124  000C90  5C23               	subwf	Heap_GarbageCollect@offset,w,c
  7125  000C92  0E04               	movlw	4
  7126  000C94  5824               	subwfb	Heap_GarbageCollect@offset+1,w,c
  7127  000C96  A0D8               	btfss	status,0,c
  7128  000C98  D789               	goto	l2292
  7129                           
  7130                           ;Heap.c: 63: }
  7131                           ;Heap.c: 65: if (offset != sizeof(Heap)) {
  7132  000C9A  5024               	movf	Heap_GarbageCollect@offset+1,w,c
  7133  000C9C  0A04               	xorlw	4
  7134  000C9E  1023               	iorwf	Heap_GarbageCollect@offset,w,c
  7135  000CA0  A4D8               	btfss	status,2,c
  7136  000CA2                     l248:
  7137  000CA2  D7FF               	goto	l248
  7138  000CA4  0012               	return	
  7139  000CA6                     __end_of_Heap_GarbageCollect:
  7140                           	opt stack 0
  7141                           tblptru	equ	0xFF8
  7142                           tblptrh	equ	0xFF7
  7143                           tblptrl	equ	0xFF6
  7144                           tablat	equ	0xFF5
  7145                           prodh	equ	0xFF4
  7146                           prodl	equ	0xFF3
  7147                           intcon	equ	0xFF2
  7148                           postinc0	equ	0xFEE
  7149                           wreg	equ	0xFE8
  7150                           indf1	equ	0xFE7
  7151                           postinc1	equ	0xFE6
  7152                           postdec1	equ	0xFE5
  7153                           fsr1h	equ	0xFE2
  7154                           fsr1l	equ	0xFE1
  7155                           indf2	equ	0xFDF
  7156                           postinc2	equ	0xFDE
  7157                           postdec2	equ	0xFDD
  7158                           fsr2h	equ	0xFDA
  7159                           fsr2l	equ	0xFD9
  7160                           status	equ	0xFD8
  7161                           
  7162 ;; *************** function _Stack_IsIdInUse *****************
  7163 ;; Defined at:
  7164 ;;		line 22 in file "src/JVM/Stack.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;  id              2   15[COMRAM] unsigned short 
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;  ii              2   22[COMRAM] unsigned short 
  7169 ;; Return value:  Size  Location     Type
  7170 ;;                  1    wreg      unsigned char 
  7171 ;; Registers used:
  7172 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7173 ;; Tracked objects:
  7174 ;;		On entry : 0/0
  7175 ;;		On exit  : 0/0
  7176 ;;		Unchanged: 0/0
  7177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7178 ;;      Params:         2       0       0       0       0       0       0
  7179 ;;      Locals:         2       0       0       0       0       0       0
  7180 ;;      Temps:          5       0       0       0       0       0       0
  7181 ;;      Totals:         9       0       0       0       0       0       0
  7182 ;;Total ram usage:        9 bytes
  7183 ;; Hardware stack levels used:    1
  7184 ;; Hardware stack levels required when called:    2
  7185 ;; This function calls:
  7186 ;;		Nothing
  7187 ;; This function is called by:
  7188 ;;		_Heap_GarbageCollect
  7189 ;; This function uses a non-reentrant model
  7190 ;;
  7191                           
  7192                           	psect	text31
  7193  00147C                     __ptext31:
  7194                           	opt stack 0
  7195  00147C                     _Stack_IsIdInUse:
  7196                           	opt stack 24
  7197                           
  7198                           ;Stack.c: 24: uint16_t ii = 0;
  7199                           
  7200                           ;incstack = 0
  7201  00147C  0E00               	movlw	0
  7202  00147E  6E18               	movwf	Stack_IsIdInUse@ii+1,c
  7203  001480  0E00               	movlw	0
  7204  001482  6E17               	movwf	Stack_IsIdInUse@ii,c
  7205                           
  7206                           ;Stack.c: 26: for (;ii < (Stack_CurrentPointer - Stack_Pointer + 1); ii++) {
  7207  001484  D016               	goto	l2094
  7208  001486                     l2086:
  7209                           
  7210                           ;Stack.c: 27: if (Stack_Pointer[ii] == id) {
  7211  001486  90D8               	bcf	status,0,c
  7212  001488  3417               	rlcf	Stack_IsIdInUse@ii,w,c
  7213  00148A  6ED9               	movwf	fsr2l,c
  7214  00148C  3418               	rlcf	Stack_IsIdInUse@ii+1,w,c
  7215  00148E  6EDA               	movwf	fsr2h,c
  7216  001490  5068               	movf	_Stack_Pointer,w,c
  7217  001492  26D9               	addwf	fsr2l,f,c
  7218  001494  5069               	movf	_Stack_Pointer+1,w,c
  7219  001496  22DA               	addwfc	fsr2h,f,c
  7220  001498  52DE               	movf	postinc2,f,c
  7221  00149A  5011               	movf	Stack_IsIdInUse@id+1,w,c
  7222  00149C  18DD               	xorwf	postdec2,w,c
  7223  00149E  C010  FFE8         	movff	Stack_IsIdInUse@id,wreg
  7224  0014A2  B4D8               	btfsc	status,2,c
  7225  0014A4  18DF               	xorwf	indf2,w,c
  7226  0014A6  A4D8               	btfss	status,2,c
  7227  0014A8  D002               	goto	l2092
  7228                           
  7229                           ;Stack.c: 28: return 0x01;
  7230  0014AA  0E01               	movlw	1
  7231  0014AC  D022               	goto	l303
  7232  0014AE                     l2092:
  7233  0014AE  4A17               	infsnz	Stack_IsIdInUse@ii,f,c
  7234  0014B0  2A18               	incf	Stack_IsIdInUse@ii+1,f,c
  7235  0014B2                     l2094:
  7236  0014B2  C068  F012         	movff	_Stack_Pointer,??_Stack_IsIdInUse
  7237  0014B6  C069  F013         	movff	_Stack_Pointer+1,??_Stack_IsIdInUse+1
  7238  0014BA  1E12               	comf	??_Stack_IsIdInUse,f,c
  7239  0014BC  1E13               	comf	??_Stack_IsIdInUse+1,f,c
  7240  0014BE  4A12               	infsnz	??_Stack_IsIdInUse,f,c
  7241  0014C0  2A13               	incf	??_Stack_IsIdInUse+1,f,c
  7242  0014C2  5066               	movf	_Stack_CurrentPointer,w,c
  7243  0014C4  2612               	addwf	??_Stack_IsIdInUse,f,c
  7244  0014C6  5067               	movf	_Stack_CurrentPointer+1,w,c
  7245  0014C8  2213               	addwfc	??_Stack_IsIdInUse+1,f,c
  7246  0014CA  3413               	rlcf	??_Stack_IsIdInUse+1,w,c
  7247  0014CC  3013               	rrcf	??_Stack_IsIdInUse+1,w,c
  7248  0014CE  6E15               	movwf	(??_Stack_IsIdInUse+3)& (0+255),c
  7249  0014D0  3012               	rrcf	??_Stack_IsIdInUse,w,c
  7250  0014D2  6E14               	movwf	(??_Stack_IsIdInUse+2)& (0+255),c
  7251  0014D4  0E01               	movlw	1
  7252  0014D6  2614               	addwf	??_Stack_IsIdInUse+2,f,c
  7253  0014D8  0E00               	movlw	0
  7254  0014DA  2215               	addwfc	??_Stack_IsIdInUse+3,f,c
  7255  0014DC  5018               	movf	Stack_IsIdInUse@ii+1,w,c
  7256  0014DE  0A80               	xorlw	128
  7257  0014E0  6E16               	movwf	(??_Stack_IsIdInUse+4)& (0+255),c
  7258  0014E2  5014               	movf	??_Stack_IsIdInUse+2,w,c
  7259  0014E4  5C17               	subwf	Stack_IsIdInUse@ii,w,c
  7260  0014E6  5015               	movf	??_Stack_IsIdInUse+3,w,c
  7261  0014E8  0A80               	xorlw	128
  7262  0014EA  5816               	subwfb	(??_Stack_IsIdInUse+4)& (0+255),w,c
  7263  0014EC  A0D8               	btfss	status,0,c
  7264  0014EE  D7CB               	goto	l2086
  7265                           
  7266                           ;Stack.c: 29: }
  7267                           ;Stack.c: 30: }
  7268                           ;Stack.c: 32: return 0x00;
  7269  0014F0  0E00               	movlw	0
  7270  0014F2                     l303:
  7271  0014F2  0012               	return	
  7272  0014F4                     __end_of_Stack_IsIdInUse:
  7273                           	opt stack 0
  7274                           tblptru	equ	0xFF8
  7275                           tblptrh	equ	0xFF7
  7276                           tblptrl	equ	0xFF6
  7277                           tablat	equ	0xFF5
  7278                           prodh	equ	0xFF4
  7279                           prodl	equ	0xFF3
  7280                           intcon	equ	0xFF2
  7281                           postinc0	equ	0xFEE
  7282                           wreg	equ	0xFE8
  7283                           indf1	equ	0xFE7
  7284                           postinc1	equ	0xFE6
  7285                           postdec1	equ	0xFE5
  7286                           fsr1h	equ	0xFE2
  7287                           fsr1l	equ	0xFE1
  7288                           indf2	equ	0xFDF
  7289                           postinc2	equ	0xFDE
  7290                           postdec2	equ	0xFDD
  7291                           fsr2h	equ	0xFDA
  7292                           fsr2l	equ	0xFD9
  7293                           status	equ	0xFD8
  7294                           
  7295 ;; *************** function _Mm_CopyRam *****************
  7296 ;; Defined at:
  7297 ;;		line 5 in file "src/MemoryManagement/MemoryManagement.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;  destination     2   15[COMRAM] PTR unsigned char 
  7300 ;;		 -> Heap(1024), 
  7301 ;;  source          2   17[COMRAM] PTR unsigned char 
  7302 ;;		 -> Heap(1024), 
  7303 ;;  size            2   19[COMRAM] unsigned short 
  7304 ;; Auto vars:     Size  Location     Type
  7305 ;;		None
  7306 ;; Return value:  Size  Location     Type
  7307 ;;		None               void
  7308 ;; Registers used:
  7309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7310 ;; Tracked objects:
  7311 ;;		On entry : 0/0
  7312 ;;		On exit  : 0/0
  7313 ;;		Unchanged: 0/0
  7314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7315 ;;      Params:         6       0       0       0       0       0       0
  7316 ;;      Locals:         0       0       0       0       0       0       0
  7317 ;;      Temps:          0       0       0       0       0       0       0
  7318 ;;      Totals:         6       0       0       0       0       0       0
  7319 ;;Total ram usage:        6 bytes
  7320 ;; Hardware stack levels used:    1
  7321 ;; Hardware stack levels required when called:    2
  7322 ;; This function calls:
  7323 ;;		Nothing
  7324 ;; This function is called by:
  7325 ;;		_Heap_GarbageCollect
  7326 ;; This function uses a non-reentrant model
  7327 ;;
  7328                           
  7329                           	psect	text32
  7330  0018C4                     __ptext32:
  7331                           	opt stack 0
  7332  0018C4                     _Mm_CopyRam:
  7333                           	opt stack 24
  7334                           
  7335                           ;MemoryManagement.c: 7: destination += size;
  7336                           
  7337                           ;incstack = 0
  7338  0018C4  5014               	movf	Mm_CopyRam@size,w,c
  7339  0018C6  2610               	addwf	Mm_CopyRam@destination,f,c
  7340  0018C8  5015               	movf	Mm_CopyRam@size+1,w,c
  7341  0018CA  2211               	addwfc	Mm_CopyRam@destination+1,f,c
  7342                           
  7343                           ;MemoryManagement.c: 8: source += size;
  7344  0018CC  5014               	movf	Mm_CopyRam@size,w,c
  7345  0018CE  2612               	addwf	Mm_CopyRam@source,f,c
  7346  0018D0  5015               	movf	Mm_CopyRam@size+1,w,c
  7347  0018D2  2213               	addwfc	Mm_CopyRam@source+1,f,c
  7348                           
  7349                           ;MemoryManagement.c: 10: while (size--) {
  7350  0018D4  D010               	goto	l2104
  7351  0018D6                     l2102:
  7352                           
  7353                           ;MemoryManagement.c: 11: *(--destination) = *(--source);
  7354  0018D6  0612               	decf	Mm_CopyRam@source,f,c
  7355  0018D8  A0D8               	btfss	status,0,c
  7356  0018DA  0613               	decf	Mm_CopyRam@source+1,f,c
  7357  0018DC  C012  FFD9         	movff	Mm_CopyRam@source,fsr2l
  7358  0018E0  C013  FFDA         	movff	Mm_CopyRam@source+1,fsr2h
  7359  0018E4  0610               	decf	Mm_CopyRam@destination,f,c
  7360  0018E6  A0D8               	btfss	status,0,c
  7361  0018E8  0611               	decf	Mm_CopyRam@destination+1,f,c
  7362  0018EA  C010  FFE1         	movff	Mm_CopyRam@destination,fsr1l
  7363  0018EE  C011  FFE2         	movff	Mm_CopyRam@destination+1,fsr1h
  7364  0018F2  CFDF FFE7          	movff	indf2,indf1
  7365  0018F6                     l2104:
  7366  0018F6  0614               	decf	Mm_CopyRam@size,f,c
  7367  0018F8  A0D8               	btfss	status,0,c
  7368  0018FA  0615               	decf	Mm_CopyRam@size+1,f,c
  7369  0018FC  2814               	incf	Mm_CopyRam@size& (0+255),w,c
  7370  0018FE  B4D8               	btfsc	status,2,c
  7371  001900  2815               	incf	(Mm_CopyRam@size+1)& (0+255),w,c
  7372  001902  B4D8               	btfsc	status,2,c
  7373  001904  0012               	return	
  7374  001906  D7E7               	goto	l2102
  7375  001908                     __end_of_Mm_CopyRam:
  7376                           	opt stack 0
  7377                           tblptru	equ	0xFF8
  7378                           tblptrh	equ	0xFF7
  7379                           tblptrl	equ	0xFF6
  7380                           tablat	equ	0xFF5
  7381                           prodh	equ	0xFF4
  7382                           prodl	equ	0xFF3
  7383                           intcon	equ	0xFF2
  7384                           postinc0	equ	0xFEE
  7385                           wreg	equ	0xFE8
  7386                           indf1	equ	0xFE7
  7387                           postinc1	equ	0xFE6
  7388                           postdec1	equ	0xFE5
  7389                           fsr1h	equ	0xFE2
  7390                           fsr1l	equ	0xFE1
  7391                           indf2	equ	0xFDF
  7392                           postinc2	equ	0xFDE
  7393                           postdec2	equ	0xFDD
  7394                           fsr2h	equ	0xFDA
  7395                           fsr2l	equ	0xFD9
  7396                           status	equ	0xFD8
  7397                           
  7398 ;; *************** function _Heap_IsIdInUse *****************
  7399 ;; Defined at:
  7400 ;;		line 18 in file "src/JVM/Heap.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;  id              2   15[COMRAM] unsigned short 
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;  ii              1   25[COMRAM] unsigned char 
  7405 ;;  heap            2   26[COMRAM] PTR struct .
  7406 ;;		 -> Heap(1024), NULL(0), 
  7407 ;;  offset          2   23[COMRAM] unsigned short 
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  1    wreg      unsigned char 
  7410 ;; Registers used:
  7411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7417 ;;      Params:         2       0       0       0       0       0       0
  7418 ;;      Locals:         5       0       0       0       0       0       0
  7419 ;;      Temps:          6       0       0       0       0       0       0
  7420 ;;      Totals:        13       0       0       0       0       0       0
  7421 ;;Total ram usage:       13 bytes
  7422 ;; Hardware stack levels used:    1
  7423 ;; Hardware stack levels required when called:    2
  7424 ;; This function calls:
  7425 ;;		Nothing
  7426 ;; This function is called by:
  7427 ;;		_Heap_GarbageCollect
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           
  7431                           	psect	text33
  7432  000F8E                     __ptext33:
  7433                           	opt stack 0
  7434  000F8E                     _Heap_IsIdInUse:
  7435                           	opt stack 24
  7436                           
  7437                           ;Heap.c: 20: heap_t *heap = (0);
  7438                           
  7439                           ;incstack = 0
  7440  000F8E  0E00               	movlw	0
  7441  000F90  6E1C               	movwf	Heap_IsIdInUse@heap+1,c
  7442  000F92  0E00               	movlw	0
  7443  000F94  6E1B               	movwf	Heap_IsIdInUse@heap,c
  7444                           
  7445                           ;Heap.c: 21: uint16_t offset = Heap_BaseOffset;
  7446  000F96  C062  F018         	movff	_Heap_BaseOffset,Heap_IsIdInUse@offset
  7447  000F9A  C063  F019         	movff	_Heap_BaseOffset+1,Heap_IsIdInUse@offset+1
  7448                           
  7449                           ;Heap.c: 23: while (offset < sizeof(Heap)) {
  7450  000F9E  D058               	goto	l2078
  7451  000FA0                     l2060:
  7452                           
  7453                           ;Heap.c: 24: heap = (heap_t *) &Heap[offset];
  7454  000FA0  0ED7               	movlw	low _Heap
  7455  000FA2  2418               	addwf	Heap_IsIdInUse@offset,w,c
  7456  000FA4  6E1B               	movwf	Heap_IsIdInUse@heap,c
  7457  000FA6  0E00               	movlw	high _Heap
  7458  000FA8  2019               	addwfc	Heap_IsIdInUse@offset+1,w,c
  7459  000FAA  6E1C               	movwf	Heap_IsIdInUse@heap+1,c
  7460                           
  7461                           ;Heap.c: 26: if (heap->ref) {
  7462  000FAC  EE20 F001          	lfsr	2,1
  7463  000FB0  501B               	movf	Heap_IsIdInUse@heap,w,c
  7464  000FB2  26D9               	addwf	fsr2l,f,c
  7465  000FB4  501C               	movf	Heap_IsIdInUse@heap+1,w,c
  7466  000FB6  22DA               	addwfc	fsr2h,f,c
  7467  000FB8  50DF               	movf	indf2,w,c
  7468  000FBA  B4D8               	btfsc	status,2,c
  7469  000FBC  D037               	goto	l2076
  7470                           
  7471                           ;Heap.c: 27: uint8_t ii = 0;
  7472  000FBE  0E00               	movlw	0
  7473  000FC0  6E1A               	movwf	Heap_IsIdInUse@ii,c
  7474                           
  7475                           ;Heap.c: 29: for (;ii < (heap->size / sizeof(uint16_t)); ii++) {
  7476  000FC2  D01C               	goto	l2074
  7477  000FC4                     l2066:
  7478                           
  7479                           ;Heap.c: 30: if (((uint16_t *) (heap + 1))[ii] == id) {
  7480  000FC4  501A               	movf	Heap_IsIdInUse@ii,w,c
  7481  000FC6  0D02               	mullw	2
  7482  000FC8  C01B  F012         	movff	Heap_IsIdInUse@heap,??_Heap_IsIdInUse
  7483  000FCC  C01C  F013         	movff	Heap_IsIdInUse@heap+1,??_Heap_IsIdInUse+1
  7484  000FD0  50F3               	movf	prodl,w,c
  7485  000FD2  2612               	addwf	??_Heap_IsIdInUse,f,c
  7486  000FD4  50F4               	movf	prodh,w,c
  7487  000FD6  2213               	addwfc	??_Heap_IsIdInUse+1,f,c
  7488  000FD8  0E04               	movlw	4
  7489  000FDA  2412               	addwf	??_Heap_IsIdInUse,w,c
  7490  000FDC  6ED9               	movwf	fsr2l,c
  7491  000FDE  0E00               	movlw	0
  7492  000FE0  2013               	addwfc	??_Heap_IsIdInUse+1,w,c
  7493  000FE2  6EDA               	movwf	fsr2h,c
  7494  000FE4  52DE               	movf	postinc2,f,c
  7495  000FE6  5011               	movf	Heap_IsIdInUse@id+1,w,c
  7496  000FE8  18DD               	xorwf	postdec2,w,c
  7497  000FEA  C010  FFE8         	movff	Heap_IsIdInUse@id,wreg
  7498  000FEE  B4D8               	btfsc	status,2,c
  7499  000FF0  18DF               	xorwf	indf2,w,c
  7500  000FF2  A4D8               	btfss	status,2,c
  7501  000FF4  D002               	goto	l2072
  7502                           
  7503                           ;Heap.c: 31: return 0x01;
  7504  000FF6  0E01               	movlw	1
  7505  000FF8  D032               	goto	l237
  7506  000FFA                     l2072:
  7507  000FFA  2A1A               	incf	Heap_IsIdInUse@ii,f,c
  7508  000FFC                     l2074:
  7509  000FFC  EE20 F002          	lfsr	2,2
  7510  001000  501B               	movf	Heap_IsIdInUse@heap,w,c
  7511  001002  26D9               	addwf	fsr2l,f,c
  7512  001004  501C               	movf	Heap_IsIdInUse@heap+1,w,c
  7513  001006  22DA               	addwfc	fsr2h,f,c
  7514  001008  CFDE F012          	movff	postinc2,??_Heap_IsIdInUse
  7515  00100C  CFDD F013          	movff	postdec2,??_Heap_IsIdInUse+1
  7516  001010  90D8               	bcf	status,0,c
  7517  001012  3013               	rrcf	??_Heap_IsIdInUse+1,w,c
  7518  001014  6E15               	movwf	(??_Heap_IsIdInUse+3)& (0+255),c
  7519  001016  3012               	rrcf	??_Heap_IsIdInUse,w,c
  7520  001018  6E14               	movwf	(??_Heap_IsIdInUse+2)& (0+255),c
  7521  00101A  501A               	movf	Heap_IsIdInUse@ii,w,c
  7522  00101C  6E16               	movwf	(??_Heap_IsIdInUse+4)& (0+255),c
  7523  00101E  6A17               	clrf	(??_Heap_IsIdInUse+5)& (0+255),c
  7524  001020  5014               	movf	??_Heap_IsIdInUse+2,w,c
  7525  001022  5C16               	subwf	??_Heap_IsIdInUse+4,w,c
  7526  001024  5015               	movf	??_Heap_IsIdInUse+3,w,c
  7527  001026  5817               	subwfb	??_Heap_IsIdInUse+5,w,c
  7528  001028  A0D8               	btfss	status,0,c
  7529  00102A  D7CC               	goto	l2066
  7530  00102C                     l2076:
  7531                           
  7532                           ;Heap.c: 32: }
  7533                           ;Heap.c: 33: }
  7534                           ;Heap.c: 34: }
  7535                           ;Heap.c: 36: offset += heap->size + sizeof(heap_t);
  7536  00102C  EE20 F002          	lfsr	2,2
  7537  001030  501B               	movf	Heap_IsIdInUse@heap,w,c
  7538  001032  26D9               	addwf	fsr2l,f,c
  7539  001034  501C               	movf	Heap_IsIdInUse@heap+1,w,c
  7540  001036  22DA               	addwfc	fsr2h,f,c
  7541  001038  CFDE F012          	movff	postinc2,??_Heap_IsIdInUse
  7542  00103C  CFDD F013          	movff	postdec2,??_Heap_IsIdInUse+1
  7543  001040  0E04               	movlw	4
  7544  001042  2612               	addwf	??_Heap_IsIdInUse,f,c
  7545  001044  0E00               	movlw	0
  7546  001046  2213               	addwfc	??_Heap_IsIdInUse+1,f,c
  7547  001048  5012               	movf	??_Heap_IsIdInUse,w,c
  7548  00104A  2618               	addwf	Heap_IsIdInUse@offset,f,c
  7549  00104C  5013               	movf	??_Heap_IsIdInUse+1,w,c
  7550  00104E  2219               	addwfc	Heap_IsIdInUse@offset+1,f,c
  7551  001050                     l2078:
  7552  001050  0E00               	movlw	0
  7553  001052  5C18               	subwf	Heap_IsIdInUse@offset,w,c
  7554  001054  0E04               	movlw	4
  7555  001056  5819               	subwfb	Heap_IsIdInUse@offset+1,w,c
  7556  001058  A0D8               	btfss	status,0,c
  7557  00105A  D7A2               	goto	l2060
  7558                           
  7559                           ;Heap.c: 37: }
  7560                           ;Heap.c: 39: return 0x00;
  7561  00105C  0E00               	movlw	0
  7562  00105E                     l237:
  7563  00105E  0012               	return	
  7564  001060                     __end_of_Heap_IsIdInUse:
  7565                           	opt stack 0
  7566                           tblptru	equ	0xFF8
  7567                           tblptrh	equ	0xFF7
  7568                           tblptrl	equ	0xFF6
  7569                           tablat	equ	0xFF5
  7570                           prodh	equ	0xFF4
  7571                           prodl	equ	0xFF3
  7572                           intcon	equ	0xFF2
  7573                           postinc0	equ	0xFEE
  7574                           wreg	equ	0xFE8
  7575                           indf1	equ	0xFE7
  7576                           postinc1	equ	0xFE6
  7577                           postdec1	equ	0xFE5
  7578                           fsr1h	equ	0xFE2
  7579                           fsr1l	equ	0xFE1
  7580                           indf2	equ	0xFDF
  7581                           postinc2	equ	0xFDE
  7582                           postdec2	equ	0xFDD
  7583                           fsr2h	equ	0xFDA
  7584                           fsr2l	equ	0xFD9
  7585                           status	equ	0xFD8
  7586                           
  7587 ;; *************** function _Heap_Init *****************
  7588 ;; Defined at:
  7589 ;;		line 11 in file "src/JVM/Heap.c"
  7590 ;; Parameters:    Size  Location     Type
  7591 ;;		None
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;  heap            2   15[COMRAM] PTR struct .
  7594 ;;		 -> Heap(1024), 
  7595 ;; Return value:  Size  Location     Type
  7596 ;;		None               void
  7597 ;; Registers used:
  7598 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7599 ;; Tracked objects:
  7600 ;;		On entry : 0/0
  7601 ;;		On exit  : 0/0
  7602 ;;		Unchanged: 0/0
  7603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7604 ;;      Params:         0       0       0       0       0       0       0
  7605 ;;      Locals:         2       0       0       0       0       0       0
  7606 ;;      Temps:          0       0       0       0       0       0       0
  7607 ;;      Totals:         2       0       0       0       0       0       0
  7608 ;;Total ram usage:        2 bytes
  7609 ;; Hardware stack levels used:    1
  7610 ;; Hardware stack levels required when called:    2
  7611 ;; This function calls:
  7612 ;;		Nothing
  7613 ;; This function is called by:
  7614 ;;		_Jvm_Init
  7615 ;; This function uses a non-reentrant model
  7616 ;;
  7617                           
  7618                           	psect	text34
  7619  001B34                     __ptext34:
  7620                           	opt stack 0
  7621  001B34                     _Heap_Init:
  7622                           	opt stack 27
  7623                           
  7624                           ;Heap.c: 13: heap_t *heap = (heap_t *) &Heap[0];
  7625                           
  7626                           ;incstack = 0
  7627  001B34  0E00               	movlw	high _Heap
  7628  001B36  6E11               	movwf	Heap_Init@heap+1,c
  7629  001B38  0ED7               	movlw	low _Heap
  7630  001B3A  6E10               	movwf	Heap_Init@heap,c
  7631                           
  7632                           ;Heap.c: 14: heap->id = 0;
  7633  001B3C  C010  FFD9         	movff	Heap_Init@heap,fsr2l
  7634  001B40  C011  FFDA         	movff	Heap_Init@heap+1,fsr2h
  7635  001B44  0E00               	movlw	0
  7636  001B46  6EDF               	movwf	indf2,c
  7637                           
  7638                           ;Heap.c: 15: heap->size = sizeof(Heap) - sizeof(heap_t);
  7639  001B48  EE20 F002          	lfsr	2,2
  7640  001B4C  5010               	movf	Heap_Init@heap,w,c
  7641  001B4E  26D9               	addwf	fsr2l,f,c
  7642  001B50  5011               	movf	Heap_Init@heap+1,w,c
  7643  001B52  22DA               	addwfc	fsr2h,f,c
  7644  001B54  0EFC               	movlw	252
  7645  001B56  6EDE               	movwf	postinc2,c
  7646  001B58  0E03               	movlw	3
  7647  001B5A  6EDD               	movwf	postdec2,c
  7648  001B5C  0012               	return	
  7649  001B5E                     __end_of_Heap_Init:
  7650                           	opt stack 0
  7651                           tblptru	equ	0xFF8
  7652                           tblptrh	equ	0xFF7
  7653                           tblptrl	equ	0xFF6
  7654                           tablat	equ	0xFF5
  7655                           prodh	equ	0xFF4
  7656                           prodl	equ	0xFF3
  7657                           intcon	equ	0xFF2
  7658                           postinc0	equ	0xFEE
  7659                           wreg	equ	0xFE8
  7660                           indf1	equ	0xFE7
  7661                           postinc1	equ	0xFE6
  7662                           postdec1	equ	0xFE5
  7663                           fsr1h	equ	0xFE2
  7664                           fsr1l	equ	0xFE1
  7665                           indf2	equ	0xFDF
  7666                           postinc2	equ	0xFDE
  7667                           postdec2	equ	0xFDD
  7668                           fsr2h	equ	0xFDA
  7669                           fsr2l	equ	0xFD9
  7670                           status	equ	0xFD8
  7671                           
  7672 ;; *************** function _JavaClass_Init *****************
  7673 ;; Defined at:
  7674 ;;		line 7 in file "src/Java/JavaClass.c"
  7675 ;; Parameters:    Size  Location     Type
  7676 ;;		None
  7677 ;; Auto vars:     Size  Location     Type
  7678 ;;		None
  7679 ;; Return value:  Size  Location     Type
  7680 ;;		None               void
  7681 ;; Registers used:
  7682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7683 ;; Tracked objects:
  7684 ;;		On entry : 0/0
  7685 ;;		On exit  : 0/0
  7686 ;;		Unchanged: 0/0
  7687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7688 ;;      Params:         0       0       0       0       0       0       0
  7689 ;;      Locals:         0       0       0       0       0       0       0
  7690 ;;      Temps:          3       0       0       0       0       0       0
  7691 ;;      Totals:         3       0       0       0       0       0       0
  7692 ;;Total ram usage:        3 bytes
  7693 ;; Hardware stack levels used:    1
  7694 ;; Hardware stack levels required when called:    5
  7695 ;; This function calls:
  7696 ;;		_Mm_GetU08
  7697 ;; This function is called by:
  7698 ;;		_main
  7699 ;; This function uses a non-reentrant model
  7700 ;;
  7701                           
  7702                           	psect	text35
  7703  001BF0                     __ptext35:
  7704                           	opt stack 0
  7705  001BF0                     _JavaClass_Init:
  7706                           	opt stack 25
  7707                           
  7708                           ;JavaClass.c: 9: if (0x01 != (Mm_GetU08((uint32_t) &((javaclass_header_t *) JavaClass_Da
      +                          ta)->version))) {
  7709                           
  7710                           ;incstack = 0
  7711  001BF0  0EFB               	movlw	low _JavaClass_Data
  7712  001BF2  6E29               	movwf	??_JavaClass_Init& (0+255),c
  7713  001BF4  0E7B               	movlw	high _JavaClass_Data
  7714  001BF6  6E2A               	movwf	(??_JavaClass_Init+1)& (0+255),c
  7715  001BF8  C029  F024         	movff	??_JavaClass_Init,Mm_GetU08@address
  7716  001BFC  C02A  F025         	movff	??_JavaClass_Init+1,Mm_GetU08@address+1
  7717  001C00  6A26               	clrf	Mm_GetU08@address+2,c
  7718  001C02  6A27               	clrf	Mm_GetU08@address+3,c
  7719  001C04  EC3F  F00D         	call	_Mm_GetU08	;wreg free
  7720  001C08  6E2B               	movwf	(??_JavaClass_Init+2)& (0+255),c
  7721  001C0A  042B               	decf	??_JavaClass_Init+2,w,c
  7722  001C0C  A4D8               	btfss	status,2,c
  7723  001C0E                     l80:
  7724  001C0E  D7FF               	goto	l80
  7725  001C10  0012               	return	
  7726  001C12                     __end_of_JavaClass_Init:
  7727                           	opt stack 0
  7728                           tblptru	equ	0xFF8
  7729                           tblptrh	equ	0xFF7
  7730                           tblptrl	equ	0xFF6
  7731                           tablat	equ	0xFF5
  7732                           prodh	equ	0xFF4
  7733                           prodl	equ	0xFF3
  7734                           intcon	equ	0xFF2
  7735                           postinc0	equ	0xFEE
  7736                           wreg	equ	0xFE8
  7737                           indf1	equ	0xFE7
  7738                           postinc1	equ	0xFE6
  7739                           postdec1	equ	0xFE5
  7740                           fsr1h	equ	0xFE2
  7741                           fsr1l	equ	0xFE1
  7742                           indf2	equ	0xFDF
  7743                           postinc2	equ	0xFDE
  7744                           postdec2	equ	0xFDD
  7745                           fsr2h	equ	0xFDA
  7746                           fsr2l	equ	0xFD9
  7747                           status	equ	0xFD8
  7748                           
  7749 ;; *************** function _Mm_GetU08 *****************
  7750 ;; Defined at:
  7751 ;;		line 15 in file "src/MemoryManagement/MemoryManagement.c"
  7752 ;; Parameters:    Size  Location     Type
  7753 ;;  address         4   35[COMRAM] unsigned long 
  7754 ;; Auto vars:     Size  Location     Type
  7755 ;;  value           1   39[COMRAM] unsigned char 
  7756 ;; Return value:  Size  Location     Type
  7757 ;;                  1    wreg      unsigned char 
  7758 ;; Registers used:
  7759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7760 ;; Tracked objects:
  7761 ;;		On entry : 0/0
  7762 ;;		On exit  : 0/0
  7763 ;;		Unchanged: 0/0
  7764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7765 ;;      Params:         4       0       0       0       0       0       0
  7766 ;;      Locals:         1       0       0       0       0       0       0
  7767 ;;      Temps:          0       0       0       0       0       0       0
  7768 ;;      Totals:         5       0       0       0       0       0       0
  7769 ;;Total ram usage:        5 bytes
  7770 ;; Hardware stack levels used:    1
  7771 ;; Hardware stack levels required when called:    4
  7772 ;; This function calls:
  7773 ;;		_Mm_ReadNVM
  7774 ;; This function is called by:
  7775 ;;		_JavaClass_Init
  7776 ;;		_Jvm_Main
  7777 ;;		_Jvm_RunMethod
  7778 ;;		_Stack_Init
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           
  7782                           	psect	text36
  7783  001A7E                     __ptext36:
  7784                           	opt stack 0
  7785  001A7E                     _Mm_GetU08:
  7786                           	opt stack 25
  7787                           
  7788                           ;MemoryManagement.c: 17: uint8_t value = 0x00;
  7789                           
  7790                           ;incstack = 0
  7791  001A7E  0E00               	movlw	0
  7792  001A80  6E28               	movwf	Mm_GetU08@value,c
  7793                           
  7794                           ;MemoryManagement.c: 18: Mm_ReadNVM((uint32_t) address, 1, (uint8_t *) &value);
  7795  001A82  C024  F01A         	movff	Mm_GetU08@address,Mm_ReadNVM@address
  7796  001A86  C025  F01B         	movff	Mm_GetU08@address+1,Mm_ReadNVM@address+1
  7797  001A8A  C026  F01C         	movff	Mm_GetU08@address+2,Mm_ReadNVM@address+2
  7798  001A8E  C027  F01D         	movff	Mm_GetU08@address+3,Mm_ReadNVM@address+3
  7799  001A92  0E01               	movlw	1
  7800  001A94  6E1E               	movwf	Mm_ReadNVM@bytes,c
  7801  001A96  0E00               	movlw	0
  7802  001A98  6E1F               	movwf	Mm_ReadNVM@bytes+1,c
  7803  001A9A  0E00               	movlw	0
  7804  001A9C  6E20               	movwf	Mm_ReadNVM@bytes+2,c
  7805  001A9E  0E00               	movlw	0
  7806  001AA0  6E21               	movwf	Mm_ReadNVM@bytes+3,c
  7807  001AA2  0E00               	movlw	high Mm_GetU08@value
  7808  001AA4  6E23               	movwf	Mm_ReadNVM@data+1,c
  7809  001AA6  0E28               	movlw	low Mm_GetU08@value
  7810  001AA8  6E22               	movwf	Mm_ReadNVM@data,c
  7811  001AAA  EC78  F009         	call	_Mm_ReadNVM	;wreg free
  7812                           
  7813                           ;MemoryManagement.c: 19: return value;
  7814  001AAE  5028               	movf	Mm_GetU08@value,w,c
  7815  001AB0  0012               	return	
  7816  001AB2                     __end_of_Mm_GetU08:
  7817                           	opt stack 0
  7818                           tblptru	equ	0xFF8
  7819                           tblptrh	equ	0xFF7
  7820                           tblptrl	equ	0xFF6
  7821                           tablat	equ	0xFF5
  7822                           prodh	equ	0xFF4
  7823                           prodl	equ	0xFF3
  7824                           intcon	equ	0xFF2
  7825                           postinc0	equ	0xFEE
  7826                           wreg	equ	0xFE8
  7827                           indf1	equ	0xFE7
  7828                           postinc1	equ	0xFE6
  7829                           postdec1	equ	0xFE5
  7830                           fsr1h	equ	0xFE2
  7831                           fsr1l	equ	0xFE1
  7832                           indf2	equ	0xFDF
  7833                           postinc2	equ	0xFDE
  7834                           postdec2	equ	0xFDD
  7835                           fsr2h	equ	0xFDA
  7836                           fsr2l	equ	0xFD9
  7837                           status	equ	0xFD8
  7838                           
  7839 ;; *************** function _Mm_ReadNVM *****************
  7840 ;; Defined at:
  7841 ;;		line 66 in file "src/MemoryManagement/PIC18F4520/MemoryManagement_PIC18F4520.c"
  7842 ;; Parameters:    Size  Location     Type
  7843 ;;  address         4   25[COMRAM] unsigned long 
  7844 ;;  bytes           4   29[COMRAM] unsigned long 
  7845 ;;  data            2   33[COMRAM] PTR unsigned char 
  7846 ;;		 -> Mm_GetU16@value(2), Mm_GetU08@value(1), Jvm_RunMethod@method(8), 
  7847 ;; Auto vars:     Size  Location     Type
  7848 ;;		None
  7849 ;; Return value:  Size  Location     Type
  7850 ;;		None               void
  7851 ;; Registers used:
  7852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7853 ;; Tracked objects:
  7854 ;;		On entry : 0/0
  7855 ;;		On exit  : 0/0
  7856 ;;		Unchanged: 0/0
  7857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7858 ;;      Params:        10       0       0       0       0       0       0
  7859 ;;      Locals:         0       0       0       0       0       0       0
  7860 ;;      Temps:          0       0       0       0       0       0       0
  7861 ;;      Totals:        10       0       0       0       0       0       0
  7862 ;;Total ram usage:       10 bytes
  7863 ;; Hardware stack levels used:    1
  7864 ;; Hardware stack levels required when called:    3
  7865 ;; This function calls:
  7866 ;;		_Mm_IsAddressEEPROM
  7867 ;;		_Mm_IsAddressFlash
  7868 ;;		_Mm_ReadEEPROM
  7869 ;;		_Mm_ReadFlash
  7870 ;; This function is called by:
  7871 ;;		_Jvm_RunMethod
  7872 ;;		_Mm_GetU08
  7873 ;;		_Mm_GetU16
  7874 ;; This function uses a non-reentrant model
  7875 ;;
  7876                           
  7877                           	psect	text37
  7878  0012F0                     __ptext37:
  7879                           	opt stack 0
  7880  0012F0                     _Mm_ReadNVM:
  7881                           	opt stack 25
  7882                           
  7883                           ;MemoryManagement_PIC18F4520.c: 68: if (Mm_IsAddressEEPROM(address)) {
  7884                           
  7885                           ;incstack = 0
  7886  0012F0  C01A  F010         	movff	Mm_ReadNVM@address,Mm_IsAddressEEPROM@address
  7887  0012F4  C01B  F011         	movff	Mm_ReadNVM@address+1,Mm_IsAddressEEPROM@address+1
  7888  0012F8  C01C  F012         	movff	Mm_ReadNVM@address+2,Mm_IsAddressEEPROM@address+2
  7889  0012FC  C01D  F013         	movff	Mm_ReadNVM@address+3,Mm_IsAddressEEPROM@address+3
  7890  001300  EC59  F00D         	call	_Mm_IsAddressEEPROM	;wreg free
  7891  001304  0900               	iorlw	0
  7892  001306  B4D8               	btfsc	status,2,c
  7893  001308  D017               	goto	l2968
  7894                           
  7895                           ;MemoryManagement_PIC18F4520.c: 69: Mm_ReadEEPROM(address, bytes, data);
  7896  00130A  C01A  F010         	movff	Mm_ReadNVM@address,Mm_ReadEEPROM@address
  7897  00130E  C01B  F011         	movff	Mm_ReadNVM@address+1,Mm_ReadEEPROM@address+1
  7898  001312  C01C  F012         	movff	Mm_ReadNVM@address+2,Mm_ReadEEPROM@address+2
  7899  001316  C01D  F013         	movff	Mm_ReadNVM@address+3,Mm_ReadEEPROM@address+3
  7900  00131A  C01E  F014         	movff	Mm_ReadNVM@bytes,Mm_ReadEEPROM@bytes
  7901  00131E  C01F  F015         	movff	Mm_ReadNVM@bytes+1,Mm_ReadEEPROM@bytes+1
  7902  001322  C020  F016         	movff	Mm_ReadNVM@bytes+2,Mm_ReadEEPROM@bytes+2
  7903  001326  C021  F017         	movff	Mm_ReadNVM@bytes+3,Mm_ReadEEPROM@bytes+3
  7904  00132A  C023  F019         	movff	Mm_ReadNVM@data+1,Mm_ReadEEPROM@data+1
  7905  00132E  C022  F018         	movff	Mm_ReadNVM@data,Mm_ReadEEPROM@data
  7906  001332  EC19  F00C         	call	_Mm_ReadEEPROM	;wreg free
  7907                           
  7908                           ;MemoryManagement_PIC18F4520.c: 70: } else if (Mm_IsAddressFlash(address)) {
  7909  001336  D023               	goto	l422
  7910  001338                     l2968:
  7911  001338  C01A  F010         	movff	Mm_ReadNVM@address,Mm_IsAddressFlash@address
  7912  00133C  C01B  F011         	movff	Mm_ReadNVM@address+1,Mm_IsAddressFlash@address+1
  7913  001340  C01C  F012         	movff	Mm_ReadNVM@address+2,Mm_IsAddressFlash@address+2
  7914  001344  C01D  F013         	movff	Mm_ReadNVM@address+3,Mm_IsAddressFlash@address+3
  7915  001348  ECC6  F00C         	call	_Mm_IsAddressFlash	;wreg free
  7916  00134C  0900               	iorlw	0
  7917  00134E  B4D8               	btfsc	status,2,c
  7918  001350  D016               	goto	l422
  7919                           
  7920                           ;MemoryManagement_PIC18F4520.c: 71: Mm_ReadFlash(address, bytes, data);
  7921  001352  C01A  F010         	movff	Mm_ReadNVM@address,Mm_ReadFlash@address
  7922  001356  C01B  F011         	movff	Mm_ReadNVM@address+1,Mm_ReadFlash@address+1
  7923  00135A  C01C  F012         	movff	Mm_ReadNVM@address+2,Mm_ReadFlash@address+2
  7924  00135E  C01D  F013         	movff	Mm_ReadNVM@address+3,Mm_ReadFlash@address+3
  7925  001362  C01E  F014         	movff	Mm_ReadNVM@bytes,Mm_ReadFlash@bytes
  7926  001366  C01F  F015         	movff	Mm_ReadNVM@bytes+1,Mm_ReadFlash@bytes+1
  7927  00136A  C020  F016         	movff	Mm_ReadNVM@bytes+2,Mm_ReadFlash@bytes+2
  7928  00136E  C021  F017         	movff	Mm_ReadNVM@bytes+3,Mm_ReadFlash@bytes+3
  7929  001372  C023  F019         	movff	Mm_ReadNVM@data+1,Mm_ReadFlash@data+1
  7930  001376  C022  F018         	movff	Mm_ReadNVM@data,Mm_ReadFlash@data
  7931  00137A  ECF4  F00B         	call	_Mm_ReadFlash	;wreg free
  7932  00137E                     l422:
  7933  00137E  0012               	return	
  7934  001380                     __end_of_Mm_ReadNVM:
  7935                           	opt stack 0
  7936                           tblptru	equ	0xFF8
  7937                           tblptrh	equ	0xFF7
  7938                           tblptrl	equ	0xFF6
  7939                           tablat	equ	0xFF5
  7940                           prodh	equ	0xFF4
  7941                           prodl	equ	0xFF3
  7942                           intcon	equ	0xFF2
  7943                           postinc0	equ	0xFEE
  7944                           wreg	equ	0xFE8
  7945                           indf1	equ	0xFE7
  7946                           postinc1	equ	0xFE6
  7947                           postdec1	equ	0xFE5
  7948                           fsr1h	equ	0xFE2
  7949                           fsr1l	equ	0xFE1
  7950                           indf2	equ	0xFDF
  7951                           postinc2	equ	0xFDE
  7952                           postdec2	equ	0xFDD
  7953                           fsr2h	equ	0xFDA
  7954                           fsr2l	equ	0xFD9
  7955                           status	equ	0xFD8
  7956                           
  7957 ;; *************** function _Mm_ReadFlash *****************
  7958 ;; Defined at:
  7959 ;;		line 52 in file "src/MemoryManagement/PIC18F4520/MemoryManagement_PIC18F4520.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;  address         4   15[COMRAM] unsigned long 
  7962 ;;  bytes           4   19[COMRAM] unsigned long 
  7963 ;;  data            2   23[COMRAM] PTR unsigned char 
  7964 ;;		 -> Mm_WriteFlash@block(64), Mm_GetU16@value(2), Mm_GetU08@value(1), Jvm_RunMethod@method(8), 
  7965 ;; Auto vars:     Size  Location     Type
  7966 ;;		None
  7967 ;; Return value:  Size  Location     Type
  7968 ;;		None               void
  7969 ;; Registers used:
  7970 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7971 ;; Tracked objects:
  7972 ;;		On entry : 0/0
  7973 ;;		On exit  : 0/0
  7974 ;;		Unchanged: 0/0
  7975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7976 ;;      Params:        10       0       0       0       0       0       0
  7977 ;;      Locals:         0       0       0       0       0       0       0
  7978 ;;      Temps:          0       0       0       0       0       0       0
  7979 ;;      Totals:        10       0       0       0       0       0       0
  7980 ;;Total ram usage:       10 bytes
  7981 ;; Hardware stack levels used:    1
  7982 ;; Hardware stack levels required when called:    2
  7983 ;; This function calls:
  7984 ;;		Nothing
  7985 ;; This function is called by:
  7986 ;;		_Mm_ReadNVM
  7987 ;;		_Mm_WriteFlash
  7988 ;; This function uses a non-reentrant model
  7989 ;;
  7990                           
  7991                           	psect	text38
  7992  0017E8                     __ptext38:
  7993                           	opt stack 0
  7994  0017E8                     _Mm_ReadFlash:
  7995                           	opt stack 23
  7996                           
  7997                           ;MemoryManagement_PIC18F4520.c: 54: TBLPTR = address;
  7998                           
  7999                           ;incstack = 0
  8000  0017E8  C010  FFF6         	movff	Mm_ReadFlash@address,tblptrl	;volatile
  8001  0017EC  C011  FFF7         	movff	Mm_ReadFlash@address+1,tblptrh	;volatile
  8002  0017F0  C012  FFF8         	movff	Mm_ReadFlash@address+2,tblptru	;volatile
  8003                           
  8004                           ;MemoryManagement_PIC18F4520.c: 56: while(bytes--)
  8005  0017F4  D009               	goto	l2876
  8006  0017F6                     l413:
  8007  0017F6  0009               	tblrd		*+	;# 
  8008                           
  8009                           ;MemoryManagement_PIC18F4520.c: 59: *data++ = TABLAT;
  8010  0017F8  C018  FFD9         	movff	Mm_ReadFlash@data,fsr2l
  8011  0017FC  C019  FFDA         	movff	Mm_ReadFlash@data+1,fsr2h
  8012  001800  CFF5 FFDF          	movff	tablat,indf2	;volatile
  8013  001804  4A18               	infsnz	Mm_ReadFlash@data,f,c
  8014  001806  2A19               	incf	Mm_ReadFlash@data+1,f,c
  8015  001808                     l2876:
  8016  001808  0614               	decf	Mm_ReadFlash@bytes,f,c
  8017  00180A  0E00               	movlw	0
  8018  00180C  5A15               	subwfb	Mm_ReadFlash@bytes+1,f,c
  8019  00180E  5A16               	subwfb	Mm_ReadFlash@bytes+2,f,c
  8020  001810  5A17               	subwfb	Mm_ReadFlash@bytes+3,f,c
  8021  001812  2814               	incf	Mm_ReadFlash@bytes& (0+255),w,c
  8022  001814  B4D8               	btfsc	status,2,c
  8023  001816  2815               	incf	(Mm_ReadFlash@bytes+1)& (0+255),w,c
  8024  001818  B4D8               	btfsc	status,2,c
  8025  00181A  2816               	incf	(Mm_ReadFlash@bytes+2)& (0+255),w,c
  8026  00181C  B4D8               	btfsc	status,2,c
  8027  00181E  2817               	incf	(Mm_ReadFlash@bytes+3)& (0+255),w,c
  8028  001820  A4D8               	btfss	status,2,c
  8029  001822  D7E9               	goto	l413
  8030                           
  8031                           ;MemoryManagement_PIC18F4520.c: 60: }
  8032                           ;MemoryManagement_PIC18F4520.c: 63: TBLPTR = address;
  8033  001824  C010  FFF6         	movff	Mm_ReadFlash@address,tblptrl	;volatile
  8034  001828  C011  FFF7         	movff	Mm_ReadFlash@address+1,tblptrh	;volatile
  8035  00182C  C012  FFF8         	movff	Mm_ReadFlash@address+2,tblptru	;volatile
  8036  001830  0012               	return	
  8037  001832                     __end_of_Mm_ReadFlash:
  8038                           	opt stack 0
  8039                           tblptru	equ	0xFF8
  8040                           tblptrh	equ	0xFF7
  8041                           tblptrl	equ	0xFF6
  8042                           tablat	equ	0xFF5
  8043                           prodh	equ	0xFF4
  8044                           prodl	equ	0xFF3
  8045                           intcon	equ	0xFF2
  8046                           postinc0	equ	0xFEE
  8047                           wreg	equ	0xFE8
  8048                           indf1	equ	0xFE7
  8049                           postinc1	equ	0xFE6
  8050                           postdec1	equ	0xFE5
  8051                           fsr1h	equ	0xFE2
  8052                           fsr1l	equ	0xFE1
  8053                           indf2	equ	0xFDF
  8054                           postinc2	equ	0xFDE
  8055                           postdec2	equ	0xFDD
  8056                           fsr2h	equ	0xFDA
  8057                           fsr2l	equ	0xFD9
  8058                           status	equ	0xFD8
  8059                           
  8060 ;; *************** function _Mm_ReadEEPROM *****************
  8061 ;; Defined at:
  8062 ;;		line 35 in file "src/MemoryManagement/PIC18F4520/MemoryManagement_PIC18F4520.c"
  8063 ;; Parameters:    Size  Location     Type
  8064 ;;  address         4   15[COMRAM] unsigned long 
  8065 ;;  bytes           4   19[COMRAM] unsigned long 
  8066 ;;  data            2   23[COMRAM] PTR unsigned char 
  8067 ;;		 -> Mm_GetU16@value(2), Mm_GetU08@value(1), Jvm_RunMethod@method(8), 
  8068 ;; Auto vars:     Size  Location     Type
  8069 ;;		None
  8070 ;; Return value:  Size  Location     Type
  8071 ;;		None               void
  8072 ;; Registers used:
  8073 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8074 ;; Tracked objects:
  8075 ;;		On entry : 0/0
  8076 ;;		On exit  : 0/0
  8077 ;;		Unchanged: 0/0
  8078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8079 ;;      Params:        10       0       0       0       0       0       0
  8080 ;;      Locals:         0       0       0       0       0       0       0
  8081 ;;      Temps:          0       0       0       0       0       0       0
  8082 ;;      Totals:        10       0       0       0       0       0       0
  8083 ;;Total ram usage:       10 bytes
  8084 ;; Hardware stack levels used:    1
  8085 ;; Hardware stack levels required when called:    2
  8086 ;; This function calls:
  8087 ;;		Nothing
  8088 ;; This function is called by:
  8089 ;;		_Mm_ReadNVM
  8090 ;; This function uses a non-reentrant model
  8091 ;;
  8092                           
  8093                           	psect	text39
  8094  001832                     __ptext39:
  8095                           	opt stack 0
  8096  001832                     _Mm_ReadEEPROM:
  8097                           	opt stack 25
  8098                           
  8099                           ;MemoryManagement_PIC18F4520.c: 37: while(bytes--)
  8100                           
  8101                           ;incstack = 0
  8102  001832  D015               	goto	l2136
  8103  001834                     l407:
  8104                           
  8105                           ;MemoryManagement_PIC18F4520.c: 38: {
  8106                           ;MemoryManagement_PIC18F4520.c: 39: EEADR = (address & (uint32_t) 0x000000FF);
  8107  001834  C010  FFA9         	movff	Mm_ReadEEPROM@address,4009	;volatile
  8108                           
  8109                           ;MemoryManagement_PIC18F4520.c: 40: EECON1bits.EEPGD = 0;
  8110  001838  9EA6               	bcf	4006,7,c	;volatile
  8111                           
  8112                           ;MemoryManagement_PIC18F4520.c: 41: EECON1bits.CFGS = 0;
  8113  00183A  9CA6               	bcf	4006,6,c	;volatile
  8114                           
  8115                           ;MemoryManagement_PIC18F4520.c: 42: EECON1bits.RD = 1;
  8116  00183C  80A6               	bsf	4006,0,c	;volatile
  8117                           
  8118                           ;MemoryManagement_PIC18F4520.c: 44: __nop();
  8119  00183E  F000               	nop	
  8120                           
  8121                           ;MemoryManagement_PIC18F4520.c: 45: __nop();
  8122  001840  F000               	nop	
  8123                           
  8124                           ;MemoryManagement_PIC18F4520.c: 47: *data++ = EEDATA;
  8125  001842  C018  FFD9         	movff	Mm_ReadEEPROM@data,fsr2l
  8126  001846  C019  FFDA         	movff	Mm_ReadEEPROM@data+1,fsr2h
  8127  00184A  CFA8 FFDF          	movff	4008,indf2	;volatile
  8128  00184E  4A18               	infsnz	Mm_ReadEEPROM@data,f,c
  8129  001850  2A19               	incf	Mm_ReadEEPROM@data+1,f,c
  8130                           
  8131                           ;MemoryManagement_PIC18F4520.c: 48: address++;
  8132  001852  0E01               	movlw	1
  8133  001854  2610               	addwf	Mm_ReadEEPROM@address,f,c
  8134  001856  0E00               	movlw	0
  8135  001858  2211               	addwfc	Mm_ReadEEPROM@address+1,f,c
  8136  00185A  2212               	addwfc	Mm_ReadEEPROM@address+2,f,c
  8137  00185C  2213               	addwfc	Mm_ReadEEPROM@address+3,f,c
  8138  00185E                     l2136:
  8139  00185E  0614               	decf	Mm_ReadEEPROM@bytes,f,c
  8140  001860  0E00               	movlw	0
  8141  001862  5A15               	subwfb	Mm_ReadEEPROM@bytes+1,f,c
  8142  001864  5A16               	subwfb	Mm_ReadEEPROM@bytes+2,f,c
  8143  001866  5A17               	subwfb	Mm_ReadEEPROM@bytes+3,f,c
  8144  001868  2814               	incf	Mm_ReadEEPROM@bytes& (0+255),w,c
  8145  00186A  B4D8               	btfsc	status,2,c
  8146  00186C  2815               	incf	(Mm_ReadEEPROM@bytes+1)& (0+255),w,c
  8147  00186E  B4D8               	btfsc	status,2,c
  8148  001870  2816               	incf	(Mm_ReadEEPROM@bytes+2)& (0+255),w,c
  8149  001872  B4D8               	btfsc	status,2,c
  8150  001874  2817               	incf	(Mm_ReadEEPROM@bytes+3)& (0+255),w,c
  8151  001876  B4D8               	btfsc	status,2,c
  8152  001878  0012               	return	
  8153  00187A  D7DC               	goto	l407
  8154  00187C                     __end_of_Mm_ReadEEPROM:
  8155                           	opt stack 0
  8156                           tblptru	equ	0xFF8
  8157                           tblptrh	equ	0xFF7
  8158                           tblptrl	equ	0xFF6
  8159                           tablat	equ	0xFF5
  8160                           prodh	equ	0xFF4
  8161                           prodl	equ	0xFF3
  8162                           intcon	equ	0xFF2
  8163                           postinc0	equ	0xFEE
  8164                           wreg	equ	0xFE8
  8165                           indf1	equ	0xFE7
  8166                           postinc1	equ	0xFE6
  8167                           postdec1	equ	0xFE5
  8168                           fsr1h	equ	0xFE2
  8169                           fsr1l	equ	0xFE1
  8170                           indf2	equ	0xFDF
  8171                           postinc2	equ	0xFDE
  8172                           postdec2	equ	0xFDD
  8173                           fsr2h	equ	0xFDA
  8174                           fsr2l	equ	0xFD9
  8175                           status	equ	0xFD8
  8176                           
  8177 ;; *************** function _Mm_IsAddressFlash *****************
  8178 ;; Defined at:
  8179 ;;		line 25 in file "src/MemoryManagement/PIC18F4520/MemoryManagement_PIC18F4520.c"
  8180 ;; Parameters:    Size  Location     Type
  8181 ;;  address         4   15[COMRAM] unsigned long 
  8182 ;; Auto vars:     Size  Location     Type
  8183 ;;		None
  8184 ;; Return value:  Size  Location     Type
  8185 ;;                  1    wreg      unsigned char 
  8186 ;; Registers used:
  8187 ;;		wreg, status,2, status,0
  8188 ;; Tracked objects:
  8189 ;;		On entry : 0/0
  8190 ;;		On exit  : 0/0
  8191 ;;		Unchanged: 0/0
  8192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8193 ;;      Params:         4       0       0       0       0       0       0
  8194 ;;      Locals:         0       0       0       0       0       0       0
  8195 ;;      Temps:          4       0       0       0       0       0       0
  8196 ;;      Totals:         8       0       0       0       0       0       0
  8197 ;;Total ram usage:        8 bytes
  8198 ;; Hardware stack levels used:    1
  8199 ;; Hardware stack levels required when called:    2
  8200 ;; This function calls:
  8201 ;;		Nothing
  8202 ;; This function is called by:
  8203 ;;		_Mm_ReadNVM
  8204 ;;		_Mm_WriteNVM
  8205 ;; This function uses a non-reentrant model
  8206 ;;
  8207                           
  8208                           	psect	text40
  8209  00198C                     __ptext40:
  8210                           	opt stack 0
  8211  00198C                     _Mm_IsAddressFlash:
  8212                           	opt stack 24
  8213                           
  8214                           ;MemoryManagement_PIC18F4520.c: 27: if (((uint32_t) 0x00000800 <= address) &&
  8215                           ;MemoryManagement_PIC18F4520.c: 28: ((uint32_t) ((uint32_t) 0x00000800 + (uint32_t) 0x00
      +                          0077FF) >= address)) {
  8216                           
  8217                           ;incstack = 0
  8218  00198C  0E00               	movlw	0
  8219  00198E  5C10               	subwf	Mm_IsAddressFlash@address,w,c
  8220  001990  0E08               	movlw	8
  8221  001992  5811               	subwfb	Mm_IsAddressFlash@address+1,w,c
  8222  001994  0E00               	movlw	0
  8223  001996  5812               	subwfb	Mm_IsAddressFlash@address+2,w,c
  8224  001998  0E00               	movlw	0
  8225  00199A  5813               	subwfb	Mm_IsAddressFlash@address+3,w,c
  8226  00199C  A0D8               	btfss	status,0,c
  8227  00199E  D014               	goto	l2914
  8228  0019A0  0E00               	movlw	0
  8229  0019A2  6E14               	movwf	??_Mm_IsAddressFlash& (0+255),c
  8230  0019A4  0E80               	movlw	128
  8231  0019A6  6E15               	movwf	(??_Mm_IsAddressFlash+1)& (0+255),c
  8232  0019A8  0E00               	movlw	0
  8233  0019AA  6E16               	movwf	(??_Mm_IsAddressFlash+2)& (0+255),c
  8234  0019AC  0E00               	movlw	0
  8235  0019AE  6E17               	movwf	(??_Mm_IsAddressFlash+3)& (0+255),c
  8236  0019B0  5014               	movf	??_Mm_IsAddressFlash,w,c
  8237  0019B2  5C10               	subwf	Mm_IsAddressFlash@address,w,c
  8238  0019B4  5015               	movf	??_Mm_IsAddressFlash+1,w,c
  8239  0019B6  5811               	subwfb	Mm_IsAddressFlash@address+1,w,c
  8240  0019B8  5016               	movf	??_Mm_IsAddressFlash+2,w,c
  8241  0019BA  5812               	subwfb	Mm_IsAddressFlash@address+2,w,c
  8242  0019BC  5017               	movf	??_Mm_IsAddressFlash+3,w,c
  8243  0019BE  5813               	subwfb	Mm_IsAddressFlash@address+3,w,c
  8244  0019C0  B0D8               	btfsc	status,0,c
  8245  0019C2  D002               	goto	l2914
  8246                           
  8247                           ;MemoryManagement_PIC18F4520.c: 29: return 0x01;
  8248  0019C4  0E01               	movlw	1
  8249  0019C6  D001               	goto	l403
  8250  0019C8                     l2914:
  8251                           
  8252                           ;MemoryManagement_PIC18F4520.c: 30: }
  8253                           ;MemoryManagement_PIC18F4520.c: 32: return 0x00;
  8254  0019C8  0E00               	movlw	0
  8255  0019CA                     l403:
  8256  0019CA  0012               	return	
  8257  0019CC                     __end_of_Mm_IsAddressFlash:
  8258                           	opt stack 0
  8259                           tblptru	equ	0xFF8
  8260                           tblptrh	equ	0xFF7
  8261                           tblptrl	equ	0xFF6
  8262                           tablat	equ	0xFF5
  8263                           prodh	equ	0xFF4
  8264                           prodl	equ	0xFF3
  8265                           intcon	equ	0xFF2
  8266                           postinc0	equ	0xFEE
  8267                           wreg	equ	0xFE8
  8268                           indf1	equ	0xFE7
  8269                           postinc1	equ	0xFE6
  8270                           postdec1	equ	0xFE5
  8271                           fsr1h	equ	0xFE2
  8272                           fsr1l	equ	0xFE1
  8273                           indf2	equ	0xFDF
  8274                           postinc2	equ	0xFDE
  8275                           postdec2	equ	0xFDD
  8276                           fsr2h	equ	0xFDA
  8277                           fsr2l	equ	0xFD9
  8278                           status	equ	0xFD8
  8279                           
  8280 ;; *************** function _Mm_IsAddressEEPROM *****************
  8281 ;; Defined at:
  8282 ;;		line 16 in file "src/MemoryManagement/PIC18F4520/MemoryManagement_PIC18F4520.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;  address         4   15[COMRAM] unsigned long 
  8285 ;; Auto vars:     Size  Location     Type
  8286 ;;		None
  8287 ;; Return value:  Size  Location     Type
  8288 ;;                  1    wreg      unsigned char 
  8289 ;; Registers used:
  8290 ;;		wreg, status,2, status,0
  8291 ;; Tracked objects:
  8292 ;;		On entry : 0/0
  8293 ;;		On exit  : 0/0
  8294 ;;		Unchanged: 0/0
  8295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8296 ;;      Params:         4       0       0       0       0       0       0
  8297 ;;      Locals:         0       0       0       0       0       0       0
  8298 ;;      Temps:          4       0       0       0       0       0       0
  8299 ;;      Totals:         8       0       0       0       0       0       0
  8300 ;;Total ram usage:        8 bytes
  8301 ;; Hardware stack levels used:    1
  8302 ;; Hardware stack levels required when called:    2
  8303 ;; This function calls:
  8304 ;;		Nothing
  8305 ;; This function is called by:
  8306 ;;		_Mm_ReadNVM
  8307 ;;		_Mm_WriteNVM
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311                           	psect	text41
  8312  001AB2                     __ptext41:
  8313                           	opt stack 0
  8314  001AB2                     _Mm_IsAddressEEPROM:
  8315                           	opt stack 24
  8316                           
  8317                           ;MemoryManagement_PIC18F4520.c: 18: if ((uint32_t) ((uint32_t) 0x00000000 + (uint32_t) 0
      +                          x000000FF) >= address) {
  8318                           
  8319                           ;incstack = 0
  8320  001AB2  0E00               	movlw	0
  8321  001AB4  6E14               	movwf	??_Mm_IsAddressEEPROM& (0+255),c
  8322  001AB6  0E01               	movlw	1
  8323  001AB8  6E15               	movwf	(??_Mm_IsAddressEEPROM+1)& (0+255),c
  8324  001ABA  0E00               	movlw	0
  8325  001ABC  6E16               	movwf	(??_Mm_IsAddressEEPROM+2)& (0+255),c
  8326  001ABE  0E00               	movlw	0
  8327  001AC0  6E17               	movwf	(??_Mm_IsAddressEEPROM+3)& (0+255),c
  8328  001AC2  5014               	movf	??_Mm_IsAddressEEPROM,w,c
  8329  001AC4  5C10               	subwf	Mm_IsAddressEEPROM@address,w,c
  8330  001AC6  5015               	movf	??_Mm_IsAddressEEPROM+1,w,c
  8331  001AC8  5811               	subwfb	Mm_IsAddressEEPROM@address+1,w,c
  8332  001ACA  5016               	movf	??_Mm_IsAddressEEPROM+2,w,c
  8333  001ACC  5812               	subwfb	Mm_IsAddressEEPROM@address+2,w,c
  8334  001ACE  5017               	movf	??_Mm_IsAddressEEPROM+3,w,c
  8335  001AD0  5813               	subwfb	Mm_IsAddressEEPROM@address+3,w,c
  8336  001AD2  B0D8               	btfsc	status,0,c
  8337  001AD4  D002               	goto	l2902
  8338                           
  8339                           ;MemoryManagement_PIC18F4520.c: 19: return 0x01;
  8340  001AD6  0E01               	movlw	1
  8341  001AD8  D001               	goto	l399
  8342  001ADA                     l2902:
  8343                           
  8344                           ;MemoryManagement_PIC18F4520.c: 20: }
  8345                           ;MemoryManagement_PIC18F4520.c: 22: return 0x00;
  8346  001ADA  0E00               	movlw	0
  8347  001ADC                     l399:
  8348  001ADC  0012               	return	
  8349  001ADE                     __end_of_Mm_IsAddressEEPROM:
  8350                           	opt stack 0
  8351                           tblptru	equ	0xFF8
  8352                           tblptrh	equ	0xFF7
  8353                           tblptrl	equ	0xFF6
  8354                           tablat	equ	0xFF5
  8355                           prodh	equ	0xFF4
  8356                           prodl	equ	0xFF3
  8357                           intcon	equ	0xFF2
  8358                           postinc0	equ	0xFEE
  8359                           wreg	equ	0xFE8
  8360                           indf1	equ	0xFE7
  8361                           postinc1	equ	0xFE6
  8362                           postdec1	equ	0xFE5
  8363                           fsr1h	equ	0xFE2
  8364                           fsr1l	equ	0xFE1
  8365                           indf2	equ	0xFDF
  8366                           postinc2	equ	0xFDE
  8367                           postdec2	equ	0xFDD
  8368                           fsr2h	equ	0xFDA
  8369                           fsr2l	equ	0xFD9
  8370                           status	equ	0xFD8
  8371                           
  8372 ;; *************** function _ISR *****************
  8373 ;; Defined at:
  8374 ;;		line 16 in file "src/Main.c"
  8375 ;; Parameters:    Size  Location     Type
  8376 ;;		None
  8377 ;; Auto vars:     Size  Location     Type
  8378 ;;		None
  8379 ;; Return value:  Size  Location     Type
  8380 ;;		None               void
  8381 ;; Registers used:
  8382 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8383 ;; Tracked objects:
  8384 ;;		On entry : 0/0
  8385 ;;		On exit  : 0/0
  8386 ;;		Unchanged: 0/0
  8387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8388 ;;      Params:         0       0       0       0       0       0       0
  8389 ;;      Locals:         0       0       0       0       0       0       0
  8390 ;;      Temps:         14       0       0       0       0       0       0
  8391 ;;      Totals:        14       0       0       0       0       0       0
  8392 ;;Total ram usage:       14 bytes
  8393 ;; Hardware stack levels used:    1
  8394 ;; Hardware stack levels required when called:    1
  8395 ;; This function calls:
  8396 ;;		_SerialPort_ISR
  8397 ;; This function is called by:
  8398 ;;		Interrupt level 2
  8399 ;; This function uses a non-reentrant model
  8400 ;;
  8401                           
  8402                           	psect	intcode
  8403  000008                     __pintcode:
  8404                           	opt stack 0
  8405  000008                     _ISR:
  8406                           	opt stack 22
  8407                           
  8408                           ;incstack = 0
  8409  000008  CFFA F002          	movff	pclath,??_ISR
  8410  00000C  CFFB F003          	movff	pclatu,??_ISR+1
  8411  000010  CFE9 F004          	movff	fsr0l,??_ISR+2
  8412  000014  EDB1  F00A         	call	int_func,f	;refresh shadow registers
  8413                           pclatu	equ	0xFFB
  8414                           pclath	equ	0xFFA
  8415                           tblptru	equ	0xFF8
  8416                           tblptrh	equ	0xFF7
  8417                           tblptrl	equ	0xFF6
  8418                           tablat	equ	0xFF5
  8419                           prodh	equ	0xFF4
  8420                           prodl	equ	0xFF3
  8421                           intcon	equ	0xFF2
  8422                           postinc0	equ	0xFEE
  8423                           fsr0l	equ	0xFE9
  8424                           wreg	equ	0xFE8
  8425                           indf1	equ	0xFE7
  8426                           postinc1	equ	0xFE6
  8427                           postdec1	equ	0xFE5
  8428                           fsr1h	equ	0xFE2
  8429                           fsr1l	equ	0xFE1
  8430                           indf2	equ	0xFDF
  8431                           postinc2	equ	0xFDE
  8432                           postdec2	equ	0xFDD
  8433                           fsr2h	equ	0xFDA
  8434                           fsr2l	equ	0xFD9
  8435                           status	equ	0xFD8
  8436                           
  8437                           	psect	intcode_body
  8438  001562                     __pintcode_body:
  8439                           	opt stack 22
  8440  001562                     int_func:
  8441                           	opt stack 22
  8442  001562  0006               	pop		; remove dummy address from shadow register refresh
  8443  001564  CFEA F005          	movff	fsr0h,??_ISR+3
  8444  001568  CFE1 F006          	movff	fsr1l,??_ISR+4
  8445  00156C  CFE2 F007          	movff	fsr1h,??_ISR+5
  8446  001570  CFD9 F008          	movff	fsr2l,??_ISR+6
  8447  001574  CFDA F009          	movff	fsr2h,??_ISR+7
  8448  001578  CFF3 F00A          	movff	prodl,??_ISR+8
  8449  00157C  CFF4 F00B          	movff	prodh,??_ISR+9
  8450  001580  CFF6 F00C          	movff	tblptrl,??_ISR+10
  8451  001584  CFF7 F00D          	movff	tblptrh,??_ISR+11
  8452  001588  CFF8 F00E          	movff	tblptru,??_ISR+12
  8453  00158C  CFF5 F00F          	movff	tablat,??_ISR+13
  8454                           
  8455                           ;Main.c: 18: if (RCIF) {
  8456  001590  BA9E               	btfsc	3998,5,c	;volatile
  8457                           
  8458                           ;Main.c: 19: SerialPort_ISR();
  8459  001592  EC6F  F00D         	call	_SerialPort_ISR	;wreg free
  8460  001596  C00F  FFF5         	movff	??_ISR+13,tablat
  8461  00159A  C00E  FFF8         	movff	??_ISR+12,tblptru
  8462  00159E  C00D  FFF7         	movff	??_ISR+11,tblptrh
  8463  0015A2  C00C  FFF6         	movff	??_ISR+10,tblptrl
  8464  0015A6  C00B  FFF4         	movff	??_ISR+9,prodh
  8465  0015AA  C00A  FFF3         	movff	??_ISR+8,prodl
  8466  0015AE  C009  FFDA         	movff	??_ISR+7,fsr2h
  8467  0015B2  C008  FFD9         	movff	??_ISR+6,fsr2l
  8468  0015B6  C007  FFE2         	movff	??_ISR+5,fsr1h
  8469  0015BA  C006  FFE1         	movff	??_ISR+4,fsr1l
  8470  0015BE  C005  FFEA         	movff	??_ISR+3,fsr0h
  8471  0015C2  C004  FFE9         	movff	??_ISR+2,fsr0l
  8472  0015C6  C003  FFFB         	movff	??_ISR+1,pclatu
  8473  0015CA  C002  FFFA         	movff	??_ISR,pclath
  8474  0015CE  0011               	retfie		f
  8475  0015D0                     __end_of_ISR:
  8476                           	opt stack 0
  8477                           pclatu	equ	0xFFB
  8478                           pclath	equ	0xFFA
  8479                           tblptru	equ	0xFF8
  8480                           tblptrh	equ	0xFF7
  8481                           tblptrl	equ	0xFF6
  8482                           tablat	equ	0xFF5
  8483                           prodh	equ	0xFF4
  8484                           prodl	equ	0xFF3
  8485                           intcon	equ	0xFF2
  8486                           postinc0	equ	0xFEE
  8487                           fsr0h	equ	0xFEA
  8488                           fsr0l	equ	0xFE9
  8489                           wreg	equ	0xFE8
  8490                           indf1	equ	0xFE7
  8491                           postinc1	equ	0xFE6
  8492                           postdec1	equ	0xFE5
  8493                           fsr1h	equ	0xFE2
  8494                           fsr1l	equ	0xFE1
  8495                           indf2	equ	0xFDF
  8496                           postinc2	equ	0xFDE
  8497                           postdec2	equ	0xFDD
  8498                           fsr2h	equ	0xFDA
  8499                           fsr2l	equ	0xFD9
  8500                           status	equ	0xFD8
  8501                           
  8502 ;; *************** function _SerialPort_ISR *****************
  8503 ;; Defined at:
  8504 ;;		line 30 in file "src/SerialPort/SerialPort.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;		None
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;		None
  8509 ;; Return value:  Size  Location     Type
  8510 ;;		None               void
  8511 ;; Registers used:
  8512 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8518 ;;      Params:         0       0       0       0       0       0       0
  8519 ;;      Locals:         0       0       0       0       0       0       0
  8520 ;;      Temps:          1       0       0       0       0       0       0
  8521 ;;      Totals:         1       0       0       0       0       0       0
  8522 ;;Total ram usage:        1 bytes
  8523 ;; Hardware stack levels used:    1
  8524 ;; This function calls:
  8525 ;;		Nothing
  8526 ;; This function is called by:
  8527 ;;		_ISR
  8528 ;; This function uses a non-reentrant model
  8529 ;;
  8530                           
  8531                           	psect	text43
  8532  001ADE                     __ptext43:
  8533                           	opt stack 0
  8534  001ADE                     _SerialPort_ISR:
  8535                           	opt stack 22
  8536                           
  8537                           ;SerialPort.c: 32: if (OERR) {
  8538                           
  8539                           ;incstack = 0
  8540  001ADE  A2AB               	btfss	4011,1,c	;volatile
  8541  001AE0  D002               	goto	i2l507
  8542                           
  8543                           ;SerialPort.c: 33: CREN = 0;
  8544  001AE2  98AB               	bcf	4011,4,c	;volatile
  8545                           
  8546                           ;SerialPort.c: 34: CREN = 1;
  8547  001AE4  88AB               	bsf	4011,4,c	;volatile
  8548  001AE6                     i2l507:
  8549                           
  8550                           ;SerialPort.c: 35: }
  8551                           ;SerialPort.c: 38: SerialPort_CurrentValueRx = RCREG;
  8552  001AE6  CFAE F0D6          	movff	4014,_SerialPort_CurrentValueRx	;volatile
  8553                           
  8554                           ;SerialPort.c: 40: if (0x01 == Loader_IsLoaderEnabled) {
  8555  001AEA  0EFD               	movlw	low _Loader_IsLoaderEnabled
  8556  001AEC  6EF6               	movwf	tblptrl,c
  8557  001AEE                     	if	1	;There is more than 1 active tblptr byte
  8558  001AEE  0E7F               	movlw	high _Loader_IsLoaderEnabled
  8559  001AF0  6EF7               	movwf	tblptrh,c
  8560  001AF2                     	endif
  8561  001AF2                     	if	0	;There are less than 3 active tblptr bytes
  8562  001AF2                     	endif
  8563  001AF2  0008               	tblrd		*
  8564  001AF4  CFF5 F001          	movff	tablat,??_SerialPort_ISR
  8565  001AF8  0401               	decf	??_SerialPort_ISR,w,c
  8566  001AFA  A4D8               	btfss	status,2,c
  8567  001AFC  D004               	goto	i2l2820
  8568                           
  8569                           ;SerialPort.c: 42: (RCIE = 0);
  8570  001AFE  9A9D               	bcf	3997,5,c	;volatile
  8571                           
  8572                           ;SerialPort.c: 44: Loader_State = 0x01;
  8573  001B00  0E01               	movlw	1
  8574  001B02  0100               	movlb	0	; () banked
  8575  001B04  6FD5               	movwf	_Loader_State& (0+255),b
  8576  001B06                     i2l2820:
  8577                           
  8578                           ;SerialPort.c: 45: }
  8579                           ;SerialPort.c: 47: RCIF = 0;
  8580  001B06  9A9E               	bcf	3998,5,c	;volatile
  8581  001B08  0012               	return	
  8582  001B0A                     __end_of_SerialPort_ISR:
  8583                           	opt stack 0
  8584                           pclatu	equ	0xFFB
  8585                           pclath	equ	0xFFA
  8586                           tblptru	equ	0xFF8
  8587                           tblptrh	equ	0xFF7
  8588                           tblptrl	equ	0xFF6
  8589                           tablat	equ	0xFF5
  8590                           prodh	equ	0xFF4
  8591                           prodl	equ	0xFF3
  8592                           intcon	equ	0xFF2
  8593                           postinc0	equ	0xFEE
  8594                           fsr0h	equ	0xFEA
  8595                           fsr0l	equ	0xFE9
  8596                           wreg	equ	0xFE8
  8597                           indf1	equ	0xFE7
  8598                           postinc1	equ	0xFE6
  8599                           postdec1	equ	0xFE5
  8600                           fsr1h	equ	0xFE2
  8601                           fsr1l	equ	0xFE1
  8602                           indf2	equ	0xFDF
  8603                           postinc2	equ	0xFDE
  8604                           postdec2	equ	0xFDD
  8605                           fsr2h	equ	0xFDA
  8606                           fsr2l	equ	0xFD9
  8607                           status	equ	0xFD8
  8608                           pclatu	equ	0xFFB
  8609                           pclath	equ	0xFFA
  8610                           tblptru	equ	0xFF8
  8611                           tblptrh	equ	0xFF7
  8612                           tblptrl	equ	0xFF6
  8613                           tablat	equ	0xFF5
  8614                           prodh	equ	0xFF4
  8615                           prodl	equ	0xFF3
  8616                           intcon	equ	0xFF2
  8617                           postinc0	equ	0xFEE
  8618                           fsr0h	equ	0xFEA
  8619                           fsr0l	equ	0xFE9
  8620                           wreg	equ	0xFE8
  8621                           indf1	equ	0xFE7
  8622                           postinc1	equ	0xFE6
  8623                           postdec1	equ	0xFE5
  8624                           fsr1h	equ	0xFE2
  8625                           fsr1l	equ	0xFE1
  8626                           indf2	equ	0xFDF
  8627                           postinc2	equ	0xFDE
  8628                           postdec2	equ	0xFDD
  8629                           fsr2h	equ	0xFDA
  8630                           fsr2l	equ	0xFD9
  8631                           status	equ	0xFD8
  8632                           
  8633                           	psect	rparam
  8634  0000                     pclatu	equ	0xFFB
  8635                           pclath	equ	0xFFA
  8636                           tblptru	equ	0xFF8
  8637                           tblptrh	equ	0xFF7
  8638                           tblptrl	equ	0xFF6
  8639                           tablat	equ	0xFF5
  8640                           prodh	equ	0xFF4
  8641                           prodl	equ	0xFF3
  8642                           intcon	equ	0xFF2
  8643                           postinc0	equ	0xFEE
  8644                           fsr0h	equ	0xFEA
  8645                           fsr0l	equ	0xFE9
  8646                           wreg	equ	0xFE8
  8647                           indf1	equ	0xFE7
  8648                           postinc1	equ	0xFE6
  8649                           postdec1	equ	0xFE5
  8650                           fsr1h	equ	0xFE2
  8651                           fsr1l	equ	0xFE1
  8652                           indf2	equ	0xFDF
  8653                           postinc2	equ	0xFDE
  8654                           postdec2	equ	0xFDD
  8655                           fsr2h	equ	0xFDA
  8656                           fsr2l	equ	0xFD9
  8657                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1027
    Data        1
    BSS         1045
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     93     107
    BANK0           128     79      87
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Mm_WriteNVM@data	PTR unsigned char  size(2) Largest target is 2
		 -> Mm_SetU16@value(COMRAM[2]), Mm_SetU08@value(COMRAM[1]), 

    Mm_WriteFlash@data	PTR unsigned char  size(2) Largest target is 2
		 -> Mm_SetU16@value(COMRAM[2]), Mm_SetU08@value(COMRAM[1]), 

    Mm_WriteFlashBlock@block	PTR unsigned char  size(2) Largest target is 64
		 -> Mm_WriteFlash@block(BANK0[64]), 

    Mm_WriteEEPROM@data	PTR unsigned char  size(2) Largest target is 2
		 -> Mm_SetU16@value(COMRAM[2]), Mm_SetU08@value(COMRAM[1]), 

    Mm_ReadNVM@data	PTR unsigned char  size(2) Largest target is 8
		 -> Mm_GetU16@value(COMRAM[2]), Mm_GetU08@value(COMRAM[1]), Jvm_RunMethod@method(COMRAM[8]), 

    Mm_ReadFlash@data	PTR unsigned char  size(2) Largest target is 64
		 -> Mm_WriteFlash@block(BANK0[64]), Mm_GetU16@value(COMRAM[2]), Mm_GetU08@value(COMRAM[1]), Jvm_RunMethod@method(COMRAM[8]), 

    Mm_ReadEEPROM@data	PTR unsigned char  size(2) Largest target is 8
		 -> Mm_GetU16@value(COMRAM[2]), Mm_GetU08@value(COMRAM[1]), Jvm_RunMethod@method(COMRAM[8]), 

    Mm_CopyRam@source	PTR unsigned char  size(2) Largest target is 1024
		 -> Heap(BIGRAM[1024]), 

    Mm_CopyRam@destination	PTR unsigned char  size(2) Largest target is 1024
		 -> Heap(BIGRAM[1024]), 

    Stack_Pointer	PTR unsigned short  size(2) Largest target is 1024
		 -> Heap(BIGRAM[1024]), NULL(NULL[0]), 

    Heap_SetBytes@heap	PTR struct . size(2) Largest target is 1024
		 -> Heap(BIGRAM[1024]), 

    Heap_GetHeaderAddress@heap	PTR struct . size(2) Largest target is 1024
		 -> Heap(BIGRAM[1024]), NULL(NULL[0]), 

    sp__Heap_GetHeader	PTR struct . size(2) Largest target is 1024
		 -> Heap(BIGRAM[1024]), NULL(NULL[0]), 

    Heap_GetHeader@heap	PTR struct . size(2) Largest target is 1024
		 -> Heap(BIGRAM[1024]), 

    Heap_GetBytes@heap	PTR struct . size(2) Largest target is 1024
		 -> Heap(BIGRAM[1024]), 

    Heap_GarbageCollect@heap	PTR struct . size(2) Largest target is 1024
		 -> Heap(BIGRAM[1024]), NULL(NULL[0]), 

    Heap_IsIdInUse@heap	PTR struct . size(2) Largest target is 1024
		 -> Heap(BIGRAM[1024]), NULL(NULL[0]), 

    Heap_Init@heap	PTR struct . size(2) Largest target is 1024
		 -> Heap(BIGRAM[1024]), 

    sp__Heap_GetHeaderAddress	PTR void  size(2) Largest target is 1024
		 -> Heap(BIGRAM[1024]), NULL(NULL[0]), 

    Stack_BasePointer	PTR unsigned short  size(2) Largest target is 1024
		 -> Heap(BIGRAM[1024]), NULL(NULL[0]), 

    localVariables	PTR unsigned short  size(2) Largest target is 1024
		 -> Heap(BIGRAM[1024]), NULL(NULL[0]), 

    Jvm_RunMethod@method_ptr	PTR struct javaclass_method_header size(2) Largest target is 1024
		 -> JavaClass_Data(CODE[1024]), 

    Jvm_Main@method	PTR struct javaclass_method_header size(2) Largest target is 1024
		 -> JavaClass_Data(CODE[1024]), 

    Stack_CurrentPointer	PTR unsigned short  size(2) Largest target is 1024
		 -> Heap(BIGRAM[1024]), NULL(NULL[0]), 

    Api_PortRegistry_Tris	PTR unsigned char  size(2) Largest target is 1
		 -> TRISC(ABS[1]), TRISB(ABS[1]), TRISA(ABS[1]), NULL(NULL[0]), 

    Api_PortRegistry_Port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTC(ABS[1]), PORTB(ABS[1]), PORTA(ABS[1]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_Jvm_Main
    _Loader_ProcessCommand->_Loader_ProcessCommandLoad
    _Loader_ProcessCommandLoad->_Mm_SetU16
    _Mm_WriteNVM->_Mm_WriteFlash
    _Mm_WriteFlash->_Mm_ReadFlash
    _Mm_WriteFlashBlock->_Mm_Write
    _Mm_WriteEEPROM->_Mm_Write
    _Jvm_Main->_Jvm_RunMethod
    _Jvm_RunMethod->_Heap_GetBytes
    _Mm_GetU16->_Mm_ReadNVM
    _Heap_GetHeaderAddress->_Heap_GetHeader
    _Api_ExecuteNativeMethod->_API_MicroApplication_Sleep
    _API_MicroApplication_Sleep->___aldiv
    ___aldiv->___wmul
    _Jvm_Init->_Stack_Init
    _Stack_Init->_Heap_GetBytes
    _Heap_GetBytes->_Mm_GetU08
    _Heap_GarbageCollect->_Heap_IsIdInUse
    _JavaClass_Init->_Mm_GetU08
    _Mm_GetU08->_Mm_ReadNVM
    _Mm_ReadNVM->_Mm_ReadEEPROM
    _Mm_ReadNVM->_Mm_ReadFlash

Critical Paths under _ISR in COMRAM

    _ISR->_SerialPort_ISR

Critical Paths under _main in BANK0

    _Mm_SetU16->_Mm_WriteNVM
    _Mm_SetU08->_Mm_WriteNVM
    _Mm_WriteNVM->_Mm_WriteFlash

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   39812
                                             92 COMRAM     1     1      0
                     _JavaClass_Init
                           _Jvm_Init
                           _Jvm_Main
              _Loader_ProcessCommand
                    _SerialPort_Init
 ---------------------------------------------------------------------------------
 (1) _SerialPort_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Loader_ProcessCommand                                2     2      0    7339
                                             45 COMRAM     2     2      0
          _Loader_ProcessCommandLoad
                    _SerialPort_Send
 ---------------------------------------------------------------------------------
 (2) _SerialPort_Send                                      1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Loader_ProcessCommandLoad                            3     3      0    7079
                                             42 COMRAM     3     3      0
                          _Mm_SetU08
                          _Mm_SetU16
 ---------------------------------------------------------------------------------
 (3) _Mm_SetU16                                            6     0      6    3447
                                             36 COMRAM     6     0      6
                        _Mm_WriteNVM
 ---------------------------------------------------------------------------------
 (3) _Mm_SetU08                                            5     0      5    3601
                                             36 COMRAM     5     0      5
                        _Mm_WriteNVM
 ---------------------------------------------------------------------------------
 (4) _Mm_WriteNVM                                         10     0     10    3225
                                             69 BANK0     10     0     10
                 _Mm_IsAddressEEPROM
                  _Mm_IsAddressFlash
                     _Mm_WriteEEPROM
                      _Mm_WriteFlash
 ---------------------------------------------------------------------------------
 (5) _Mm_WriteFlash                                       80    70     10    1713
                                             25 COMRAM    11     1     10
                                              0 BANK0     69    69      0
                       _Mm_ReadFlash
                           _Mm_Write
                 _Mm_WriteFlashBlock
 ---------------------------------------------------------------------------------
 (6) _Mm_WriteFlashBlock                                   7     1      6     352
                                             16 COMRAM     7     1      6
                           _Mm_Write
 ---------------------------------------------------------------------------------
 (5) _Mm_WriteEEPROM                                      14     4     10     401
                                             16 COMRAM    14     4     10
                           _Mm_Write
 ---------------------------------------------------------------------------------
 (7) _Mm_Write                                             1     1      0      34
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Jvm_Main                                            12    12      0   23931
                                             82 COMRAM    10    10      0
                      _Jvm_RunMethod
                          _Mm_GetU08
                          _Mm_GetU16
 ---------------------------------------------------------------------------------
 (2) _Jvm_RunMethod                                       34    32      2   17025
                                             48 COMRAM    34    32      2
            _Api_ExecuteNativeMethod
                      _Heap_GetBytes
              _Heap_GetHeaderAddress
                      _Heap_SetBytes
                          _Mm_GetU08
                          _Mm_GetU16
                         _Mm_ReadNVM
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     290
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _Mm_GetU16                                            6     2      4    3069
                                             35 COMRAM     6     2      4
                         _Mm_ReadNVM
 ---------------------------------------------------------------------------------
 (3) _Heap_SetBytes                                        8     6      2     243
                                             15 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _Heap_GetHeaderAddress                                5     3      2     202
                                             24 COMRAM     5     3      2
                     _Heap_GetHeader
 ---------------------------------------------------------------------------------
 (4) _Heap_GetHeader                                       9     7      2     135
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _Api_ExecuteNativeMethod                              5     5      0    1586
                                             41 COMRAM     5     5      0
         _API_MicroApplication_Sleep
   _Api_PortRegistry_GetPortRegistry
            _Api_PortRegistry_SetPin
 ---------------------------------------------------------------------------------
 (4) _Api_PortRegistry_SetPin                              2     1      1     412
                                             15 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (4) _Api_PortRegistry_GetPortRegistry                     1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _API_MicroApplication_Sleep                           6     4      2     975
                                             35 COMRAM     6     4      2
                      _Timer_T0_Init
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     415
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     428
                                             21 COMRAM    14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _Timer_T0_Init                                        1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Jvm_Init                                             0     0      0    5011
                          _Heap_Init
                         _Stack_Init
 ---------------------------------------------------------------------------------
 (2) _Stack_Init                                           4     4      0    4966
                                             48 COMRAM     4     4      0
                      _Heap_GetBytes
                          _Mm_GetU08
 ---------------------------------------------------------------------------------
 (3) _Heap_GetBytes                                        8     6      2    1435
                                             40 COMRAM     8     6      2
                _Heap_GarbageCollect
                          _Mm_GetU08 (ARG)
 ---------------------------------------------------------------------------------
 (4) _Heap_GarbageCollect                                 10    10      0     975
                                             28 COMRAM    10    10      0
                     _Heap_IsIdInUse
                         _Mm_CopyRam
                    _Stack_IsIdInUse
 ---------------------------------------------------------------------------------
 (5) _Stack_IsIdInUse                                      9     7      2     132
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (5) _Mm_CopyRam                                           6     0      6     304
                                             15 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (5) _Heap_IsIdInUse                                      13    11      2     268
                                             15 COMRAM    13    11      2
 ---------------------------------------------------------------------------------
 (2) _Heap_Init                                            2     2      0      45
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JavaClass_Init                                       3     3      0    3531
                                             40 COMRAM     3     3      0
                          _Mm_GetU08
 ---------------------------------------------------------------------------------
 (2) _Mm_GetU08                                            5     1      4    3531
                                             35 COMRAM     5     1      4
                         _Mm_ReadNVM
 ---------------------------------------------------------------------------------
 (3) _Mm_ReadNVM                                          10     0     10    2653
                                             25 COMRAM    10     0     10
                 _Mm_IsAddressEEPROM
                  _Mm_IsAddressFlash
                      _Mm_ReadEEPROM
                       _Mm_ReadFlash
 ---------------------------------------------------------------------------------
 (6) _Mm_ReadFlash                                        10     0     10     589
                                             15 COMRAM    10     0     10
 ---------------------------------------------------------------------------------
 (4) _Mm_ReadEEPROM                                       10     0     10     260
                                             15 COMRAM    10     0     10
 ---------------------------------------------------------------------------------
 (5) _Mm_IsAddressFlash                                    8     4      4     216
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _Mm_IsAddressEEPROM                                   8     4      4     185
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                 14    14      0       0
                                              1 COMRAM    14    14      0
                     _SerialPort_ISR
 ---------------------------------------------------------------------------------
 (9) _SerialPort_ISR                                       1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _JavaClass_Init
     _Mm_GetU08
       _Mm_ReadNVM
         _Mm_IsAddressEEPROM
         _Mm_IsAddressFlash
         _Mm_ReadEEPROM
         _Mm_ReadFlash
   _Jvm_Init
     _Heap_Init
     _Stack_Init
       _Heap_GetBytes
         _Heap_GarbageCollect
           _Heap_IsIdInUse
           _Mm_CopyRam
           _Stack_IsIdInUse
         _Mm_GetU08 (ARG)
           _Mm_ReadNVM
             _Mm_IsAddressEEPROM
             _Mm_IsAddressFlash
             _Mm_ReadEEPROM
             _Mm_ReadFlash
       _Mm_GetU08
         _Mm_ReadNVM
           _Mm_IsAddressEEPROM
           _Mm_IsAddressFlash
           _Mm_ReadEEPROM
           _Mm_ReadFlash
   _Jvm_Main
     _Jvm_RunMethod
       _Api_ExecuteNativeMethod
         _API_MicroApplication_Sleep
           _Timer_T0_Init
           ___aldiv
             ___wmul (ARG)
           ___wmul
         _Api_PortRegistry_GetPortRegistry
         _Api_PortRegistry_SetPin
       _Heap_GetBytes
         _Heap_GarbageCollect
           _Heap_IsIdInUse
           _Mm_CopyRam
           _Stack_IsIdInUse
         _Mm_GetU08 (ARG)
           _Mm_ReadNVM
             _Mm_IsAddressEEPROM
             _Mm_IsAddressFlash
             _Mm_ReadEEPROM
             _Mm_ReadFlash
       _Heap_GetHeaderAddress
         _Heap_GetHeader
       _Heap_SetBytes
       _Mm_GetU08
         _Mm_ReadNVM
           _Mm_IsAddressEEPROM
           _Mm_IsAddressFlash
           _Mm_ReadEEPROM
           _Mm_ReadFlash
       _Mm_GetU16
         _Mm_ReadNVM
           _Mm_IsAddressEEPROM
           _Mm_IsAddressFlash
           _Mm_ReadEEPROM
           _Mm_ReadFlash
       _Mm_ReadNVM
         _Mm_IsAddressEEPROM
         _Mm_IsAddressFlash
         _Mm_ReadEEPROM
         _Mm_ReadFlash
       ___lwdiv
       ___lwmod
       ___wmul
     _Mm_GetU08
       _Mm_ReadNVM
         _Mm_IsAddressEEPROM
         _Mm_IsAddressFlash
         _Mm_ReadEEPROM
         _Mm_ReadFlash
     _Mm_GetU16
       _Mm_ReadNVM
         _Mm_IsAddressEEPROM
         _Mm_IsAddressFlash
         _Mm_ReadEEPROM
         _Mm_ReadFlash
   _Loader_ProcessCommand
     _Loader_ProcessCommandLoad
       _Mm_SetU08
         _Mm_WriteNVM
           _Mm_IsAddressEEPROM
           _Mm_IsAddressFlash
           _Mm_WriteEEPROM
             _Mm_Write
           _Mm_WriteFlash
             _Mm_ReadFlash
             _Mm_Write
             _Mm_WriteFlashBlock
               _Mm_Write
       _Mm_SetU16
         _Mm_WriteNVM
           _Mm_IsAddressEEPROM
           _Mm_IsAddressFlash
           _Mm_WriteEEPROM
             _Mm_Write
           _Mm_WriteFlash
             _Mm_ReadFlash
             _Mm_Write
             _Mm_WriteFlashBlock
               _Mm_Write
     _SerialPort_Send
   _SerialPort_Init

 _ISR (ROOT)
   _SerialPort_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     400      17       66.7%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     4F      57       5       68.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     5D      6B       1       84.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C2      15        0.0%
DATA                 0      0     4C2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Jan 07 20:15:24 2015

                         Mm_GetU16@address 0024                           Mm_GetU08@address 0024  
                 Mm_WriteFlashBlock@offset 0017                          ??_SerialPort_Init 0010  
                        ??_SerialPort_Send 0010                                         l12 144C  
                                       l42 17E6                                         l51 1748  
                                       l80 1C0E                        ___wmul@multiplicand 0012  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                              __CFG_OSC$HS 000000                                        l211 078E  
                                      l303 14F2                            _Heap_BaseOffset 0062  
                                      l217 0A76                                        l403 19CA  
                                      l332 12EE                                        l413 17F6  
                                      l237 105E                                        l422 137E  
                                      l270 1B74                                        l407 1834  
                                      l248 0CA2                                        l432 16AE  
                                      l512 1C28                                        l257 1172  
                                      l265 1638                                        l425 1B22  
                                      l534 1C20                                        l278 13B8  
                                      l448 0B34                                        l457 1258  
                                      l399 1ADC                               __CFG_CPB$OFF 000000  
                 ?_Api_PortRegistry_SetPin 0010                               __CFG_CPD$OFF 000000  
                                      _ISR 0008                                        _RX9 007D5E  
                                      _TX9 007D66                                        fsr2 000FD9  
                                      prod 000FF3                    __end_of_Stack_IsIdInUse 14F4  
                                      wreg 000FE8                             _Heap_GetHeader 15D0  
                           _Heap_IsIdInUse 0F8E                             Mm_CopyRam@size 0014  
                                     ?_ISR 0001                              _Mm_WriteFlash 0A78  
                                     l2102 18D6                                       l2104 18F6  
                                     l2210 0E2A                                       l2060 0FA0  
                                     l2212 0E36                                       l2204 0E08  
                                     l3100 0442                                       l2310 0C8E  
                                     l2230 0E8E                                       l2222 0E6A  
                                     l2214 0E3A                                       l3110 0492  
                                     l3102 045C                                       l1087 1792  
                                     l2136 185E                                       l2072 0FFA  
                                     l3112 04A6                                       l3104 0472  
                                     l3040 0230                                       l3032 019E  
                                     l1097 1982                                       l2066 0FC4  
                                     l2074 0FFC                                       l2226 0E78  
                                     l2250 17A0                                       l3130 0538  
                                     l3106 0488                                       l3034 01C8  
                                     l3026 0152                                       l3210 0922  
                                     l3018 00FA                                       l2076 102C  
                                     l2092 14AE                                       l2308 0C86  
                                     l2252 17B0                                       l2324 1600  
                                     l2316 15DC                                       l3204 0918  
                                     l3116 04BA                                       l3060 02DE  
                                     l3028 0184                                       l3212 0A58  
                                     l3300 10C0                                       l2078 1050  
                                     l2086 1486                                       l2094 14B2  
                                     l2238 144A                                       l2254 17C0  
                                     l2270 1716                                       l2262 16FA  
                                     l2350 0CF8                                       l2326 1624  
                                     l2430 1760                                       l3134 0550  
                                     l3126 0510                                       l3118 04E0  
                                     l3070 034C                                       l3062 02E8  
                                     l3054 02AC                                       l3038 020C  
                                     l3302 10E2                                       l2272 1720  
                                     l2352 0D18                                       l2344 0CC2  
                                     l2360 0D8A                                       l2432 1768  
                                     l3080 03A6                                       l3072 035C  
                                     l3064 02F2                                       l3048 027A  
                                     l2258 17D2                                       l2266 1706  
                                     l2354 0D38                                       l2346 0CD0  
                                     l2442 1788                                       l2434 176C  
                                     l2450 1958                                       l3074 036E  
                                     l3066 0310                                       l3234 12EC  
                                     l3314 110A                                       l3306 10F0  
                                     l2292 0BAC                                       l2276 172E  
                                     l2348 0CD8                                       l2452 1960  
                                     l3172 0716                                       l3164 06C0  
                                     l3076 0392                                       l3068 032E  
                                     l3084 03B0                                       l3260 0F14  
                                     l3252 0EAA                                       l3316 1110  
                                     l2198 0DD8                                       l2358 0D58  
                                     l2454 1964                                       l3166 06C6  
                                     l3078 039C                                       l3086 03F4  
                                     l3262 0F16                                       l3334 1654  
                                     l3096 042A                                       l3088 040E  
                                     l3264 0F34                                       l3280 107E  
                                     l3272 1068                                       l2458 1978  
                                     l3290 10A0                                       l3338 1664  
                                     l3292 10AA                                       l3276 1072  
                                     l3284 1082                                       l2902 1ADA  
                                     l3286 1092                                       l3278 1076  
                                     l3296 10B4                                       l2914 19C8  
                                     l2932 16E0                                       l2942 0AEA  
                                     l2950 0B1E                                       l2938 0AAC  
                                     l2962 0B84                                       l2876 1808  
                                     l2886 191A                                       l2968 1338  
                                     l2976 120E                     ?_Heap_GetHeaderAddress 0019  
                                     _BRGH 007D62                                       _CREN 007D5C  
                                     u2010 0356                                       u2020 0368  
                                     u2015 0350                                       u1145 0DC0  
                                     u2025 0362                                       u2034 0384  
                                     u1155 0DF0                                       u2035 037E  
                                     u1334 0CEC                                       u1335 0CE8  
                                     u1344 0D0C                                       u1345 0D08  
                                     u2065 0466                                       u2145 1298  
                                     u1354 0D2C                                       u1355 0D28  
                                     u2075 047C                                       u1364 0D4C  
                                     u1365 0D48                                       u2095 055E  
                                     u1825 1B2E                                       u1905 0A8C  
                                     u1826 1B30                                       u1915 0A9C  
                                     _RCIE 007CED                             ??_Mm_ReadFlash 001A  
                                     _RCIF 007CF5                                       _OERR 007D59  
                                     _TMR0 000FD6                                       _SPEN 007D5F  
                                     _SREN 007D5D                      __end_of_Heap_GetBytes 11C2  
                                     _TXIE 007CEC                                       _TXIF 007CF4  
                                     _TXEN 007D65                                       _SYNC 007D64  
                                     _Heap 00D7                        _Heap_GarbageCollect 0B92  
                Heap_GarbageCollect@offset 0023                                       _main 163A  
                                     fsr0h 000FEA                                       fsr1h 000FE2  
                                     fsr0l 000FE9                                       fsr2h 000FDA  
                                     indf1 000FE7                                       fsr1l 000FE1  
                                     indf2 000FDF                                       fsr2l 000FD9  
                                     pclat 000FFA                              ??_Mm_WriteNVM 0025  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 0018                             _Mm_WriteEEPROM 169C  
                    __end_of_Heap_SetBytes 1400                                      ??_ISR 0002  
                          ??_Mm_ReadEEPROM 001A                     Jvm_RunMethod@oldLocals 003B  
                     ?_Heap_GarbageCollect 0001                            __end_of___aldiv 0EA0  
                                    ?_main 0001                                      _EEADR 000FA9  
                                    _BRG16 007DC3                                      _T0CON 000FD5  
                   _Loader_IsLoaderEnabled 7FFD                     __end_of_Heap_GetHeader 163A  
                          __end_of___lwdiv 179C                     __end_of_Heap_IsIdInUse 1060  
                          __end_of___lwmod 198C                                      i2l507 1AE6  
                                    _RCREG 000FAE                                      _SPBRG 000FAF  
                                    _PORTA 000F80                                      _PORTB 000F81  
                                    _PORTC 000F82                                      _TRISA 000F92  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _TXREG 000FAD                              __CFG_WRT0$OFF 000000  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                _SerialPort_CurrentValueRx 00D6                              __CFG_WRT3$OFF 000000  
                           __CFG_EBTR0$OFF 000000                             __CFG_EBTR1$OFF 000000  
                           __CFG_EBTR2$OFF 000000                             __CFG_EBTR3$OFF 000000  
                   Jvm_RunMethod@nextcodes 0045                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                           ?_Mm_WriteFlash 001A                             __CFG_EBTRB$OFF 000000  
              __size_of_Mm_IsAddressEEPROM 002C                                 _Mm_CopyRam 18C4  
                               _Mm_ReadNVM 12F0                                      tablat 000FF5  
                  Heap_GarbageCollect@heap 0025   __end_of_Api_PortRegistry_GetPortRegistry 17E8  
__size_of_Api_PortRegistry_GetPortRegistry 004C         ??_Api_PortRegistry_GetPortRegistry 0010  
        ?_Api_PortRegistry_GetPortRegistry 0001           _Api_PortRegistry_GetPortRegistry 179C  
                  Heap_GarbageCollect@size 0021                             Mm_ReadNVM@data 0022  
                                    status 000FD8                     __end_of_Mm_WriteEEPROM 16F6  
                           _SerialPort_ISR 1ADE                            __initialization 187C  
                      Jvm_RunMethod@method 0049                 Loader_ProcessCommand@value 002F  
                             __end_of_main 169C                                 _Loader_Cmd 00D3  
                      __end_of_Mm_WriteNVM 125A            __end_of_Api_PortRegistry_SetPin 174A  
                         __end_of_Mm_Write 1B34                           Mm_CopyRam@source 0012  
                    ??_Heap_GarbageCollect 001D                  Heap_GetHeaderAddress@heap 001C  
                         __end_of_Jvm_Main 0F8E                           __end_of_Jvm_Init 1BF0  
                       __size_of_Heap_Init 002A       Api_PortRegistry_GetPortRegistry@port 0010  
                                   ??_main 005D                              __activetblptr 000002  
                          ?_Heap_GetHeader 0010                            ?_Heap_IsIdInUse 0010  
                           Mm_SetU16@value 0029                             Mm_SetU08@value 0029  
           __size_of_Loader_ProcessCommand 00B8                           ?_Stack_IsIdInUse 0010  
            __end_of_Loader_ProcessCommand 1118                    _Api_ExecuteNativeMethod 0CA6  
          API_MicroApplication_Sleep@value 0024                         __size_of_Mm_GetU08 0034  
                       __size_of_Mm_GetU16 003E                    Jvm_RunMethod@oldUnsteal 003C  
                  Jvm_RunMethod@method_ptr 003D                                     _EEDATA 000FA8  
                                   _EECON2 000FA7                         __size_of_Mm_SetU08 003A  
                       __size_of_Mm_SetU16 003A                          Mm_ReadFlash@bytes 0014  
                                   i2l2820 1B06                                     _INTCON 000FF2  
                                   _TABLAT 000FF5                     __end_of_SerialPort_ISR 1B0A  
                    __end_of_Timer_T0_Init 1C26                                     _TBLPTR 000FF6  
                                   _TMR0IE 007F95                                     _TMR0IF 007F92  
                                   _TMR0ON 007EAF                  Api_ExecuteNativeMethod@id 002C  
                          ?_Mm_WriteEEPROM 0011                                  ??___aldiv 001E  
                                   ___wmul 1B84                   Jvm_RunMethod@pcIncrement 003F  
                                ??___lwdiv 0014                                  ??___lwmod 0014  
                                   clear_0 1884                                     clear_1 1896  
                                   clear_2 18A2                       __end_of_Mm_ReadFlash 1832  
                       Mm_WriteFlash@block 0080                                 _Stack_Init 14F4  
                       Mm_WriteFlash@bytes 001E                    __size_of_JavaClass_Init 0022  
                   __size_of_Jvm_RunMethod 0A5C                            ??_Mm_WriteFlash 0024  
                             __mediumconst 7BFA                                     tblptrh 000FF7  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                          Mm_ReadNVM@bytes 001E                                ?_Mm_CopyRam 0010  
                            _Jvm_Main$1131 005A                                ?_Mm_ReadNVM 001A  
                          ?_SerialPort_ISR 0001                                 __accesstop 0080  
                  __end_of__initialization 18BA                       Mm_ReadEEPROM@address 0010  
                          _SerialPort_Init 1BAA                            _SerialPort_Send 1C26  
                        __end_of_Heap_Init 1B5E                                _Mm_WriteNVM 11C2  
                           __pcstackCOMRAM 0001                          __end_of_Mm_GetU08 1AB2  
                        __end_of_Mm_GetU16 1A0A                               __pidataBANK0 1C32  
                        __end_of_Mm_SetU08 1A7E                          __end_of_Mm_SetU16 1A44  
                    Mm_CopyRam@destination 0010                         _Mm_WriteFlashBlock 1908  
                ??_Api_ExecuteNativeMethod 002A               ??_API_MicroApplication_Sleep 0026  
                  ??_Heap_GetHeaderAddress 001B                        ?_Mm_WriteFlashBlock 0011  
                               __pbssBANK0 00CF                                  ?_Mm_Write 0001  
                       Mm_ReadEEPROM@bytes 0014           __size_of_Api_PortRegistry_SetPin 0054  
              Api_PortRegistry_SetPin@pins 0011                Api_PortRegistry_SetPin@type 0010  
                                ?_Jvm_Main 0001                                  ?_Jvm_Init 0001  
                            _Jvm_RunMethod 001C                              Heap_Init@heap 0010  
                     ??_Mm_WriteFlashBlock 0017                 ?_Loader_ProcessCommandLoad 0001  
                                  ?___wmul 0010                        SerialPort_Send@byte 0010  
      __size_of_API_MicroApplication_Sleep 007C                        __size_of_Mm_CopyRam 0044  
                      __size_of_Mm_ReadNVM 0090                                ?_Stack_Init 0001  
               __end_of_JavaClass_DataSize 7FFD                    __end_of_SerialPort_Init 1BCE  
                        _Mm_IsAddressFlash 198C                    __end_of_SerialPort_Send 1C32  
                          Mm_WriteNVM@data 00CD                         ?_Mm_IsAddressFlash 0010  
                               ??_Mm_Write 0010                                 ??_Jvm_Main 0053  
                               ??_Jvm_Init 0035                             ?_Jvm_RunMethod 0031  
                      ??_Mm_IsAddressFlash 0014                                    __Hparam 0000  
                      Mm_WriteEEPROM@bytes 0015                         Heap_SetBytes@bytes 0010  
                                  __Lparam 0000                      __size_of_Mm_ReadFlash 004A  
           __end_of_Loader_IsLoaderEnabled 7FFE                           Heap_GetHeader@id 0014  
                                  ___aldiv 0DA4                            __size_of___wmul 0026  
                         ??_Heap_GetHeader 0012          __end_of_Loader_ProcessCommandLoad 12F0  
                                  ___lwdiv 174A                           ??_Heap_IsIdInUse 0012  
                                  ___lwmod 194A                           Heap_IsIdInUse@id 0010  
                         Heap_IsIdInUse@ii 001A                      __end_of_Mm_ReadEEPROM 187C  
                                  __pcinit 187C                             _JavaClass_Data 7BFB  
                                  __ramtop 0600                             _JavaClass_Init 1BF0  
                     _Stack_CurrentPointer 0066                                    __ptext0 163A  
                                  __ptext1 1BAA                                    __ptext2 1060  
                                  __ptext3 1C26                                    __ptext4 125A  
                                  __ptext5 1A0A                                    __ptext6 1A44  
                                  __ptext7 11C2                                    __ptext8 0A78  
                                  __ptext9 1908                     __size_of_Heap_GetBytes 00AA  
                             __size_of_ISR 15C8                  __end_of_Mm_IsAddressFlash 19CC  
               __end_of_Mm_IsAddressEEPROM 1ADE                           ___aldiv@dividend 0016  
                Mm_IsAddressEEPROM@address 0010                        Mm_WriteFlash@offset 00C4  
                         ??_Mm_WriteEEPROM 001B                             __pintcode_body 1562  
                     end_of_initialization 18BA                     __size_of_Heap_SetBytes 0080  
                             _Mm_ReadFlash 17E8                              __Lmediumconst 7BFA  
                                  int_func 1562                        __size_of_Stack_Init 006E  
              __end_of_Heap_GarbageCollect 0CA6                           ___aldiv@quotient 0020  
                                  postdec1 000FE5                                    postdec2 000FDD  
                                  postinc0 000FEE                                    postinc1 000FE6  
                                  postinc2 000FDE                     __end_of_JavaClass_Data 7FFB  
                   __end_of_JavaClass_Init 1C12               Jvm_RunMethod@oldLocalsOffset 0039  
                     Heap_GetHeader@offset 0015                   Mm_IsAddressFlash@address 0010  
       __end_of_API_MicroApplication_Sleep 147C                 _API_MicroApplication_Sleep 1400  
                         ??_SerialPort_ISR 0001                           ?_SerialPort_Init 0001  
                         ?_SerialPort_Send 0001                      _Loader_ProcessCommand 1060  
                             ??_Mm_CopyRam 0016                               ??_Mm_ReadNVM 0024  
                  _Api_PortRegistry_SetPin 16F6                            ??_Jvm_RunMethod 0033  
                 __size_of_Stack_IsIdInUse 0078                              _Heap_GetBytes 1118  
                             ?_Mm_WriteNVM 00C5                                  _Heap_Init 1B34  
                    Jvm_RunMethod@bytecode 0044                            ?_JavaClass_Init 0001  
                            _Heap_SetBytes 1380                             __end_of___wmul 1BAA  
                                _Mm_GetU16 19CC                                  _Mm_GetU08 1A7E  
                       __end_of_Mm_CopyRam 1908                         __end_of_Mm_ReadNVM 1380  
                   __size_of_Timer_T0_Init 0014                                  _Mm_SetU16 1A0A  
                                _Mm_SetU08 1A44                 __size_of_Mm_IsAddressFlash 0040  
                      start_initialization 187C                               _Loader_State 00D5  
                              __end_of_ISR 15D0                         Jvm_RunMethod@index 0031  
                    __end_of_Mm_WriteFlash 0B92                          _Stack_BasePointer 00D1  
           __size_of_Heap_GetHeaderAddress 0026                      Mm_WriteEEPROM@address 0011  
            __end_of_Heap_GetHeaderAddress 1B84                             _localVariables 006A  
                           ?_Heap_GetBytes 0029                  Mm_WriteFlashBlock@address 0011  
                         Mm_ReadFlash@data 0018                          __size_of_Mm_Write 002A  
                        __size_of_Jvm_Main 00EE                          __size_of_Jvm_Init 0022  
                               ?_Heap_Init 0001                  _Loader_CmdProcessingState 00D4  
                           Jvm_Main@method 0057                                   ??___wmul 0014  
                           ?_Heap_SetBytes 0010                ??_Loader_ProcessCommandLoad 002B  
                        Mm_WriteFlash@data 0022                                __pdataBANK0 00D6  
                     Heap_IsIdInUse@offset 0018                               ??_Stack_Init 0031  
                               ?_Mm_GetU16 0024                                 ?_Mm_GetU08 0024  
                        Stack_IsIdInUse@id 0010                          Stack_IsIdInUse@ii 0017  
                       Heap_GetHeader@heap 0017                                 ?_Mm_SetU16 0025  
                               ?_Mm_SetU08 0025                                __pbssBIGRAM 00D7  
                         Mm_SetU16@address 0025                           Mm_SetU08@address 0025  
                    _Api_PortRegistry_Port 005E                      _Api_PortRegistry_Tris 0060  
                              __pbssCOMRAM 005E              Loader_ProcessCommand@response 002E  
                            __pcstackBANK0 0080                  ??_Api_PortRegistry_SetPin 0011  
                   ?_Loader_ProcessCommand 0001                         _JavaClass_DataSize 7FFB  
                       Heap_IsIdInUse@heap 001B                              _Timer_T0_Init 1C12  
                        Mm_ReadEEPROM@data 0018                         __end_of_Stack_Init 1562  
                           Mm_Write@GIEBit 0010                           ___lwdiv@dividend 0010  
        API_MicroApplication_Sleep@counter 0026                          ??_Stack_IsIdInUse 0012  
                                __pintcode 0008                              __pmediumconst 7BFA  
              __size_of_Mm_WriteFlashBlock 0042                                   ?___aldiv 0016  
                                 ?___lwdiv 0010                                   ?___lwmod 0010  
                 ?_Api_ExecuteNativeMethod 0001               Api_ExecuteNativeMethod@value 002D  
                          Jvm_RunMethod@pc 0040                        Mm_ReadFlash@address 0010  
                       Mm_WriteEEPROM@data 0019                          Heap_SetBytes@heap 0016  
                       Mm_WriteEEPROM@byte 001B                          Heap_SetBytes@size 0014  
                _Loader_ProcessCommandLoad 125A                           ___lwdiv@quotient 0014  
                          ??_Heap_GetBytes 002B                            ___aldiv@divisor 001A  
                           ?_Timer_T0_Init 0001                            ___aldiv@counter 001E  
                           ___wmul@product 0014                         _Mm_IsAddressEEPROM 1AB2  
                     _Loader_CmdDataOffset 00CF                            ??_Heap_SetBytes 0012  
                              ??_Heap_Init 0010                       __size_of_Mm_WriteNVM 0098  
                      ?_Mm_IsAddressEEPROM 0010                              _Stack_Pointer 0068  
                    Mm_WriteFlash@saddress 00C0                                ??_Mm_GetU16 0028  
                              ??_Mm_GetU08 0028                           Mm_WriteNVM@bytes 00C9  
                        ___wmul@multiplier 0010                             Mm_GetU16@value 0028  
                           Mm_GetU08@value 0028                                ??_Mm_SetU16 002B  
                              ??_Mm_SetU08 002A                ?_API_MicroApplication_Sleep 0024  
                     ??_Mm_IsAddressEEPROM 0014                         Heap_GetBytes@bytes 0029  
                        Jvm_RunMethod@aux1 0051                          Jvm_RunMethod@aux2 0047  
                                 _Mm_Write 1B0A                     __size_of_Mm_ReadEEPROM 004A  
                                 _Jvm_Main 0EA0                                   _Jvm_Init 1BCE  
                               _EECON1bits 000FA6                           ??_JavaClass_Init 0029  
                                 __Hrparam 0000                              Jvm_Main@flags 0059  
                            Jvm_Main@index 005C            __end_of_Api_ExecuteNativeMethod 0DA4  
                                 __Lrparam 0000                           __size_of___aldiv 00FC  
                         __size_of___lwdiv 0052                           __size_of___lwmod 0042  
             __size_of_Heap_GarbageCollect 0114                    __size_of_Heap_GetHeader 006A  
                          ___lwdiv@divisor 0012                    __size_of_Heap_IsIdInUse 00D2  
                          ___lwdiv@counter 0016                                   __ptext10 169C  
                                 __ptext11 1B0A                                   __ptext20 0CA6  
                                 __ptext12 0EA0                                   __ptext21 16F6  
                                 __ptext13 001C                                   __ptext30 0B92  
                                 __ptext22 179C                                   __ptext14 194A  
                                 __ptext31 147C                                   __ptext23 1400  
                                 __ptext15 174A                                   __ptext40 198C  
                                 __ptext32 18C4                                   __ptext24 1B84  
                                 __ptext16 19CC                                   __ptext41 1AB2  
                                 __ptext33 0F8E                                   __ptext25 0DA4  
                                 __ptext17 1380                                   __ptext34 1B34  
                                 __ptext26 1C12                                   __ptext18 1B5E  
                                 __ptext43 1ADE                                   __ptext35 1BF0  
                                 __ptext27 1BCE                                   __ptext19 15D0  
                                 __ptext36 1A7E                                   __ptext28 14F4  
                                 __ptext37 12F0                                   __ptext29 1118  
                                 __ptext38 17E8                                   __ptext39 1832  
                          ??_Timer_T0_Init 0010                              __size_of_main 0062  
                    __end_of_Jvm_RunMethod 0A78                   __size_of_SerialPort_Init 0024  
                 __size_of_SerialPort_Send 000C                       Mm_WriteFlash@address 001A  
                  __size_of_Mm_WriteEEPROM 005A                          Heap_GetBytes@heap 002F  
                            _Mm_ReadEEPROM 1832                          Heap_GetBytes@size 002D  
                  Heap_GetHeaderAddress@id 001B                    ??_Loader_ProcessCommand 002E  
           Loader_ProcessCommandLoad@value 002D                                 _INTCONbits 000FF2  
                                 intlevel2 0000                            _Stack_IsIdInUse 147C  
                    _Heap_GetHeaderAddress 1B5E                           ___lwmod@dividend 0010  
       __size_of_Loader_ProcessCommandLoad 0096                           _Loader_CmdLength 0064  
                  __size_of_SerialPort_ISR 002C                     __size_of_Mm_WriteFlash 011A  
                Timer_T0_Init@interruption 0010                          Mm_ReadNVM@address 001A  
                           ?_Mm_ReadEEPROM 0010                            ___lwmod@divisor 0012  
                          ___lwmod@counter 0014                               ___aldiv@sign 001F  
         __size_of_Api_ExecuteNativeMethod 00FE                              ?_Mm_ReadFlash 0010  
                       Mm_WriteNVM@address 00C5                 __end_of_Mm_WriteFlashBlock 194A  
                  Mm_WriteFlashBlock@block 0015  
